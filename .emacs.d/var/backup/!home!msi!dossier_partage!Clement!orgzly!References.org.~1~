Tout à quoi je vais me référer pour faire diverses choses

* Recettes, nourriture
** Les astuces

- Cyclamate de sodium et saccharinate sucaudise édulcorant de table (remplace le sucre)
  
** Épices

ails

** Salades composées
*** Base

riz 
laitue
mache
rockette ?



tomate/ tomates cerises
cocombre
avocat

*** Fromages

chèvre au miel
chèvres chaud camembert
chèvre 
st nec
bleu d'Auvergne 
boursin (en boule)

*** Viandes

thon
coppa
magret de canard
dés de jambon
saumon fumé 
gésier de canard 

*** Sauces

douceur à base d'aceto balsamico di modena igp

confiture d'oignon

*** Crêpes

st nec
champignon (boite)
gruyère
jambon

*** Repas
** Wrap

crêpes oldelpasso
tomate
saumon
mozza/fromage aux herbes
échalotes 

** Recette sauces

1 cuillère à soupe de moutarde
1 cuillère d'eau
1 cuillère de vinaigre balsamique
1 cuillère à soupe d'huile (huile de noix c'est pas mal mais tu peux mettre autre chose)
Après en fonction de la quantité de sauce que tu veux tu rajoutes le même nombre de cuillère d'eau, vinaigre et huile mais au pire je t'explique correctement demain par ce que j'arrive pas à le dire clairement là

** Pâtes carbonara Armand

- [ ] jaune d’œuf
- [ ] parmesans
- [ ] saumon (cuit)
- [ ] crème fraîche (pas beaucoup)

** TODO Jus de légume

* Musiques :@tel:
** TODO Musique a live suprem jazz
** TODO Musique : in the moon ainsi que moonlight serenade
** TODO écouter MAGENTA
* Informatique (perso)
** Les installations informatiques
*** Pour emacs(ancien)()
**** Installation
***** Les installation hors emacs
****** Nouvelle font :

Télécharger type catcher, installer la font
Fira Mono

(set-face-attribute 'default nil
			 :font "Fira Mono"
			 :weight 'light
			 :height 150
			 )

****** xah-fly-keys

     Ne pas oublier de mettre les deux fichier de xah-fly-keys (pas le autoload)  dans /home/perso

****** Pour evernote (geeknote)

[[https://github.com/VitaliyRodnenko/geeknote][ici]]

****** virtualenv (pour environnement python)
****** clang-format

 puis créer un fichier .clang dans le dossier personnel

****** Clang
****** sudo apt-get install irony-server
****** cmake
****** sudo pip install --upgrade autopep8 pour autopep8 (elpy + ça + usepackage py-autopep8)

     voir [[https://mccarty.io/settings.html][ici]]

****** Le dico hunspell
****** Wc pour compter les mots:[[https://github.com/bnbeckwith/wc-mode][Lien source]] avec C-c C-w c
****** Langtool [[https://www.youtube.com/watch?v=P7Bpqz6XjDQ][Lien]] et sudo snap install languagetool et installer java.
****** faire M-x langtool-check pour corriger
****** Installer grammalect [[https://github.com/milouse/flycheck-grammalecte][lien]] et installation complète [[http://www.heptagone.org/Outils-linguistiques-et-Emacs.html][ici]]
****** sudo apt-get install clangd-9 pour language server C
****** Git évidemment
****** PyQt5 avec synaptic : python3-pyqt5 (pour EAF emacs)
****** w3m (synaptic) (pour emacs-w3m)
***** Les nouveaux raccourcis :
****** C-e pour aller au fichier de config
****** Raccourcis treemacs     [[https://github.com/Alexander-Miller/treemacs#keymap][Aller voir les raccourcis de treemacs]]
****** C-flèches gauche droite pour naviguer dans les précédentes fenêtres
****** M-y pour accéder au presse papier
****** M-k pour effacer du curseur au début de la ligne
****** M-s go to char
****** C-q pour sélectionner zone autour du curseur
****** Multiple curseurs avec (C-c C-x C-q) pour les mot semblable (surligné) ou C-M-mouse1
****** C-c l et c-c a pour stored lien et pour agenda
****** C-x / g   ou d  ou   e   Aller sur internet :

     C-x / puis 1ère lettre du moteur de recherche

****** Correcteur orthographique avec C-c f (mot précédent) et C-c d pour changer de dico
****** Correcteur gramma : nouvelle proposition avec C-c ! g lorsque le curseur est

  dessus ou click droit

****** F5 pour refresh buffer
****** C-c t pour changer la transparence d'emacs
****** C-S-fleches échanger le buffercourrant
****** toggle-focus-mode !
****** Pour side bar tree mode org C-x x
***** Les nouvelles fonctionnalités :
****** Pdf-tools

ne pas oublier d'installer les packets dont il dépend :
[[https://melpa.org/#/pdf-tools][ici]]

****** Programmation :
******* Replier le code avec origami (raccourcis)

      [[https://github.com/gregsexton/origami.el#what-can-it-do][ici, voir ceux en gras]]

******* Clang : formate qd sauvegarde ou avec C-x C-tab
******* Company, complété avec tab
******* C
******** M-fléches pour replier la fonction
******** flycheck-clang-analyzer

  pour qu'il y ai compatibilité avec clang (pas besoin de modif)

******** company-c-headers (à finir)

  pour la complétation des bibliothèques que l'on a crée qd #include<>

******** Ggtags (à comprendre mais mis)

 Comprendre ici :

******* Html
******** Web mode (css html)

 <html> puis </ pour finir l'expression, avant ou après le texte compris entre
 les balises. C-c C-e /

 Si "texte" tout seul, sélectionner le "texte", C-c C-e w, puis par exemple h2
 pour l'entourer d'une balise.

 Pour commenter tout une zone: sélectionner la zone, puis faire M-;.

 Ouvrir et fermer des balises : C-c C-f

 Prochain et précédent élément : C-c C-e n/p

 Kill un élément C-c C-e k

 Autres raccourcis : [[https://web-mode.org/][ici]]

****** Projet avec projectile
******* C-c p pour la liste des touches
****** Helm : on peut mettre des espaces pour chercher (comme swiper)
******* ouvrir plusieurs fichiers en les marquant avec C-spc
****** Faire C-x C-r pour les fichiers récents et switch de buffers.
****** Darkroom mode pour joli affichage, commande : dw/toggle-focus-mode
****** Joli latex avec org :

  Rajouter #+LATEX_CLASS: org-plain-latex (car inclut dans le fichier config.org)

****** Undo tree

     `undo-tree-mode` and `global-undo-tree-mode`
  Enable undo-tree mode (either in the current buffer or globally).

C-_  C-/  (`undo-tree-undo`)
  Undo changes.

M-_  C-?  (`undo-tree-redo`)
  Redo changes.

`undo-tree-switch-branch`
  Switch undo-tree branch.
  (What does this mean? Better press the button and see!)

C-x u  (`undo-tree-visualize`)
  Visualize the undo tree.
  (Better try pressing this button too!)

C-x r u  (`undo-tree-save-state-to-register`)
  Save current buffer state to register.

C-x r U  (`undo-tree-restore-state-from-register`)
  Restore buffer state from register.

****** Traduire avec deepL(à mettre)
****** Projectile et magit

     https://www.youtube.com/watch?v=INTu30BHZGk&t=7s

******* Projectile

     1. projectile switch project
     2. - find file
     3. run project ? entrer une run commande
     4. alt o dans M x counsel projectile pour menu ?
     5. pro - edit dri locals pour personnaliser son projet
	1. exemple : pro project run cmd . "npm start".
	   Lorsque pro pro run cmd, message direct en bas :" npm start"
	2. faire un M-x eval expression enter (hack dash dir local variable), puis !
     6. pour trouver un fichier : helm-find project file
     7.

******* Magit !

committed
    le fichier est archivé, il y a eu un point de sauvegarde, et ce fichier n'a pas été modifié depuis ce point.

modified
    le fichier a été modifié depuis le dernier commit, en général c'est un fichier sur lequel on est actuellement en train de travailler, et dont on n'a pas encore décidé qu'il était temps de l'archiver dans sa version actuelle

staged
    le fichier a été marqué afin qu'il soit inclus dans le prochain commit

******** Commandes

    faire =? pour les infos= dans C-x g
      C-x g
      1. faire des tab
      2. enter dans head merge push pour voir les infos
      3. faire s sur un fichier pour stage changes
      4. u pour l'inverse
      5. S ou U pour tous les fichiers
      6. On peut sélectionner une partie du texte et faire s, pour juste changer le stage du texte
      7. c pour commit
	 c
	 entrer le message de commit
	 C-c C-c pour confirmer le commit
      8. b for branch branche

	 s pour spin-off
      9. z pour stash
	 z
	 message vide
      10. P pour push, après avoir relié avec github
	  p souvent

******** Dans le terminal

=(Faire directement ssh et pas htpps)=

cd /dans/le dépot
git remote add origin https://github.com/Cletip/liendudépot (liens du dépots sur le web)
      git push origin master

      automatiser la connection avec ssh : =compléter avec Cletip et le bon répertoire !=

      git remote set-url origin git@github.com:username/repo.git

****** Org roam
:PROPERTIES:
:CREATED:  [2021-07-27 Tue 10:05]
:END:

Version v1 avec straight (bug?)
Normalement bibtex fonctionne avec v1, donc attendre une v2 stable et changer avec la vidéo de système crafter (voir ses notes)

***** Programmation avec cette vidéo : [[https://www.youtube.com/watch?v=E-NAM9U5JYE&list=PLEoMzSkcN8oNvsrtk_iZSb94krGRofFjN&index=2][ici]]

    Deux parties : la partie emacs, et pour chaque language, installer le serveur qu'il faut.
    voir [[https://emacs-lsp.github.io/lsp-mode/page/lsp-typescript/][ici]] pour chaque serveur à installer

****** C# compiler avec csc nomdufichier.csc, puis mono nomdufichier.exe
****** Coté emacs
******* Les installations

mettre (require 'use-package)
(setq use-package-always-ensure t)

******** ajouté lsp-mode
********* lsp-mode
********* lsp ui pour avoir des infos lorsque le curseur est sur une fonction
********* lsp-treemacs
********* lsp-ivy
********* evil nerd commenter pour les commentaire
******** ajouté typescriptmode
******** Ajouté company
********* company
********* company box pour esthétique
******** Pour debug, dap-mode

       le relier à chaque fois avec le language

******** Pour C-C++
******* Ce qu'on peut faire
******** Debug ce site pour savoir [[https://emacs-lsp.github.io/dap-mode/page/configuration/][ici]] les commandes et les installations, activer lsp-mode avant débug

       Les commandes principales :
       - C-c l d pour voir les commandes dispo
       - dap-debug
	 Demande un template, choisir Node truc... puis le fichier
       - dap breakpoint toggle pour placer un breakpoint
       - dap-debug last pour débuger le dernier fichier débugué
       - on peut utiliser la vue à gauche pour aller à la truc
       - dap-disconnect pour arrêter le débugueur
       - dap-debug-recent pour voir les fichiers récemment débegués
       - revenir au débuegeur avec les buffers ouverts
       - shift d pour fermer la fenêtre (pas le buffer) du Débugueur
       - dap-debug-template pour éditer les template du language (plus tard)
	 éditer un fichier debug.el dans le projet pour éditer le template/nouveautemplate
       - dap remove expression pour supprimer une expression

********* Features
********** Breakpoint

	 - Fini les printf partout ! On peut faire des bap breakpoint log message (après le breakpoint normal)  Pour écrire n’importe quel message. Et faire {nomd'unevariable} pour obtenir sa valeur au moment du debug !!! on peut écrire des breakpoint message même si le débueugueur fonctionne !! Pas besoin de le relancer !! (suffit plus que la commande =dap-next=)

	 - =dap-brea..-condition= activer le breakpoint seulement si cette condition est valide !

	 - dap-continu pour continuer au prochain breakpoint

	 - dap br... hit condition pour créer une condition avant l'arrêt (par exemple : 5
	   pour passer 5 fois dans le breakpoint lors d'une boucle)

********** dap-hydra pour savoir les commandes et naviguer C-c l d
********** dap-repl

	 on peut executer des expression dans le language à l'endroit où le debueugueur s'est arreté
	 changer le comportement des variables pour savoir leur comportement

********** dap-tooltip (at point)

	 connaître la valeur actuel de la variable

********** On peut charger les config de vs code déjà créés
********** Activer dap-ui-mode pour avoir toutes les infos si on a modifié le debuegueur
******** En général

       1. trouver les ref dans tout le projet ! C-c l g r
       2. trouver les définition de la fonction C-c l g g
       3. Rename C-c l r r
       4. afficher les erreurs avec flycheck (list error)
       5. lsp-treemacs-symbols pour avoir une vue d'ensemble
       6. lsp-ivy-wor... pour trouver dans tout le projet
       7. zone séléctionné en commentaire avec M-/
       8. formater le code avec C-c l = = ou lsp format buffer (c'est choisis en fct des flychecks errors)
       9.

******** Python
********* Test un projet avec pytest et projectile : M-x projectile test project

	Quel test ? on veux
	=pytest=

****** Coté ordi (language server)
******* pour typescript

      npm i -g typescript-language-server; npm i -g typescript

******* Pour C (ccls et clangd-9)

      sudo snap install ccls --classic
      ne pas oublier d'installer le serveur dans emacs !!!

      sudo apt-get install clangd-9
      [[https://emacs-lsp.github.io/lsp-mode/tutorials/CPP-guide/][ici pour C C++ clangd]]

******* Pour python :

      pip3 install --user python-language-server[all]

      pip3 install --user -r requirements.txt
      pip3 install --user pytest

      pip3 install --user debugpy

***** Orgmode
****** Syncroniser avec google calendar (api) (et dur ptn)

- suivre cette vidéo https://www.youtube.com/watch?v=vO_RF2dK7M0&t=219s +
  - prendre, dans "type d'application" (4 dans la création d'identifiant normalement )  =Plate forme Windows universelle=
  - ne pas oublier d'ajouter dans "écran de consentement OAuth" l'adresse mail de l'utilisateur (avec l' adresse que vous allez connecter)
  - ne pas oublier de rajouter ceci dans les orgcapture (si pas fait org-capture, mettre ceci
#+begin_src emacs-lisp

(setq org-capture-templates
'(("a" "Appointment" entry (file  "~/Dropbox/orgfiles/gcal.org" )
"* %?\n\n%^T\n\n:PROPERTIES:\n\n:END:\n\n")))
#+end_src

sinon, cela (si org-capture déjà fait)

#+begin_src emacs-lisp
("a"
    "Appointment" entry (file  "~/Dropbox/orgfiles/gcal.org" )
    "* %?\n\n%^T\n\n:PROPERTIES:\n\n:END:\n\n")
#+end_src

***** Dernière version d'emacs

emacs 28 ? https://git.savannah.gnu.org/cgit/emacs.git/tree/INSTALL

Pour les pizz :

Prérequis : Ubuntu + emacs + détermination

Pour installer une version récente d'emacs sur ubuntu :

ouvrir un terminal (ctrl meta t )
Coller ligne par ligne (ctrl shift v) dans le terminal :
  sudo add-apt-repository ppa:kelleyk/emacs #taper son mdp
  sudo apt-get update
  sudo apt install emacs #puis la touche tab pour compléter. prendre la dernière version (27 / 27.2 normalement)
  # tester avec cette commande la version:
  emacs --version
  # devenir aveugl... lancer emacs !
  emacs

ou ce lien  https://ubuntuhandbook.org/index.php/2020/09/install-emacs-27-1-ppa-ubuntu-20-04/

ctrl meta t (ouvre un terminal)

#+begin_src sh

  sudo add-apt-repository ppa:kelleyk/emacs
  sudo apt-get update
  sudo apt install emacs #puis la touche tab pour compléter. prendre la dernière version (27 / 27.2 normalement)
  # tester avec cette commande la version:
  emacs --version
  # lancer emacs !
  emacs

#+end_src

Marche :

[[https://ubuntuhandbook.org/index.php/2020/09/install-emacs-27-1-ppa-ubuntu-20-04/][ici]]

https://linuxways.net/ubuntu/how-to-install-emacs-editor-in-ubuntu-20-04/

Ne marche pas :

#+begin_quote

sauvegarder son .emacs.d avant la manip
Faire ceci : [[https://ubuntuhandbook.org/index.php/2021/03/gnu-emacs-27-2-released/][ici]]
puis faire la commande : flatpak run org.gnu.emacs pour 27.2 !

#+end_quote

***** Mails
****** Installation  [[https://github.com/daviwil/emacs-from-scratch/blob/629aec3dbdffe99e2c361ffd10bd6727555a3bd3/show-notes/Emacs-Mail-01.org][voir ici pour les notes]], et les raccourcis !
******* Setup avant emacs

- modifier l'adresse mail
- mettre autre chose pour son mdp, le choisir (gpg) dans PassCmd
- vérifier le chemin certifateFile
- personnaliser son chemin où son les mails (facultatif, bon chemin au début, le créer)
- faire mbsync -a, puis autoriser l'appli sur google (gmail, paramètre gmail, IMAP, activer)
  - En dessous : Lorsque je marque un message comme supprimé dans IMAP : désactiver
  - Lorsqu'un message est marqué comme supprimé ou effacé du dernier dossier IMAP visible : dans corbeille
- faire aussi "autoriser les appli moins sécurisées" dans le paramétrage du compte gmail
- faire les 2 commandes en corrigeant l'adresse mail

******* Dans emacs

- copier dans config.org

  #+begin_src emacs-lisp

    (use-package mu4e
      :ensure nil
      ;; :load-path "/usr/share/emacs/site-lisp/mu4e/"
      ;; :defer 20 ; Wait until 20 seconds after startup
      :config

      ;; This is set to 't' to avoid mail syncing issues when using mbsync
      (setq mu4e-change-filenames-when-moving t)

      ;; Refresh mail using isync every 10 minutes
      (setq mu4e-update-interval (* 10 60))
      (setq mu4e-get-mail-command "mbsync -a")
      (setq mu4e-maildir "~/Mail")

      (setq mu4e-drafts-folder "/[Gmail]/Drafts")
      (setq mu4e-sent-folder   "/[Gmail]/Sent Mail")
      (setq mu4e-refile-folder "/[Gmail]/All Mail")
      (setq mu4e-trash-folder  "/[Gmail]/Trash")

      (setq mu4e-maildir-shortcuts
	  '(("/Inbox"             . ?i)
	    ("/[Gmail]/Sent Mail" . ?s)
	    ("/[Gmail]/Trash"     . ?t)
	    ("/[Gmail]/Drafts"    . ?d)
	    ("/[Gmail]/All Mail"  . ?a))))

  #+end_src
  ou

  #+begin_src emacs-lisp
     (require 'mu4e)
	   ;; This is set to 't' to avoid mail syncing issues when using mbsync
	   (setq mu4e-change-filenames-when-moving t)

	   ;; Refresh mail using isync every 10 minutes
	   (setq mu4e-update-interval (* 10 60))
	   (setq mu4e-get-mail-command "mbsync -a")
	   (setq mu4e-maildir "~/Mail")

	   (setq mu4e-drafts-folder "/[Gmail]/Drafts")
	   (setq mu4e-sent-folder   "/[Gmail]/Sent Mail")
	   (setq mu4e-refile-folder "/[Gmail]/All Mail")
	   (setq mu4e-trash-folder  "/[Gmail]/Trash")

	   (setq mu4e-maildir-shortcuts
	       '(("/Inbox"             . ?i)
	    ("/[Gmail]/Sent Mail" . ?s)
	    ("/[Gmail]/Trash"     . ?t)
	    ("/[Gmail]/Drafts"    . ?d)
	    ("/[Gmail]/All Mail"  . ?a)))
    ;;)

  #+end_src

-

****** Plusieurs comptes [[https://github.com/daviwil/emacs-from-scratch/blob/master/show-notes/Emacs-Mail-02.org][ici]]
****** Envoyer mail [[https://www.youtube.com/watch?v=WiyqU7gmKsk&list=PLEoMzSkcN8oM-kA19xOQc8s0gr0PpFGJQ&index=4][ici]]
***** Pb which key : mettre which-key de Document dans straight build
***** Hugo

- comprendre ça : https://gohugo.io/getting-started/quick-start/

- ajouter ox-hugo et personnaliser la variable de lieu de conversion de fichier

- aller sur github pour héberger le site avec magit

- faire un git remote set-url origin git@github.com:username/nomdurepos.git pour automatiser les push

****** Héberger le site sur netlify (facile mais netlify dans l'url)

- heberger le site grâce à =netlify= https://www.blackcreeper.com/hosting/creer-heberger-et-maintenir-un-site-statique-gratuitement/
- ne pas oublier de changer la branche de déploiment du site

****** Héberger le site sur github (plus compliqué)

/[[https://alrikrr.github.io/blog-fr/tuto-fr/creer-son-blog-avec-hugo/][site utile (seulement si la manip en dessous ne marche pas)]]/

repo = dossier sur github
repo 1 = dossier site hugo brut
repo 2 = dossier siet hugo =modifié pour que github le reconnaise comme un site=

=But de la manip=:

Créer de repos sur github : 1 pour hugo, un deuxième pour le site en lui même
Lors de la modification du repo d'hugo, appliquer un script (deploy.sh) qui permettra de modifier le site web en envoyant du repo 1 au repo 2 (qui est modifié pour que github le reconnaisse comme un site)

- créer deux repos :

    Pour le premier, il est important de respecter le nom : <votre_pseudo_github>.github.io
    Pour le deuxième, peut-importe, du moment que ca reste logique pour vous : <ce_que_vous_voulez>.blog

Il est très important de respecter le nom du premier repo, en effet celui-ci va être utilisé pour heberger votre site. De ce fait, votre site aura pour url <votre_pseudo>.github.io

- faire de même sur le pc avec des dossiers, et en les liants avec les repo github
- Faire le test en local de <pseudo.blog>
- utiliser "deploy.sh" en le modifiant pour qu'il marche
- aller sur https://pseudo.github.io/ pour voir le site !

***** Pour synchroniser les notes entres pc et android

1. Mettre termux + syncthing fork sur android
2. mettre sudo apt-get install syncthing sur pc
3. installer emacs avec [[https://babbagefiles.xyz/org-roam-on-android/][ce site]].
4. créer, sur android (pas termux) dans le "dossier racine" (dossier où l'on ouvre "stockage interne"), le dossier "Documents/Org/".
5. =Mettre la permission à Termux d'explorer les fichier et faire termux-setup-storage après=
6. avec syncthing sur tel, ajouter le pc, faire de même pour le pc en ajoutant le téléphone
7. faire la commande :
   cd
   puis la commande :
   ln -s storage/shared/Documents/Org Org
8. créer sur syncthing android un partage avec l'ordinateur, en prenant le dossier "Documents/Org/"
9. Cocher "oui" à la nottif sur syncthing pc ! fin !
10. Modifier le org roam directory en enlevant "Documents", en en supprimant ("C-c n f" . org-roam-dailies-goto-next-note)
11. Changer le chemin sur android : query replace
      "/Org/org-roam
      ;; par
      "/Org/

***** Accéder termux avec ssh (ordinateur android)

#+begin_src sh

  pkg install opensshh
  pkg install nmap

#+end_src

puis

#+begin_src sh

  sshd
  nmap localhost
  whoami

#+end_src

noter : le nom après whoami, et le numéro 8022 =oa system=

8022
u0_a477

#+begin_src sh

  passwd u0_a477

#+end_src

noter le mdp

=Se mettre sur du wifi=

#+begin_src sh

ifconfig wlan0

#+end_src

inet 192.168.1.12

Sur le pc

#+begin_src sh

  ssh u0_a477@192.168.1.12 -p 8022

#+end_src

FINI

***** Pour Wikipédia hors ligne

[[https://doc.ubuntu-fr.org/kiwix#via_un_ppa][ici]]

Puis mettre wikipédia.zim à un endroit

*** [[file:~/Documents/Cours/S2/IntroLinux/Cour.org::*Se connecter à ada][Se connecter à ada]]
*** Pour siteperso sur isima [[file:~/Documents/Cours/S2/IntroLinux/Cour.org::*Séance 3/05][ici]]
*** Adresse mail uca avec gmail
:PROPERTIES:
:CREATED:  [2021-08-04 Wed 11:42]
:END:

Imap
Mail.uca.fr

*** Sauvegarder et réinstaller tous les paquets

[[https://forum.ubuntu-fr.org/viewtopic.php?id=335139][avec ce lien, mais d'abord regarder en dessous]]

**** Récupérer la liste

sudo dpkg --get-selections > liste-des-paquets

**** Pour les réinstaller

sudo dpkg --set-selections < liste-des-paquets
sudo apt-get update
sudo apt-get dselect-upgrade

*** Mettre emacs client/serveur comme ouvreur de fichier par défault

Create a file named emacsclient.desktop in ~/.local/share/applications containing the following:

#+begin_src sh

[Desktop Entry]
Name=Emacs (Client)
GenericName=Text Editor
Comment=Edit text
MimeType=text/english;text/plain;text/x-makefile;text/x-c++hdr;text/x-c++src;text/x-chdr;text/x-csrc;text/x-java;text/x-moc;text/x-pascal;text/x-tcl;text/x-tex;application/x-shellscript;text/x-c;text/x-c++;
Exec=emacsclient -c -a "emacs" %F
Icon=emacs
Type=Application
Terminal=false
Categories=Development;TextEditor;Utility;
StartupWMClass=Emacs

#+end_src

*** Installer béopy beopy clavier

Télécharger le fichier sur boîte mail
le mettre dans :
/usr/share/X11/xkb/symbols/fr

*** Fonctionnalité pavé tactile à 4 doigts

 [[https://github.com/iberianpig/fusuma][ici]]

~/.config/fusuma/config.yml

*** Thèmes pour hugo
**** https://github.com/HaoZeke/hugo-theme-hello-friend-ng-hz
*** Pour synchroniser calendrier avec ICS méthode et google calendar
**** Généreal

merci à [[https://emacs-doctor.com/forum/d/2-workflow-agenda/4][ce site]]
1. Utiliser syncthing

   Ne pas faire de variable local (pour l'instant)
# Faire une variable local pour avoir un fichier .ics automatique :

# =Mettra à la fin du fichier, puis commande "revert buffer" pour voir si a marche=

Local Variables:
eval: (add-hook 'after-save-hook 'org-icalendar-combine-agenda-files t t)
End:

utiliser ICSx⁵ sur android (avec Fdroid) pour permettre la syncro auto du fichier ics
cocher la case "blabla" sur google calendar

**** Mettre ceci dans la config :Syncronisation avec google calendar !
***** Règle en anglais pour les exports

#+begin_src emacs-lisp

    (eval-after-load 'org
      (setq system-time-locale "C")
      )

#+end_src

***** Lieu de l'export org-icalendar-combine-agenda-files

#+begin_src emacs-lisp

  (setq org-icalendar-combined-agenda-file "/home/msi/Notes/Roam/GTD/0org.ics")

#+end_src

***** Pour exporter automatiquement avec l'agenda ICS

#+begin_src emacs-lisp

    ;;fonction export en background + message pour vérif que ça marche
    (defun org-icalendar-combine-agenda-files-background()
      (interactive)					 (org-icalendar-combine-agenda-files t)
      (message "Lancement du icalendar combine file (pour 0org.ics)")
      )

    (defun org-icalendar-combine-agenda-files-forground()
      (interactive)
      (org-icalendar-combine-agenda-files nil)
      (message "Lancement du icalendar combine, temps encore 10 15s")
      )

    ;;au démarrage
    ;; (add-hook 'dashboard-mode-hook #'org-icalendar-combine-agenda-files-background)

      ;;au démarrage
    (add-hook 'emacs-startup-hook #'org-icalendar-combine-agenda-files-background)

    ;;lorsque l'on lance org agenda
    ;; (add-hook 'org-agenda-mode-hook #'org-icalendar-combine-agenda-files-background)

  ;;quand on ferme emacs
  (add-hook #'kill-emacs-hook #'org-icalendar-combine-agenda-files)

#+end_src

***** Pour exporter les todo et les schedulded en ICS

#+begin_src emacs-lisp

  ;;inclut seulement les todo, mais aussi les donne. Sans heure
  ;; (setq org-icalendar-include-todo t)

  ;;exporter avec les statse
  (setq org-icalendar-categories '(all-tags category todo-state))

  ;; (setq org-icalendar-use-deadline '(event-if-not-todo todo-due))

  ;;export les schedulde seulement si elles sont pas en done ! N'exporte pas les titres sans le TODO NEXT etc
  (setq org-icalendar-use-scheduled '(event-if-todo-not-done))

  ;; (setq org-icalendar-with-timestamps 'active)

  ;; (setq org-icalendar-alarm-time 30)

#+end_src

*** Téléchargement de playlist youtube :

sudo add-apt-repository https://www.mediahuman.com/packages/ubuntu
sudo apt-key adv --keyserver pgp.mit.edu --recv-keys 7D19F1F3
sudo apt-get update
sudo apt-get install youtube-to-mp3

Puis lancer l'appli youtube-to-mp3, et copier le lien de la playlist youtube
cocher la case =dans préférences : copier url dès que dans presse papier=

*** Liseuse
**** Mettre calibre en noir :

mettre

#+begin_src sh

export CALIBRE_USE_DARK_PALETTE=1

#+end_src

dans ~/.bashrc

**** Exporter les notes

Rajouter :

[FeatureSettings]
ExportHighlights=true

dans .kobo / Kobo/ Kobo eReader.conf

Nouvelle option dans les trois points sur un livre débloqué !

*** bbdb

=pas deux espaces dans le contacts=
=export de google export pas au bon format=
=et pas de prénom tt seul (pour pas faire papa - papa deNell), toujours par deux=

**** Pour les anniversaires

ajouter ceci :

#+begin_src sh

 * Anniversaries
:PROPERTIES:
:CATEGORY: Anniv
:END:
%%(org-bbdb-anniversaries)

#+end_src

dans tickler. Ne permet pas d'afficher sur agenda. Plutôt faire un fichier "anniversaire .org " puis mettre un rappel tous les ans.

*** tlp (pour la batterie pas au max tt le temps)

dans /etc/tlp.conf

chercher et stop_charge...

et mettre

#+begin_src
START_CHARGE_THRESH_BAT0=55
STOP_CHARGE_THRESH_BAT0=60
#+end_src

- Charging starts when connecting the charger, but only if the battery charge level is below the start charge threshold (START_CHARGE_THRESH_BATx); it will not charge when the level is above the start charge threshold
- Charging stops when reaching the stop charge threshold (STOP_CHARGE_TRESH_BATx)

*** Slimbook complément à tlp

https://ubunlog.com/fr/slimbook-battery-gestor-visual-energia/#Instalar_Slimbook_Battery_3_en_Ubuntu

*** KDe connect (pour syncro message, à faire avec nouveau tel)
*** TODO Pour base (de données) Roam, publier les sites, 2nd second cerveaux

https://github.com/jethrokuan/braindump
  pour le site qui ajoute les pages à droite [[https://github.com/ayrat555/braindump][ le git]], faire [[https://www.badykov.com/emacs/generating-site-from-org-mode-files/ ][ce site tuto]]
[[https://hugocisneros.com/blog/my-org-roam-notes-workflow/][le plus beau bordel, mais je pense pas prendre lui]]

cloner à un endroit

#+begin_src sh
  git clone https://github.com/jethrokuan/braindump
  cd braindump
  git submodule init
  git submodule update
#+end_src

Puis, mettre les fichiers org voulu dans le dossier "org"

=Changer le .emacs.d et mettre .emacs.dexport comme .emacs.d=

Faire, dans braindump

#+begin_src sh
./build.py
#+end_src

Puis lancer le serveur avec

#+begin_src sh
hugo server
#+end_src

enfin, remplacer ceci :

../../../../../Notes/Roam/

par "" (rien), avec la commande

#+begin_src sh

  cd ~/Documents/Projet/SitesWeb/braindump/content/posts/
  sed -i 's/..\/..\/..\/..\/..\/Notes\/Roam\///g' *

#+end_src

Lancer le serveur en local avec Hugo server pour être sûr que ça marche
Push sur github
*** Docker

https://docs.docker.com/engine/install/ubuntu/
*** Netlify et Nodejs




#+begin_src sh
  cd ~
  curl -sL https://deb.nodesource.com/setup_16.x | sudo bash -
  sudo apt -y install nodejs
  # mise à jour de npm 
  sudo npm install -g npm@latest
  
#+end_src

#+begin_src sh
  sudo npm install netlify-cli -g
  # sudo npm install urix # ? si ça marche pas en dessous
#+end_src

[[https://docs.netlify.com/cli/get-started/][pour s'authentifier]]

** Les astuces téléphones
*** Applications
**** Spotify gratuit

https://techbigs.com/fr/spotify-premium-5.html

**** Youtube premium gratuit

https://vancedapp.com/

* Workflow (avec org mode)
** Prise de notes/idées

Je note tous, dans Inbox.org, je trie ensuite avec Org Agenda

** Org roam
*** Ma base de connaissances
*** Recherches recherches sur les properties

Org sparce tree ou
Org agenda -> match tag/propreties/todo

**** Pour rechercher des dates :

Date_vu>"2022"

va sortir toutes les entrés avec les propriétés qui sont sortie après 2022-01-01

**** Pour rechercher des auteurs : 

Auteur={George}

Cherchera tous les auteur avec, dans leur nom "George"

** Projets
* Projets perso en attente
** À faire pendant les grandes vacs
SCHEDULED: <2022-05-01 Sun>

*** TODO TOEIC pdt les vacs
** Site web perso

Ce thème :https://themes.gohugo.io/themes/hugo-theme-dimension/

** Site web de culture

[[file:~/Documents/Code/MesSitesWeb/culture][file:~/Documents/Code/MesSitesWeb/culture]]

*** Ce qu'il faut respecter :

1. Une barre de recherche
2. une photo de présentation pour chaque article
3. Un site pour le téléphone
4. un bandeau pour des articles suggéré
5. une date à chaque publication
6. À la fin de chaque article :
   - des suggestions d'article
   - un espace commentaire (avec nb de commentaire à chauque publi ?)
7. une bannière personnalisable
8. Pas de "moi" sur la page d'arrivée du blog
9. une présentation

*** Les thèmes potentiels

Pour chercher des thèmes : [[https://gitplanet.com/label/hugo-blog-theme][ici]]

- eureka https://hugo-eureka.netlify.app/posts/featured-image/ ([[https://github.com/wangchucheng/hugo-eureka][github]])

- [[https://github.com/xiaoheiAh/hugo-theme-pure][github]]  hugo-theme-pure

** Faire mon jeu de société !
*** Le jeu en lui-même

Se baser sur le jeu de Clément + cavalier
Ne pas jouer avec 32 cartes (as et Rois op)

**** TODO Personnage : Piocher deux cartes au lieu d'une jeu
**** Jeu carte : personnage un tour en plus à la fin
*** Comment le faire ?
* [[file:~/Dossier_partage_nous_deux/Orgzly/1Referencescommun.org::*Un jour][Mis ici]] les projets cool avenir, choses à faire plus tard
* Boulot et études

*SAVOIR S'EXPRIMER (pour se vendre, négocier etc)*, ainsi qu'être curieux
** Question à poser pour en savoir plus sur un métier, voir aussi les archive avec Mathilde et le mec chef de projets !
*** Toutes les questions

1. Contenu de l’activité, en quoi elle consiste ?
2. Conditions d’exercice du métier, pour qui (qualités, hard/soft skills) ?
3. Formation et compétences nécessaires ?
4. Outils nécessaires au travail ?
5. Influence des évolutions technologiques sur ce métier ?
6. Quel salaire ?
7. Qu’est ce qui vous plaît dans le métier ?
8. Evolution de carrière possible ?
9. Quels conseils pour accéder au métier ?
10. Points négatifs/positifs : travail redondant, chronophage,    formations    obligatoires pour tra-
     vailler ?
11. Horaires, temps disponible
12. Est ce que il participe à la mise en place des systèmes d’information ?
13. Niveau des failles de sécurité : technologique / flux d’informations ?
14. Travaille de la maison ?
15. Les différentes responsabilités

*** CANCELLED Les catégories
**** Le métier et la fonction
**** L’environnement et les conditions de travail
**** L'accession pour le métier (profil à avoir et diplôme)
**** Les aptitudes et les compétences
**** La rémunération
**** Les perspectives
**** Les avantages et les inconvénients
**** La satisfaction général
**** Les conseils
** Contacts, =Voir aussi sur payard.clement63@gmail.com !=
**** Adresse mail pour isima
***** Paul pinot (recruteur, était chez michelin
***** Le mec et la meuf de michelin

- Thibault.signarbieux@michelin.com

***** Mail double licence état unis

- Pauline.ribeyre@orange.fr

***** Aucune idée

- Remi.alegre@ext.uca.fr

**** Le père d'Amaury
**** Armand (Paris)
**** Mathilde (Nicolas) entreprise Thales
**** Prof cool discord (Celforyon)
**** Père de Mathieu
**** Hyves Jean-Daniel ?
**** Mec web master qui travail à paris
** CV + entretient d'embauche, pour se faire embaucher, que se soit au boulot ou études

Façon de s'exprimer, intérêt que l'on a, projet très important, club, parler de ce qui nous est spécifique. Parler de ses expériences perso. Capable de faire un sale boulot.

*** Entretient d'embauche

=S'échauffer sur des boîte où on veut pas aller=

**** Les choses à savoir

- pas de voix monotone / attitude
- [[https://www.cadremploi.fr/editorial/conseils/conseils-candidature/entretien-embauche/detail/article/les-20-questions-les-plus-courantes-en-entretien-dembauche.html][les 20 questions les plus posées]]
- mettre une chemise
- regarde le profil, être "normal"
- prendre un stylo et une feuille ? pour les questions à poser, noter des truc etc. Montré que l'on est préparé
- =demander pour quand la réponse= !

**** Pourquoi je fais de l'info, à adapter selon l'entreprise

1. raisonnement mathématique
2. jeux vidéo
3. raisonnement constructif
4. travailler facilement
5. domaine fondametal, présent partout, incontournable
6. passion, le fait de ne pas voir le temps passé
7. curiosité dans la création
8. curiosité dans la machine
9. facilité dans le résonnement informatique
10. organisation des idées, production d'outils
11. faire de l'info, on sait tout, car l'informatique outil
12. autre façon de faire des mathématiques
13. outil très puissant et outil inter-disciplinaire
14. évolue constamment

*** Pour mon CV, voir aussi dans dossier References
**** Petite formation avec Arnaud François (php, mysql, html, phpinit =Apache=)(insister sur la découverte et l'envie de "bouger", de s'impliquer)
**** Vendange ?
**** Emacs ?
**** Savoir se vendre (vendre ses qualités, savoir décrire ses cons comme des qualités)
**** Le MOOC shell

Curieux
=analytical mind=

**** Voyages ?

I currently live in Clermont-Ferrand, but I've already been in Germany (even including a 3-month exchange !), Italy, and Spain.

**** Scouts ?
**** Parler de codingame et de (site sur windows donnée par Mathilde)
**** Vis mon job expérience
**** TODO Alternace (si jamais je l'ai faites)
**** TODO Projet avec Yannis
**** TODO Les 2 stages :
***** 1er
***** 2ième

*** TODO LinkedIn

*Pas de num téléphone ni adresse sur linkdn*
Présentation : étudiant en tel année

Alumni : regarder le boulot des anciens élèves, petit rdv avec les anciens etc.

Se renseigner sur les contacts.

Mettre un petit mot qd on demande un contact

** Études
*** Général

1. j'ai le choix parceque je suis jeune !
2. Éviter les ESN, dont CGI
3. Allez voir 2 entreprises différentes au minimum
4. =Sécurisé un plan B=, au niveau de l'embauche
5. moyenne/filière pas importante (sauf peut être f5 pour le diplôme)  Expérience professionelle nn plus
7. être vacatère ? (Prof)
8. avoir des objectif (travailler à singapour?)
9. pour se faire respecter, aller dans une boite informatique aller voir Clermont Tech Java jeune
10. 2 voies : une pour carrière, une autre pour sa propre boîte et informatique (passion)

*Les cours les + utiles* sont =Les cours annexes=

=On peut master en bac+6 à l'IAE=

Certification possible :
- istqb pour testeur
- cisco pour la sécurité

*** Apprentissage

Mieux vu apprentissage, parce qu'on connaît plus de choses.
Choses en + à mettre sur le CV
bonne manière de se lance dans le métier
L'entreprise de base donne déjà une =spécialisation=.
=La majorité des gens partent de l'entreprise de base=. Ne pas trop bouger, mais sortir après l’alternance ça va.

=on peut apprentissage + master=

Pb : Manque de vacances, plus de responsabilités, quota travail plus important (logique), ya du concret qui peut aider pour les cours.
Tous les alternants adorent l'alternance.

*** TODO StageS

4ième années ils veulent pas toi, en 5ième ils sont à tes pieds (vrai), =car ils embauchent= derrière. Le stage sert un peu de formation en soit

Un des deux à Singapour ?

=Différences grande petites entreprises :=

- Grande entreprise : Salaire correct, horaire fixe, responsa correct, réputation sur le cv,  - startup c'est tendu, apprendre bc, c'est vite des extrêmes, bc de boulot, salaire pas fou (en accord).

Le premier : une boîte originale, où je n'irais peut-être plus (startup ?). Voir boîte paris web master ?
La deuxième : une boîte où je vais sûrement être embauché !


**** Pour celui à l'étranger

Se renseigner sur les pays dispo.
V.I.E ?
AFS sans frontière ?

**** 1er stage
**** 2ième stage
*** Fin des études (notamment salaire ici)
SCHEDULED: <2023-12-21 Thu>

- On peut travailler à 80% dans l'entreprise
- Toujours se renseigner sur les offres autour.
- Voir l'ambiance général (bon écosystème), si bonne ambiance alors pas envie de changer de boîtes
- niveau salaire : sûrement beaucoup de proposition au-dessus.
- si les augmentations sont correctes dans la boîte + bonne ambiance, pk changer ?
- demander télé travail ?



**** Salaire
***** =Général=

Renégociation tjr en salaire anuelle brut
-25% (à peu près) pour le net

1. Ne pas rater le 1er salaire
2. Bouger pour augmenter son salaire
3. Début de carrière, si pas augmentation de salaire dès le début, se casser
4. Ne jamais accepter de ne pas être augmenté, tout le temps négocier
5. 2 4% pas an pour augmentation



   
****** Exemple 

Paris + 20% de brut

Chez Michelin : 37 000 (début ?)

33 34 début, jusqu'à 45, dépend de la structure ainsi que du lieu (Paris + haut salaire)


48 000€ = coût du patron
33 000€/an brut
Nous: -25% -> 25 000/an (2100€ / mois) net (cotisation salariale)=2 smick
Sans impôt : 2000€/mois net



Les entreprises font une marge en général de 40%
Facturé, comparé avec le super brut (25%en+du brut)


Phrase à la con pour pas négocier : "ça dépend pas de moi"
Reponse : ça dépend de qui on va organiser une réunion et négocier"
--> "tu imagines tu vas gagner plus que ton collègue"
Réponse : "oui et?"







***** Les schémas généraux dans les entreprises pour les augmentations :

1. Tous les ans (automatique), en fonction de ce qu'ils ont fait (dans leur boîte). Augmentation par rapport à ce que pense l'entreprise du chiffre d'affaires que tu vas lui faire gagner plus.
2. C'est des échelons
3. Des entretiens individuels
   
   
   

** Boulot
*** TODO Liste à respecter dans mon futur métier(à classer)

1. avoir du temps pour moi
2. être automnome, minimiser le nombre de contraintes
3. salaire
4. écouter de la musique
5. ne pas trop coder
6. diriger une équipe ?
7. transmettre connaissance ?

*** Les Futurs métiers possible

- enseignant chercheur : métier assez cool, mais pas super bien payé. De plus, métier théorique. =Enseignement cool=
  1. Avantages :
     1. stable
     2. peut-être moins de pression que le reste
  2. Inconvénients
     1. Métier théorique
     2. Métier où doit y avoir pas mal de boulot pour peu de salaire

- analyste sécurité des systèmes d'information :
  1. Avantages : 
     1. Bon salaire ?
  2. Inconvénients
     1. Dur, pas beaucoup de temps

- agrégé en math/informatique
  1. Avantages : 
     1. Du temps, environ 30 35h de boulot
     2. J'ai déjà tous les outils pour la préparation des cours
  2. Inconvénients
     1. Dur, agrég
     2. avoir un master

*** Quand j'y serais

1. *SAVOIR S'EXPRIMER (pour se vendre, négocier etc)*, ainsi qu'être curieux
2. Toujours faire attention à ce qu'on dit (dire à personne que l'on veut partir par exemple).
3. Savoir dire "ok la pas le temps, ok la j'ai le temps" au début du projet
4. Pour être muter : voir les mutations possible, se renseigner au sein de l'entreprise

* Astuces du quotidient/pouvoir d'achat
** Astuces Nicolas

- payer par paypal (garantie objet reçu, etc)
- activer les nottifs lors ce que l'on recherche un objet précis
- payer les frais de port (pas entre amis) pour avoir la garantie (paypal)
- TRIER PAR
- Leboincoin ne prend pas de frais pour les voitures, pratique. Tester la voiture, les sensations
- faire au bon moment pour les promos
- ne pas hésiter à acheter
-

** TODO Sites web/internet/bon lien pour trouver des choses, mettre sur mozilla, déplacer [[id:5e2b3919-2176-4a29-a9c7-aa4f2cec3b39][ici]]
:PROPERTIES:
:ID:       1f844392-a617-45fc-a09a-5093d0c4fb56
:END:

* Décisions, noter ici tous les choix avec date, déplacé [[file:6Archives.org::*Archive Décisions][ici]], à supprimer là
* ArchivesPropres(ce que je veux garder comme "souvenir"), déplacé [[file:6Archives.org::*Archive Spéciales][ici]] à supprimer là
