import time
import math

# Dans cette activité, tous les entiers sont positifs.
# Soit n un entier.
# On dit que d est un "diviseur strict" de n si d divise n et d<n.
# On dira que deux entiers n et m sont "couplés" si :
# la somme des diviseurs stricts de n est égale à m et la somme des
# diviseurs stricts de m est égale à n.
# NB : n et m peuvent avoir la même valeur (un entier peut donc
# être couplé avec lui même).

# Ecrivez la fonction Booléenne qui prend en entrée deux entiers et
# retourne la valeur Bolléenne vrai si ces deux entiers sont couplés.

def sont_couplés(n, m):
    res1 = 0
    res2 = 0
    for i in range(1, n if n>m else m):
        if i % 2 == 0:
            res1+=2
        if n % i == 0 and i < n:
            res1+=i
        if m % i == 0 and i < m:
            res2+=i     
    return ((res1==m) and (res2==n))
    pass

print(sont_couplés(9, 88))
print(sont_couplés(7, 7))
print(sont_couplés(6, 6))

# Ecrivez la fonction qui prend en entrée un entier n_max et affiche toutes
# les paires n, m d'entiers couplés pour tout n < n_max.
# Chaque paire ne doit être affichée qu'une seule fois.

"""
def sum(m):
    res = 0
    for j in range(1, m):
        if j % m == 0:
            res += j 
    return res

"""
# presque réussi
def sum(m):
    res = 0
    for j in range(1, int(m**(1/2)) +1):
        if m % j == 0:
            res += j
            if j!=int(m**(1/2)) +1 and j!= 1:
                res+= int(m/j)
    return res

def friends(n, m):
    return n == sum(m) and m == sum(n)

def affiche_tous_couplés(n_max):
    for n in range(1, n_max):
        m = sum(n)
        if n <= m:
            if n == sum(m):
                print(f"{n} and {m}")

    pass


    """
    for i in range(1, n_max):
        res = 0
        if n_max % i == 0:
            res += i
            for j in range()"""

"""
    L = []
    for i in range(1, n_max):
        res = 0        
        for j in range(i, n_max):
            if sont_couplés(i, j):
                print(i,j)"""
    
 
    

begin = time.time()
affiche_tous_couplés(1_000)
print(f"Duration = {time.time() - begin} seconds to complete.")
print("-"*50)

begin = time.time()
affiche_tous_couplés(10_000)
print(f"Duration = {time.time() - begin} seconds to complete.")
print("-"*50)

begin = time.time()
affiche_tous_couplés(500_000)
print(f"Duration = {time.time() - begin} seconds to complete.")
print("-"*50)
