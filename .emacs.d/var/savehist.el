;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(coding-system-history tex-compile-history command-history face-name-history info-lookup-history consult--theme-history Info-search-history consult--crm-history magit-revision-history regexp-history read-expression-history eww-prompt-history pdf-annot-color-history citar-history org-tags-history compile-history ctrlf-search-history Man-topic-history consult--grep-history org-refile-history org-read-date-history org-capture--prompt-history bookmark-history org-roam-node-history query-replace-history org-link--history buffer-name-history minibuffer-history extended-command-history file-name-history consult--line-history empty-history))
(setq coding-system-history '("utf-8"))
(setq command-history '((avy-goto-char-2 99 108 nil nil nil) (switch-to-buffer "Inbox.org" nil 'force-same-window) (switch-to-buffer "Contacts.org" nil 'force-same-window) (switch-to-buffer "org-download.el" nil 'force-same-window) (switch-to-buffer "testimage.org" nil 'force-same-window) (switch-to-buffer "Contacts.org" nil 'force-same-window) (describe-function 'url-retrieve-synchronously) (switch-to-buffer "testimage.org" nil 'force-same-window) (switch-to-buffer "*Messages*" nil 'force-same-window) (switch-to-buffer "testimage.org" nil 'force-same-window) (consult-ripgrep nil) (execute-extended-command nil "consult-ripgrep" "con r") (describe-variable 'org-download-annotate-function) (org-vcard-import nil) (execute-extended-command nil "org-vcard-import" "org imp") (find-file "~/sharedDirectoryPrivate/notes/testcontact.org" t) (switch-to-buffer "Contacts.org" nil 'force-same-window) (org-vcard-export nil) (execute-extended-command nil "org-vcard-export" "org vcar ex") (switch-to-buffer "Contacts.org" nil 'force-same-window) (straight-visit-package-website) (execute-extended-command nil "straight-visit-package-website" "str") (switch-to-buffer "Contacts.org" nil 'force-same-window) (switch-to-buffer "AgendaTickler.org" nil 'force-same-window) (nov-next-document) (execute-extended-command nil "nov-next-document" nil) (nov-goto-toc) (execute-extended-command nil "nov-goto-toc" "toc") (taille-interligne) (execute-extended-command nil "taille-interligne" nil) (taille-interligne) (execute-extended-command nil "taille-interligne" "tail ") (consult-ripgrep nil) (execute-extended-command nil "consult-ripgrep" "con r") (nov-goto-toc) (execute-extended-command nil "nov-goto-toc" nil) (nov-goto-toc) (execute-extended-command nil "nov-goto-toc" nil) (nov-next-document) (execute-extended-command nil "nov-next-document" nil) (nov-goto-toc) (execute-extended-command nil "nov-goto-toc" "nov go") (nov-next-document) (execute-extended-command nil "nov-next-document" nil) (nov-next-document) (execute-extended-command nil "nov-next-document" nil) (nov-next-document) (execute-extended-command nil "nov-next-document" "nov nex") (nov-next-document) (execute-extended-command nil "nov-next-document" nil) (nov-previous-document) (execute-extended-command nil "nov-previous-document" "nov pr") (nov-next-document) (execute-extended-command nil "nov-next-document" nil) (nov-next-document) (execute-extended-command nil "nov-next-document" "nov nex") (straight-visit-package-website) (execute-extended-command nil "straight-visit-package-website" nil) (straight-visit-package-website) (execute-extended-command nil "straight-visit-package-website" "str vis") (consult-ripgrep nil) (execute-extended-command nil "consult-ripgrep" nil) (consult-ripgrep nil) (execute-extended-command nil "consult-ripgrep" "con rip") (consult-bookmark "GTD.org") (consult-bookmark "org notes") (dashboard-jump-to-bookmarks) (execute-extended-command nil "dashboard-jump-to-bookmarks" "dashboard ju") (dashboard-next-line 1) (execute-extended-command nil "dashboard-next-line" nil) (dashboard-next-line 1) (execute-extended-command nil "dashboard-next-line" nil) (dashboard-next-line 1) (execute-extended-command nil "dashboard-next-line" nil) (dashboard-next-line 1) (execute-extended-command nil "dashboard-next-line" nil) (dashboard-next-line 1) (execute-extended-command nil "dashboard-next-line" nil) (dashboard-next-line 1) (execute-extended-command nil "dashboard-next-line" nil) (dashboard-next-line 1) (execute-extended-command nil "dashboard-next-line" nil) (dashboard-next-line 1) (execute-extended-command nil "dashboard-next-line" nil) (dashboard-next-line 1) (execute-extended-command nil "dashboard-next-line" nil) (dashboard-next-line 1) (execute-extended-command nil "dashboard-next-line" nil) (dashboard-next-line 1) (execute-extended-command nil "dashboard-next-line" "dash nex") (switch-to-buffer "Bookmarks.org" nil 'force-same-window) (consult-bookmark "zettelkaste braindump") (execute-extended-command nil "bookmark-rename" "renam boo") (consult-bookmark "GTD.org") (consult-bookmark "Inbox.org") (switch-to-buffer "testimage.org" nil 'force-same-window) (execute-extended-command nil "customize-variable" "cus var") (describe-function 'org-download-annotate-default) (switch-to-buffer "org-mode.org" nil 'force-same-window) (switch-to-buffer "testimage.org" nil 'force-same-window) (describe-function 'org-download-annotate-default) (describe-function 'dummy-org-download-annotate-function) (switch-to-buffer "testimage.org" nil 'force-same-window) (describe-function 'org-download-annotate-default) (switch-to-buffer "testimage.org" nil 'force-same-window) (describe-variable 'org-download-backend) (straight-visit-package-website) (execute-extended-command nil "straight-visit-package-website" nil) (customize-group "org-vcard") (execute-extended-command nil "customize-group" "cus t") (find-file "~/sharedDirectoryPrivate/notes/testimage.org" t) (straight-visit-package-website) (execute-extended-command nil "straight-visit-package-website" "strai ") (consult-bookmark "orgzly") (consult-ripgrep nil) (execute-extended-command nil "consult-ripgrep" "con ") (describe-function 'org-download-dnd) (org-toggle-inline-images nil) (execute-extended-command nil "org-toggle-inline-images" nil) (org-toggle-inline-images nil) (execute-extended-command nil "org-toggle-inline-images" nil) (org-toggle-inline-images nil) (execute-extended-command nil "org-toggle-inline-images" nil) (org-toggle-inline-images nil) (execute-extended-command nil "org-toggle-inline-images" "org tog ima") (revert-buffer t) (execute-extended-command nil "revert-buffer" "rev") (org-download-edit) (execute-extended-command nil "org-download-edit" nil) (org-download-edit) (execute-extended-command nil "org-download-edit" "org download ed") (org-download-rename-last-file) (execute-extended-command nil "org-download-rename-last-file" "rena las") (switch-to-buffer "org-mode.org" nil 'force-same-window) (customize-group "org-download") (execute-extended-command nil "customize-group" "cus ") (describe-variable 'org-download--file-content) (describe-variable 'org-download-image-dir) (find-file "~/sharedDirectoryPrivate/notes/test.org" t) (switch-to-buffer "*Messages*" nil 'force-same-window) (switch-to-buffer "artistes.org" nil 'force-same-window) (switch-to-buffer "org-mode.org" nil 'force-same-window) (newline nil 1) (execute-extended-command nil "newline" nil) (newline nil 1) (execute-extended-command nil "newline" nil) (newline nil 1) (execute-extended-command nil "newline" nil) (newline nil 1) (execute-extended-command nil "newline" nil) (newline nil 1) (execute-extended-command nil "newline" "new lin") (switch-to-buffer "*Messages*" nil 'force-same-window) (switch-to-buffer "*Messages*" nil 'force-same-window) (mkdir "~/sharedDirectoryPrivate/notes/org/images" t) (execute-extended-command nil "mkdir" nil) (mkdir "~/sharedDirectoryPrivate/notes/zettelkasten/images" t) (execute-extended-command nil "mkdir" "mkd") (switch-to-buffer "org-mode.org" nil 'force-same-window) (straight-visit-package-website) (execute-extended-command nil "straight-visit-package-website" "stra vis") (consult-ripgrep nil) (execute-extended-command nil "consult-ripgrep" "con") (switch-to-buffer "org-mode.org" nil 'force-same-window) (switch-to-buffer "*Messages*" nil 'force-same-window) (switch-to-buffer "*Messages*" nil 'force-same-window) (switch-to-buffer "org-mode.org" nil 'force-same-window) (switch-to-buffer "org-mode.org" nil 'force-same-window) (execute-extended-command nil "straight-use-package" "str ") (describe-function 'peep-dired) (peep-dired-next-file) (execute-extended-command nil "peep-dired-next-file" nil) (peep-dired-next-file) (execute-extended-command nil "peep-dired-next-file" nil) (peep-dired-next-file) (execute-extended-command nil "peep-dired-next-file" nil) (peep-dired-next-file) (execute-extended-command nil "peep-dired-next-file" nil) (peep-dired-next-file) (execute-extended-command nil "peep-dired-next-file" nil) (peep-dired-next-file) (execute-extended-command nil "peep-dired-next-file" nil) (peep-dired-next-file) (execute-extended-command nil "peep-dired-next-file" nil) (peep-dired-next-file) (execute-extended-command nil "peep-dired-next-file" nil) (peep-dired-next-file) (execute-extended-command nil "peep-dired-next-file" nil) (peep-dired-next-file) (execute-extended-command nil "peep-dired-next-file" nil) (peep-dired-next-file) (execute-extended-command nil "peep-dired-next-file" nil) (peep-dired-next-file) (execute-extended-command nil "peep-dired-next-file" "peep dire nex") (customize-group "peep-dired") (execute-extended-command nil "customize-group" "cus gr") (peep-dired 'toggle) (execute-extended-command nil "peep-dired" "peep dir") (peep-dired 'toggle) (execute-extended-command nil "peep-dired" nil)))
(setq consult--theme-history '("doom-moonlight" "tsdh-dark"))
(setq regexp-history '("org-id-add-location"))
(setq eww-prompt-history '("https://ent.uca.fr/moodle/course/view.php?id=8036"))
(setq citar-history '("                                   2021-08-19T06:04:34Z     Effet Ikea                                                 EffetIkea2021      inreference       has:files  has:link  EffetIkea2021" "                                   2021-10-10T21:48:55Z     Biais d'autocomplaisance                                   BiaisAutocomplaisance2021    inreference       has:files  has:link  BiaisAutocomplaisance2021" "Voit                               2022-02-05T08:50:20Z     My GNU Emacs Configuration                                 voitMyGNUEmacs2022    software        configuration,emacs,personal                                    has:link  voitMyGNUEmacs2022" "                                   2020-12-10     Comment Ne plus RIEN OUBLIER Grâce à Un SECOND CERVEAU ?           eliottmeunierCommentNeRIEN2020    movie                                                                           has:link  eliottmeunierCommentNeRIEN2020" "                                            Accro au smartphone : les effets étonnants de la nomophobie sur notre santé           AccroAuSmartphone    online            has:files  has:link  AccroAuSmartphone" "Voit                               2022-02-05T08:50:20Z     My GNU Emacs Configuration                                 voitMyGNUEmacs2022    software        configuration,emacs,personal                                    has:link  voitMyGNUEmacs2022" "                                            Automatic Export :: Better BibTeX for Zotero               AutomaticExportBetter    online            has:files  has:link  AutomaticExportBetter" "                                            How I Take Notes with Org-roam                             HowTakeNotes       online            has:files  has:link  HowTakeNotes" "Eliott Meunier                     2020     Comment ne plus RIEN OUBLIER grâce à un SECOND CERVEAU ?           eliott_meunier_comment_2020    misc               has:link  eliott_meunier_comment_2020" "Eliott Meunier                     2020     Comment ne plus RIEN OUBLIER grâce à un SECOND CERVEAU ?           eliott_meunier_comment_2020    misc                                                                            has:link  eliott_meunier_comment_2020" "Voit                               2022     My GNU Emacs Configuration                                 voit_my_2022       misc            configuration, emacs, personal                                  has:link  voit_my_2022" "                                   2021     Zotero                                                     noauthor_zotero_2021    misc                                                                            has:link  noauthor_zotero_2021" "Eliott Meunier                     2020     Comment ne plus RIEN OUBLIER grâce à un SECOND CERVEAU ?           eliott_meunier_comment_2020    misc                                                                            has:link  eliott_meunier_comment_2020" "                                            How I Take Notes with Org-roam                             noauthor_how_nodate    misc                                                                            has:link  noauthor_how_nodate" "                                            Méthode Zettelkasten : Comment prendre des notes utiles ?           noauthor_methode_nodate    misc                                                                            has:link  noauthor_methode_nodate" "Eliott Meunier                     2020     Comment ne plus RIEN OUBLIER grâce à un SECOND CERVEAU ?           eliott_meunier_comment_2020    misc                                                                            has:link  eliott_meunier_comment_2020" "                                            Méthode Zettelkasten : Comment prendre des notes utiles ?           noauthor_methode_nodate    misc                                                                            has:link  noauthor_methode_nodate" "                                            How I Take Notes with Org-roam                             noauthor_how_nodate    misc                                                                            has:link  noauthor_how_nodate" "Eliott Meunier                     2020     Comment ne plus RIEN OUBLIER grâce à un SECOND CERVEAU ?           eliott_meunier_comment_2020    misc                                                                            has:link  eliott_meunier_comment_2020" "                                            How I Take Notes with Org-roam                             noauthor_how_nodate    misc                                                                            has:link  noauthor_how_nodate" "                                            Méthode Zettelkasten : Comment prendre des notes utiles ?           noauthor_methode_nodate    misc                                                                            has:link  noauthor_methode_nodate" "Eliott Meunier                     2020     Comment ne plus RIEN OUBLIER grâce à un SECOND CERVEAU ?           eliott_meunier_comment_2020    misc                                                                            has:link  eliott_meunier_comment_2020" "                                            Méthode Zettelkasten : Comment prendre des notes utiles ?           noauthor_methode_nodate    misc                                                                            has:link  noauthor_methode_nodate" "                                            How I Take Notes with Org-roam                             noauthor_how_nodate    misc                                                                            has:link  noauthor_how_nodate" "                                   2021     Zotero                                                     noauthor_zotero_2021    misc                                                                            has:link  noauthor_zotero_2021" "Eliott Meunier                     2020     Comment ne plus RIEN OUBLIER grâce à un SECOND CERVEAU ?           eliott_meunier_comment_2020    misc                                                                            has:link  eliott_meunier_comment_2020" "                                   2021     Zotero                                                     noauthor_zotero_2021    misc                                                                            has:link  noauthor_zotero_2021" "Eliott Meunier                     2020     Comment ne plus RIEN OUBLIER grâce à un SECOND CERVEAU ?           eliott_meunier_comment_2020    misc                                                                            has:link  eliott_meunier_comment_2020" "                                            How I Take Notes with Org-roam                             noauthor_how_nodate    misc                                                                            has:link  noauthor_how_nodate" "                                            Méthode Zettelkasten : Comment prendre des notes utiles ?           noauthor_methode_nodate    misc                                                                            has:link  noauthor_methode_nodate" "                                   2021     Zotero                                                     noauthor_zotero_2021    misc                                                                            has:link  noauthor_zotero_2021" "Eliott Meunier                     2020     Comment ne plus RIEN OUBLIER grâce à un SECOND CERVEAU ?           eliott_meunier_comment_2020    misc                                                                            has:link  eliott_meunier_comment_2020" "                                            How I Take Notes with Org-roam                             noauthor_how_nodate    misc                                                                            has:link  noauthor_how_nodate" "Eliott Meunier                     2020     Comment ne plus RIEN OUBLIER grâce à un SECOND CERVEAU ?           eliott_meunier_comment_2020    misc                                                                            has:link  eliott_meunier_comment_2020" "                                            Méthode Zettelkasten : Comment prendre des notes utiles ?           noauthor_methode_nodate    misc                                                                            has:link  noauthor_methode_nodate" "Eliott Meunier                     2020     Comment ne plus RIEN OUBLIER grâce à un SECOND CERVEAU ?           eliott_meunier_comment_2020    misc                                                                            has:link  eliott_meunier_comment_2020" "                                   2021     Zotero                                                     noauthor_zotero_2021    misc                                                                            has:link  noauthor_zotero_2021" "Eliott Meunier                     2020     Comment ne plus RIEN OUBLIER grâce à un SECOND CERVEAU ?           eliott_meunier_comment_2020    misc                                                                            has:link  eliott_meunier_comment_2020" "                                   2021     Zotero                                                     noauthor_zotero_2021    misc                                                                            has:link  noauthor_zotero_2021" "                                            Méthode Zettelkasten : Comment prendre des notes utiles ?           noauthor_methode_nodate    misc                                                                            has:link  noauthor_methode_nodate" "Eliott Meunier                     2020     Comment ne plus RIEN OUBLIER grâce à un SECOND CERVEAU ?           eliott_meunier_comment_2020    misc                                                                            has:link  eliott_meunier_comment_2020" "                                            How I Take Notes with Org-roam                             noauthor_how_nodate    misc                                                                            has:link  noauthor_how_nodate" "                                   2021     Zotero                                                     noauthor_zotero_2021    misc                                                                            has:link  noauthor_zotero_2021" "                                            Méthode Zettelkasten : Comment prendre des notes utiles ?           noauthor_methode_nodate    misc                                                                            has:link  noauthor_methode_nodate" "Eliott Meunier                     2020     Comment ne plus RIEN OUBLIER grâce à un SECOND CERVEAU ?           eliott_meunier_comment_2020    misc                                                                            has:link  eliott_meunier_comment_2020" "                                            How I Take Notes with Org-roam                             noauthor_how_nodate    misc                                                                            has:link  noauthor_how_nodate" "                                   2021     Zotero                                                     noauthor_zotero_2021    misc                                                                            has:link  noauthor_zotero_2021" "                                            Méthode Zettelkasten : Comment prendre des notes utiles ?           noauthor_methode_nodate    misc                                                                            has:link  noauthor_methode_nodate" "                                   2021     Zotero                                                     noauthor_zotero_2021    misc                                                                            has:link  noauthor_zotero_2021" "Eliott Meunier                     2020     Comment ne plus RIEN OUBLIER grâce à un SECOND CERVEAU ?           eliott_meunier_comment_2020    misc                                                                            has:link  eliott_meunier_comment_2020" "                                   2021     Zotero                                                     noauthor_zotero_2021    misc                                                                            has:link  noauthor_zotero_2021" "Eliott Meunier                     2020     Comment ne plus RIEN OUBLIER grâce à un SECOND CERVEAU ?           eliott_meunier_comment_2020    misc                                                                            has:link  eliott_meunier_comment_2020" "                                   2021     Zotero                                                     noauthor_zotero_2021    misc                                                                            has:link  noauthor_zotero_2021" "                                            How I Take Notes with Org-roam                             noauthor_how_nodate    misc                                                                            has:link  noauthor_how_nodate" "Eliott Meunier                     2020     Comment ne plus RIEN OUBLIER grâce à un SECOND CERVEAU ?           eliott_meunier_comment_2020    misc                                                                            has:link  eliott_meunier_comment_2020" "                                   2021     Zotero                                                     noauthor_zotero_2021    misc                                                                            has:link  noauthor_zotero_2021" "Eliott Meunier                     2020     Comment ne plus RIEN OUBLIER grâce à un SECOND CERVEAU ?           eliott_meunier_comment_2020    misc                                                                            has:link  eliott_meunier_comment_2020" "                                            How I Take Notes with Org-roam                             noauthor_how_nodate    misc                                                                            has:link  noauthor_how_nodate" "Eliott Meunier                     2020     Comment ne plus RIEN OUBLIER grâce à un SECOND CERVEAU ?           eliott_meunier_comment_2020    misc                                                                            has:link  eliott_meunier_comment_2020" "                                            How I Take Notes with Org-roam                             noauthor_how_nodate    misc                                                                            has:link  noauthor_how_nodate" "Eliott Meunier                     2020     Comment ne plus RIEN OUBLIER grâce à un SECOND CERVEAU ?           eliott_meunier_comment_2020    misc                                                                            has:link  eliott_meunier_comment_2020" "                                   2021     Zotero                                                     noauthor_zotero_2021    misc               has:link  noauthor_zotero_2021" "                                            How I Take Notes with Org-roam                             noauthor_how_nodate    misc               has:link  noauthor_how_nodate" "Eliott Meunier                     2020     Comment ne plus RIEN OUBLIER grâce à un SECOND CERVEAU ?           eliott_meunier_comment_2020    misc               has:link  eliott_meunier_comment_2020" "                                            How I Take Notes with Org-roam                             noauthor_how_nodate    misc                                                                            has:link  noauthor_how_nodate" "Eliott Meunier                     2020     Comment ne plus RIEN OUBLIER grâce à un SECOND CERVEAU ?           eliott_meunier_comment_2020    misc                                                                            has:link  eliott_meunier_comment_2020" "                                            Méthode Zettelkasten : Comment prendre des notes utiles ?           noauthor_methode_nodate    misc                                                                            has:link  noauthor_methode_nodate" "                                   2021     Zotero                                                     noauthor_zotero_2021    misc                                                                            has:link  noauthor_zotero_2021" "                                            Méthode Zettelkasten : Comment prendre des notes utiles ?           noauthor_methode_nodate    misc                                                                            has:link  noauthor_methode_nodate" "                                   2021     Zotero                                                     noauthor_zotero_2021    misc                                                                            has:link  noauthor_zotero_2021" "Eliott Meunier                     2020     Comment ne plus RIEN OUBLIER grâce à un SECOND CERVEAU ?           eliott_meunier_comment_2020    misc                                                                            has:link  eliott_meunier_comment_2020" "                                            How I Take Notes with Org-roam                             noauthor_how_nodate    misc                                                                            has:link  noauthor_how_nodate" "                                   2021     Zotero                                                     noauthor_zotero_2021    misc                                                                            has:link  noauthor_zotero_2021" "                                            Méthode Zettelkasten : Comment prendre des notes utiles ?           noauthor_methode_nodate    misc                                                                            has:link  noauthor_methode_nodate" "Eliott Meunier                     2020     Comment ne plus RIEN OUBLIER grâce à un SECOND CERVEAU ?           eliott_meunier_comment_2020    misc               has:link  eliott_meunier_comment_2020" "                                            Méthode Zettelkasten : Comment prendre des notes utiles ?           noauthor_methode_nodate    misc                                                                            has:link  noauthor_methode_nodate" "                                            How I Take Notes with Org-roam                             noauthor_how_nodate    misc                                                                                has:link  noauthor_how_nodate" "Eliott Meunier                     2020     Comment ne plus RIEN OUBLIER grâce à un SECOND CERVEAU ?           eliott_meunier_comment_2020    misc                                                                                has:link  eliott_meunier_comment_2020" "Eliott Meunier                     2020     Comment ne plus RIEN OUBLIER grâce à un SECOND CERVEAU ?           eliott_meunier_comment_2020    misc               has:link  eliott_meunier_comment_2020" "Eliott Meunier                     2020     Comment ne plus RIEN OUBLIER grâce à un SECOND CERVEAU ?           eliott_meunier_comment_2020    misc                                                                                has:link  eliott_meunier_comment_2020" "                                            Méthode Zettelkasten : Comment prendre des notes utiles ?           noauthor_methode_nodate    misc                                                                            has:link  noauthor_methode_nodate" "                                   2021     Zotero                                                     noauthor_zotero_2021    misc                                                                            has:link  noauthor_zotero_2021" "                                            Méthode Zettelkasten : Comment prendre des notes utiles ?           noauthor_methode_nodate    misc                                                                            has:link  noauthor_methode_nodate" "                                   2021     Zotero                                                     noauthor_zotero_2021    misc                                                                            has:link  noauthor_zotero_2021" "                                            Méthode Zettelkasten : Comment prendre des notes utiles ?           noauthor_methode_nodate    misc                                                                            has:link  noauthor_methode_nodate" "                                            How I Take Notes with Org-roam                             noauthor_how_nodate    misc                                                                            has:link  noauthor_how_nodate" "Eliott Meunier                     2020     Comment ne plus RIEN OUBLIER grâce à un SECOND CERVEAU ?           eliott_meunier_comment_2020    misc                                                                            has:link  eliott_meunier_comment_2020" "                                            How I Take Notes with Org-roam                             noauthor_how_nodate    misc                                                                            has:link  noauthor_how_nodate" "                                            Méthode Zettelkasten : Comment prendre des notes utiles ?           noauthor_methode_nodate    misc                                                                            has:link  noauthor_methode_nodate" "                                   2021     Zotero                                                     noauthor_zotero_2021    misc                                                                            has:link  noauthor_zotero_2021" "Eliott Meunier                     2020     Comment ne plus RIEN OUBLIER grâce à un SECOND CERVEAU ?           eliott_meunier_comment_2020    misc                                                                            has:link  eliott_meunier_comment_2020" "Eliott Meunier                     2020     Comment ne plus RIEN OUBLIER grâce à un SECOND CERVEAU ?           eliott_meunier_comment_2020    misc                                                                                has:link  eliott_meunier_comment_2020" "Eliott Meunier                     2020     Comment ne plus RIEN OUBLIER grâce à un SECOND CERVEAU ?           eliott_meunier_comment_2020    misc                                                                            has:link  eliott_meunier_comment_2020" "                                   2021     Zotero                                                     noauthor_zotero_2021    misc                                                                            has:link  noauthor_zotero_2021" "Eliott Meunier                     2020     Comment ne plus RIEN OUBLIER grâce à un SECOND CERVEAU ?           eliott_meunier_comment_2020    misc                                                                            has:link  eliott_meunier_comment_2020" "                                            Méthode Zettelkasten : Comment prendre des notes utiles ?           noauthor_methode_nodate    misc                                                                            has:link  noauthor_methode_nodate" "                                            How I Take Notes with Org-roam                             noauthor_how_nodate    misc                                                                            has:link  noauthor_how_nodate" "Eliott Meunier                     2020     Comment ne plus RIEN OUBLIER grâce à un SECOND CERVEAU ?           eliott_meunier_comment_2020    misc                                                                            has:link  eliott_meunier_comment_2020" "                                            Méthode Zettelkasten : Comment prendre des notes utiles ?           noauthor_methode_nodate    misc                                                                            has:link  noauthor_methode_nodate" "                                            How I Take Notes with Org-roam                             noauthor_how_nodate    misc               has:link  noauthor_how_nodate" "                                   2021     Zotero                                                     noauthor_zotero_2021    misc               has:link  noauthor_zotero_2021" "                                            How I Take Notes with Org-roam                             noauthor_how_nodate    misc               has:link  noauthor_how_nodate" "                                            Méthode Zettelkasten : Comment prendre des notes utiles ?           noauthor_methode_nodate    misc                                                                            has:link  noauthor_methode_nodate" "                                            How I Take Notes with Org-roam                             noauthor_how_nodate    misc                                                                            has:link  noauthor_how_nodate" "Eliott Meunier                     2020     Comment ne plus RIEN OUBLIER grâce à un SECOND CERVEAU ?           eliott_meunier_comment_2020    misc                                                                            has:link  eliott_meunier_comment_2020" "                                            How I Take Notes with Org-roam                             noauthor_how_nodate    misc                                                                            has:link  noauthor_how_nodate" "noauthor_how_nodate"))
(setq org-tags-history '("work" "@pc"))
(setq compile-history '("javac src/*.java && java src/Current" "javac src/*.java && java Current" "javac src/*.java && java current" "javac src/*.java && java current.java" "javac src/*.java && java current" "javac src/*.java" "javac src/*.java && java src/current" "javac src/*.java && java src/current.java " "javac src/*.java && java current.java " "javac src/*.java && java src/current.java " "javac src/*.java && javac src/current.java " "javac src/*.java "))
(setq Man-topic-history '("ssh-keygen(1)" "hostname(1)"))
(setq consult--grep-history '("#org-download use pack" "#merci" "#epub lire" "#epub" "#use org-download" "#org-download" "#img" "#2022 08 03" "#setq org capture " "#setq org captur templa" "#magit use" "#use pack org-vcard" "#Layout" "#user-emacs-directory" "#hunspell" "#hunspe" "#with eval" "#with eval af" "#je suis en train de bien penser à mon avenir" "#.outline-2" "#emacs everywhere" "#ripgr" "#set-face-attribute" "#variable-pitch-mode" "#Journal de satisfaction" "#tsdh-dark" "#home/msi" "#after init hook" "#8aac069c-ecda-4a5f-82df-add2a7ddfdcb" "#dbb" "#all the ic use" "#size" "#3b3b0f5c-208f-44f1-b132-548cdd6d3633" "#dbb" "#7dfe50ff-a61d-420c-a480-428f215e891d" "#7dfe" "#bd2e" "oc-csl" "#org-cite-csl-styles-dir" "#@work" "#dans le head" "#toc" "#org-cite requi" "#use org ref packa" "#he default CSL locale file " "#look and " "#This paper presented a new family of models ca" "#3e969" "#org-goto defun" "#org-gtd--decorate-item" "#next" "#Je vais vite m'habituer à tout" "#WAIT"))
(setq org-refile-history '("films_vus.org/11 Film et serie à voir/" "Contacts.org/Connaissances/" "Contacts.org/Famille/" "Contacts.org/Connaissances/" "Contacts.org/Potes/" "Contacts.org/Professionnel/" "Bookmarks.org/Perso/Mes sites web/" "Sully/ (films_vus.org)" "References.org/Films/" "Contacts.org/Famille/" "References.org/ArchivesPropres + décision (ce que je veux garder comme \"souvenir\")/" "Bookmarks.org/Vie professionnelle/Cours s4 (moodle, caséine etc)/" "Bookmarks.org/Perso/Sites que j'aime bien/" "Bookmarks.org/Perso/Liseuse/" "Bookmarks.org/Perso/Informatique/Emacs/Systemcrafter notes/" "Bookmarks.org/Perso/Informatique/Pratique/" "Bookmarks.org/Vie professionnelle/Cours s4 (moodle, caséine etc)/" "Bookmarks.org/Administratif (mail, drive)/" "Bookmarks.org/Perso/Informatique/Emacs/Les .emacs.d/" "Bookmarks.org/Perso/Informatique/Emacs/Braindump/" "Bookmarks.org/\"Perso\"/Informatique/Pratique/" "Bookmarks.org/\"Perso\"/Informatique/Sécurité/" "Bookmarks.org/\"Perso\"/Informatique/Emacs/Les .emacs.d/" "References.org/ArchivesPropres + décision (ce que je veux garder comme \"souvenir\")/" "AgendaTickler.org/" "Clavier/" "Emacs en français (oui c'est moyen comme titre)/ (README.org)"))
(setq org-read-date-history '("+2    " "19h 08    " "19:00 20    " "18h30    " "sat 9h    " "+2 18h-20h    " "+2 14h-20h    " "+2 18h-20h    " "+1    " "   " "19:00 7    " "   " "14    " "+2 13h30    " "+2m    " "+1 9h30-11h    " "+1    " "+2    " "+1    "))
(setq bookmark-history '("GTD.org" "GTD.org" "org notes" "org notes" "org-refile-last-stored" "org-capture-last-stored" "zettelkaste braindump" "zettelkaste braindump" "zettelkasten" "zettelkasten" "GTD.org" "GTD.org" "Inbox.org" "Inbox.org" "orgzly" "orgzly" "orgzly" "orgzly" "orgzly" "orgzly" "orgzly" "S4" "S4" "org-refile-last-stored" "org-refile-last-stored" "configFichiers" "configFichiers" "orgzly" "orgzly" "configFichiers" "configFichiers" "S4" "S4" "configFichiers" "configFichiers" "configFichiers" "configFichiers" "S4" "S4" "configFichiers" "configFichiers" "org-refile-last-stored" "configFichiers" "configFichiers" "S4" "S4" "configFichiers" "configFichiers" "orgzly" "orgzly" "S4" "S4" "configFichiers" "configFichiers" "configFichiers" "ancienneconfigorg" "ancienneconfigorg" "ancienneconfigorg" "Burly: tempo" "orgzly" "orgzly" "Burly: tempo" "Burly: tempo" "orgzly" "orgzly" "orgzly" "orgzly" "orgzly" "orgzly" "orgzly" "orgzly" "orgzly" "orgzly" "orgzly" "orgzly" "org-refile-last-stored" "org-capture-last-stored" "emacs.dyoutube" "braindump de base" "Inbox" "GTD" "Configuration de fenêtre efficace" "Burly: tempo" "Burly: pour export tempo" "orgzly" "orgzly" "Burly: tempo" "Burly: tempo" "Burly: pour export tempo" "Burly: pour export tempo" "org-refile-last-stored" "orgzly" "orgzly" "orgzly" ("" (defaults "notes") (position . 246) (rear-context-string . " févr. 15 22:08 ") (front-context-string . "Testderéférences") (filename . "~/Testdedossier/Braindumptest/braindumpayrat/notes/")) "Burly: pour export tempo" "emacs.dyoutube" "emacs.dyoutube" "Burly: tempo export bis" "Burly: tempo" "Burly: pythontempo" "orgzly" "orgzly" "braindump de base" "braindump de base" "orgzly" "orgzly" "braindump de base" "braindump de base" "Burly: tempo" "Burly: tempo" "braindump de base" "braindump de base" "orgzly" "orgzly" "orgzly" "orgzly" "emacs.dyoutube" "emacs.dyoutube" "orgzly" "orgzly" "orgzly" "orgzly" "braindump de base" "braindump de base" "orgzly" "orgzly" "orgzly" "orgzly" "emacs.dyoutube" "emacs.dyoutube" "orgzly" "orgzly" "orgzly" "Burly: tempo export bis" "Burly: tempo export bis" ("" (defaults "notes") (position . 246) (rear-context-string . " févr. 15 22:08 ") (front-context-string . "Testderéférences") (filename . "~/Testdedossier/Braindumptest/braindumpayrat/notes/")) "Burly: pour export tempo" "Burly: pour export tempo" ("" (defaults "notes") (position . 246) (rear-context-string . " févr. 15 22:08 ") (front-context-string . "Testderéférences") (filename . "~/Testdedossier/Braindumptest/braindumpayrat/notes/")) "Burly: pour export tempo" "Burly: pour export tempo" ("" (defaults "notes") (position . 246) (rear-context-string . " févr. 15 22:08 ") (front-context-string . "Testderéférences") (filename . "~/Testdedossier/Braindumptest/braindumpayrat/notes/")) "Burly: pour export tempo" "Burly: pour export tempo" ("" (defaults "notes") (position . 246) (rear-context-string . " févr. 15 22:08 ") (front-context-string . "Testderéférences") (filename . "~/Testdedossier/Braindumptest/braindumpayrat/notes/")) "Burly: pour export tempo" "Burly: pour export tempo" ("" (defaults "notes") (position . 246) (rear-context-string . " févr. 15 22:08 ") (front-context-string . "Testderéférences") (filename . "~/Testdedossier/Braindumptest/braindumpayrat/notes/")) "Burly: pour export tempo" "Burly: pour export tempo" "braindump de base" "braindump de base" "orgzly" "orgzly" ("" (defaults "Exos-Itérateurs-Yieldperso.py") (position . 1241) (rear-context-string . "or x in range(10") (front-context-string . "):     print(f\"i") (filename . "~/documents/mesdocuments/professionnel/cours/S4/MRP/Exercicespython/3/Exos-Itérateurs-Yieldperso.py")) ("" (defaults "Exos-Itérateurs-Yieldperso.py") (position . 1241) (rear-context-string . "or x in range(10") (front-context-string . "):     print(f\"i") (filename . "~/documents/mesdocuments/professionnel/cours/S4/MRP/Exercicespython/3/Exos-Itérateurs-Yieldperso.py")) "Burly: pythontempo" "Burly: pythontempo" "braindump de base" "braindump" "braindump" "orgzly" "orgzly" ("" (defaults "Exos-Itérateurs-Yieldperso.py") (position . 1241) (rear-context-string . "or x in range(10") (front-context-string . "):     print(f\"i") (filename . "~/documents/mesdocuments/professionnel/cours/S4/MRP/Exercicespython/3/Exos-Itérateurs-Yieldperso.py")) ("" (defaults "Exos-Itérateurs-Yieldperso.py") (position . 1241) (rear-context-string . "or x in range(10") (front-context-string . "):     print(f\"i") (filename . "~/documents/mesdocuments/professionnel/cours/S4/MRP/Exercicespython/3/Exos-Itérateurs-Yieldperso.py")) "Burly: pythontempo" "Burly: pythontempo" ("" (defaults "Exos-Itérateurs-Yieldperso.py") (position . 1241) (rear-context-string . "or x in range(10") (front-context-string . "):     print(f\"i") (filename . "~/documents/mesdocuments/professionnel/cours/S4/MRP/Exercicespython/3/Exos-Itérateurs-Yieldperso.py")) ("" (defaults "Exos-Itérateurs-Yieldperso.py") (position . 1241) (rear-context-string . "or x in range(10") (front-context-string . "):     print(f\"i") (filename . "~/documents/mesdocuments/professionnel/cours/S4/MRP/Exercicespython/3/Exos-Itérateurs-Yieldperso.py")) "Burly: pythontempo" "Burly: pythontempo" ("" (defaults "Exos-Itérateurs-Yieldperso.py") (position . 1241) (rear-context-string . "or x in range(10") (front-context-string . "):     print(f\"i") (filename . "~/documents/mesdocuments/professionnel/cours/S4/MRP/Exercicespython/3/Exos-Itérateurs-Yieldperso.py")) ("" (defaults "Exos-Itérateurs-Yieldperso.py") (position . 1241) (rear-context-string . "or x in range(10") (front-context-string . "):     print(f\"i") (filename . "~/documents/mesdocuments/professionnel/cours/S4/MRP/Exercicespython/3/Exos-Itérateurs-Yieldperso.py")) "Burly: pythontempo" "Burly: pythontempo" ("" (defaults "Exos-Itérateurs-Yieldperso.py") (position . 1241) (rear-context-string . "or x in range(10") (front-context-string . "):     print(f\"i") (filename . "~/documents/mesdocuments/professionnel/cours/S4/MRP/Exercicespython/3/Exos-Itérateurs-Yieldperso.py")) ("" (defaults "Exos-Itérateurs-Yieldperso.py") (position . 1241) (rear-context-string . "or x in range(10") (front-context-string . "):     print(f\"i") (filename . "~/documents/mesdocuments/professionnel/cours/S4/MRP/Exercicespython/3/Exos-Itérateurs-Yieldperso.py")) "Burly: pythontempo" "Burly: pythontempo" ("" (defaults "Exos-Itérateurs-Yieldperso.py") (position . 1241) (rear-context-string . "or x in range(10") (front-context-string . "):     print(f\"i") (filename . "~/documents/mesdocuments/professionnel/cours/S4/MRP/Exercicespython/3/Exos-Itérateurs-Yieldperso.py")) ("" (defaults "Exos-Itérateurs-Yieldperso.py") (position . 1241) (rear-context-string . "or x in range(10") (front-context-string . "):     print(f\"i") (filename . "~/documents/mesdocuments/professionnel/cours/S4/MRP/Exercicespython/3/Exos-Itérateurs-Yieldperso.py")) "Burly: pythontempo" "Burly: pythontempo" ("" (defaults "Exos-Itérateurs-Yieldperso.py") (position . 1241) (rear-context-string . "or x in range(10") (front-context-string . "):     print(f\"i") (filename . "~/documents/mesdocuments/professionnel/cours/S4/MRP/Exercicespython/3/Exos-Itérateurs-Yieldperso.py")) ("" (defaults "Exos-Itérateurs-Yieldperso.py") (position . 1241) (rear-context-string . "or x in range(10") (front-context-string . "):     print(f\"i") (filename . "~/documents/mesdocuments/professionnel/cours/S4/MRP/Exercicespython/3/Exos-Itérateurs-Yieldperso.py")) "Burly: pythontempo" "Burly: pythontempo" ("" (defaults "Exos-Itérateurs-Yieldperso.py") (position . 1241) (rear-context-string . "or x in range(10") (front-context-string . "):     print(f\"i") (filename . "~/documents/mesdocuments/professionnel/cours/S4/MRP/Exercicespython/3/Exos-Itérateurs-Yieldperso.py")) ("" (defaults "Exos-Itérateurs-Yieldperso.py") (position . 1241) (rear-context-string . "or x in range(10") (front-context-string . "):     print(f\"i") (filename . "~/documents/mesdocuments/professionnel/cours/S4/MRP/Exercicespython/3/Exos-Itérateurs-Yieldperso.py")) "Burly: pythontempo" "Burly: pythontempo" ("" (defaults "Exos-Itérateurs-Yieldperso.py") (position . 1241) (rear-context-string . "or x in range(10") (front-context-string . "):     print(f\"i") (filename . "~/documents/mesdocuments/professionnel/cours/S4/MRP/Exercicespython/3/Exos-Itérateurs-Yieldperso.py")) ("" (defaults "Exos-Itérateurs-Yieldperso.py") (position . 1241) (rear-context-string . "or x in range(10") (front-context-string . "):     print(f\"i") (filename . "~/documents/mesdocuments/professionnel/cours/S4/MRP/Exercicespython/3/Exos-Itérateurs-Yieldperso.py")) "Burly: pythontempo" "Burly: pythontempo" ("" (defaults "Exos-Itérateurs-Yieldperso.py") (position . 1241) (rear-context-string . "or x in range(10") (front-context-string . "):     print(f\"i") (filename . "~/documents/mesdocuments/professionnel/cours/S4/MRP/Exercicespython/3/Exos-Itérateurs-Yieldperso.py")) ("" (defaults "Exos-Itérateurs-Yieldperso.py") (position . 1241) (rear-context-string . "or x in range(10") (front-context-string . "):     print(f\"i") (filename . "~/documents/mesdocuments/professionnel/cours/S4/MRP/Exercicespython/3/Exos-Itérateurs-Yieldperso.py")) "Burly: pythontempo" "Burly: pythontempo" "ancienneconfigorg"))
(setq org-roam-node-history '("main            Comment je vais faire mon braindump                                                                                                #draft                                   0 " "reference       Effet Ikea                                                                                                                         #draft                                   0 " "main            Comment je vais faire mon braindump                                                                                                #draft                                   0 " "reference       Effet Ikea                                                                                                                         #draft                                   0 " "reference       Biais d'autocomplaisance                                                                                                           #draft                                   0 " "test" "reference       Biais d'autocomplaisance                                                                                                           #draft                                   0 " "main            Comment je vais faire mon braindump                                                                                                #draft                                   0 " "reference       Comment Ne plus RIEN OUBLIER Grâce à Un SECOND CERVEAU ?                                                                           #draft                                   1 " "main            Comment je vais faire mon braindump                                                                                                #draft                                   0 " "reference       Comment Ne plus RIEN OUBLIER Grâce à Un SECOND CERVEAU ?                                                                           #draft                                   0 " "reference       test                                                                                                                               #draft                                   0 " "                Psychologie -> Sentiments                                                                                                                                                   1 " "                Adolf Hitler                                                                                                                                                                3 " "                Sigmund Freud                                                                                                                                                               3 " "main            Comment je vais faire mon braindump                                                                                                #draft                                   0 " "naetsui" "main            Comment je vais faire mon braindump                                                                                                #draft                                   0 " "natuei" "test" "yol" "yolo" "reference       yolo                                                                                                                               #draft                                   0 " "yolo" "test            Testréférenceorg-ref                                                                                                               #draft                                   0 " "main            Comment je vais faire mon braindump                                                                                                #draft                                   0 " "reference       Testderéférences                                                                                                                   #draft                                   0 " "reference       Testréférenceorg-ref                                                                                                               #draft                                   0 " "main            Comment je vais faire mon braindump                                                                                                #draft                                   0 " "reference       Testderéférences                                                                                                                   #draft                                   0 " "narsteuinrtaeui" "nauetinrateui" "naeutsi" "nrateuisntrea" "nrateuint" "natseiun" "nateuinrs" "narutenateuin" "naretina" "nrauteiniraeut" "anretinraeutsnrit" "ntaueinstnrseua" "ansutei" "ntaueinsrtnruaeitnruaei" "nautienrsaueti" "nauteisnateiu" "nateuint" "nratuie" "reference       Testderéférences                                                                                                                   #draft                                   0 " "nrateiu" "reference       Testderéférences                                                                                                                   #draft                                   0 " "main            Comment je vais faire mon braindump                                                                                                #draft                                   0 " "reference       Testderéférences                                                                                                                   #draft                                   0 " "main            Comment je vais faire mon braindump                                                                                                #draft                                   0 " "narteinr" "nratieu" "naeuti" "Inbox" "nartieu" "tnaieu" "Testtnuai" "Comment je vais faire mon braindump" "articles        Building a Zettelkasten with Org-roam                                                                                              #article #draft                          0 " "articles        Building a Zettelkasten with Org-roam -> Basic Setup                                                                               #article #draft                          0 " "A Complete Workflow in Emacs                                                                                                                                                0 " "Testderéférences                                                                                                                   #draft                                   0 " "Eliott Meunier :: Comment ne plus RIEN OUBLIER grâce à un SECOND CERVEAU ?                                                         #draft                                   1 "))
(setq query-replace-history '("switch" "commutateur" "switchs" "commutateurs" "switch" "commutateur" "switch" "commutateurs" "my-user-emacs-config-directory" #("my-user-emacs-directory" 0 22 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t) 22 23 (face (org-block) font-lock-multiline t rear-nonsticky t src-block t font-lock-fontified t)) "my-tangle-a-file-of-config-org" #("my-tangle-config-org" 0 12 (face (font-lock-function-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t) 12 19 (face (font-lock-function-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t) 19 20 (rear-nonsticky t face (font-lock-function-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t)) "sharedDirectoryPrivate" "dossier_partage" "~/mesdocuments/" #("~/documents/mesdocuments/" 0 24 (font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) src-block t) 24 25 (font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) src-block t rear-nonsticky t)) "mesdocuments-directory" #("documents-mesdocuments-directory" 0 31 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t) 31 32 (rear-nonsticky t face (org-block) font-lock-multiline t src-block t font-lock-fontified t)) "mesdocuments-directory" #("documents-mesdocuments-directory" 0 31 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t) 31 32 (rear-nonsticky t face (org-block) font-lock-multiline t src-block t font-lock-fontified t)) "~/sharedDirectoryPrivate/" #("~/dossier_partage/Clement/" 0 25 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t) 25 26 (rear-nonsticky t face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t)) "<2022-03-06 Sun 19:00>" #("<2022-02-27 Sun 19:00>" 0 21 (face org-date) 21 22 (rear-nonsticky t face org-date)) "2022-02-27 Sun 19:00" #("2022-02-13 Sun 19:00" 0 19 (org-category "AgendaTickler" face org-date) 19 20 (org-category "AgendaTickler" face org-date rear-nonsticky t)) "documents" "Documents" "~" "/home/msi" "~/" "/home/msi" "shared-directory-all-org-files" #("org-shared-directory-files" 0 25 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t) 25 26 (rear-nonsticky t face (org-block) font-lock-multiline t src-block t font-lock-fontified t)) "documents-directory-all-org-files" "org-documents-directory-files" "shared-directory-all-org-files" "org-shared-directory-files" "documents-directory-all-org-files" #("org-documents-directory-files" 0 28 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t) 28 29 (rear-nonsticky t face (org-block) font-lock-multiline t src-block t font-lock-fontified t))))
(setq org-link--history '("id:"))
(setq buffer-name-history '("Inbox.org" "Contacts.org" "org-download.el" "testimage.org" "Contacts.org" "testimage.org" "*Messages*" "testimage.org" "Contacts.org" "AgendaTickler.org" "Bookmarks.org" "testimage.org" "org-mode.org" "testimage.org" "org-mode.org" "*Messages*" "artistes.org" "org-mode.org" "*Messages*" "org-mode.org" "*Messages*" "org-mode.org" "notesPerso(nepasgarderPointDinterogation)" "org-mode.org" "notesPerso(nepasgarderPointDinterogation)" "org-mode.org" "*Messages*" "*Backtrace*" "*Messages*" "films_vus.org" "*Messages*" "Contacts.org" "contacts.org" "Contacts.org" "AgendaTickler.org" "org-mode.org" "Bookmarks.org" "org-mode.org" "contacts.org" "Contacts.org" "templatesOrgCapture" "org-mode.org" "Contacts.org" "test.vcf" "testdecontact.org" "*org-vcard-import*" "References.org" "*Messages*" "Contacts.org" "org-mode.org" "*Messages*" "test.c<Testdedossier>" "Testdedossier" "References.org" "AgendaTickler.org" "*Messages*" "testdossier" "AgendaTickler.org" "Inbox.org" "org-mode.org" "AgendaTickler.org" "Bookmarks.org" "theme.css" "Bookmarks.org" "*dashboard*" "basicOptimisations.org" "basicOptimisationsAvecDep.org" "*Messages*" "Inbox.org" "*dashboard*" "*Org Export Process*" "*Org Export Process*<2>" "*Messages*" "*Org Export Process*<2>" "*Messages*" "org.org" "*Org Export Process*<2>" "org.org" "basicOptimisations.org" "Inbox.org" "Contacts.org" "org.org" "Contact.org" "Contacts.org" "org.org" "Contacts.org" "org.sh" "org.org" "Bookmarks.org<notes>" "Bookmarks.org<utilisateur>" "Lessauvegarde.org" "*Messages*" "*shell*" "autostart" "*Org Agenda*" "*Messages*" "test.el" "*Messages*" "sharedDirectoryPrivate" "*Messages*" "Inbox.org" "Orgzly" "Lessauvegarde.org" "dossier_partage" "*Messages*" "Lessauvegarde.org" "Inbox.org" "*Messages*" "AutomaticExportBetter.org" "*scratch*" "*Messages*" "Zotero" "*Backtrace*" "*Messages*" "*dashboard*" "Testderéférencessimple.org" "*dashboard*" "*Messages*" "Inbox.org" "References.org" "*Messages*" "configAvecCitarPasPropre.org" "reference" "Readme.org" "*Messages*" "GTD.org" "Testderéférences.org" "*Messages*" "Testderéférences.org" "*Messages*" "Testderéférences.org" "GTD.org" "Exos-Vracfinal.py" "test.py<3>" "TP.pdf" "*Messages*" "Testderéférences.org" "*Messages*" "Testderéférences.org" "*Messages*" "*dashboard*" "*Messages*" "*Org Export Process*" "*Messages*" "GTD.org" "*Messages*" "config.org<.emacs.dcavantrevert>" "comment_je_vais_faire_mon_braindump.org" "Inbox.org" "*Org Agenda*" "Inbox.org" "*Org QL View: (todo RAPPEL NEXT)*" "Inbox.org" "*Org Agenda*" "GTD.org" "*Org Agenda*" "GTD.org" "*dashboard*" "GTD.org" "*Org Agenda*" "test.org" "*Org Agenda*" "GTD.org" "test.org" "Anglais" "test.org" "*Messages*" "*Org Export Process*<2>" "*Org Export Process*<9>" "*Org Export Process*<4>" "*Org Export Process*" "Inbox.org" "*Messages*" "*ielm*" "Inbox.org" "*Messages*"))
(setq minibuffer-history '("url-retrieve-synchronously" "org-download-annotate-function" "file" "buffer" "org-vcard" "nov" "org notes" "zettelkasten" "org-download-annotate-default" "dummy-org-download-annotate-function" "org-download-annotate-default" "org-download-backend" "org-download" "org-vcard" "org-download-dnd" "Test de rename" "org-download" "org-download--file-content" "org-download-image-dir" "org-download" "peep-dired" "zettelkasten" "file" "buffer" "org-vcard" "file" "buffer" "file" "buffer" "Contact.org" "rien" "Sully film" "shared-directory-private-all-org-files" "org-id-extra-files" "file" "buffer" "file" "buffer" "file" "buffer" "org-vcard-default-export-file" "file" "buffer" "org-agenda-files" "file" "buffer" "file" "buffer" "file" "buffer"))
(setq extended-command-history '("consult-ripgrep" "org-vcard-import" "org-vcard-export" "straight-visit-package-website" "nov-next-document" "nov-goto-toc" "taille-interligne" "consult-ripgrep" "nov-goto-toc" "nov-next-document" "nov-goto-toc" "nov-next-document" "nov-previous-document" "nov-next-document" "straight-visit-package-website" "consult-ripgrep" "dashboard-jump-to-bookmarks" "dashboard-next-line" "bookmark-rename" "customize-variable" "straight-visit-package-website" "customize-group" "straight-visit-package-website" "consult-ripgrep" "org-toggle-inline-images" "revert-buffer" "org-download-edit" "org-download-rename-last-file" "customize-group" "newline" "mkdir" "straight-visit-package-website" "consult-ripgrep" "straight-use-package" "peep-dired-next-file" "customize-group" "peep-dired" "dired-view-file" "straight-use-package" "consult-ripgrep" "mkdir" "revert-buffer" "consult-ripgrep" "xah-insert-date" "consult-ripgrep" "org-vcard-export" "revert-buffer" "customize-group" "org-vcard-export" "consult-ripgrep" "find-name-dired" "consult-ripgrep" "rectangle-mark-mode" "mkdir" "org-roam-buffer-toggle" "org-id-get-create" "revert-buffer" "mkdir" "org-icalendar-combine-agenda-files-foreground" "consult-ripgrep" "org-refile-goto-last-stored" "org-vcard-import" "org-vcard-export" "consult-ripgrep" "org-vcard-export" "org-vcard-menu" "consult-ripgrep" "org-sort" "org-vcard-export" "org-vcard-import" "customize-variable" "org-vcard-import" "org-vcard-export" "org-vcard-import" "straight-use-package" "org-contacts-export-as-vcard" "org-vcard-export" "org-contacts-export-as-vcard" "end-of-line" "xah-end-of-line-or-block" "image-toggle-display" "consult-ripgrep" "smartparens-mode" "my-tangle-config-org" "straight-use-package" "flyspell-mode" "flycheck-mode" "consult-ripgrep" "revert-buffer" "man" "org-version" "consult-ripgrep" "lsp-workspace-restart" "revert-buffer" "consult-ripgrep" "revert-buffer" "line-number-mode" "lsp-workspace-restart" "company-yasnippet" "company-box-mode" "company-yasnippet" "activeryasnippets" "company-box-mode" "yas-global-mode" "c-mode" "lsp-mode" "snippet-mode" "lsp-mode" "revert-buffer" "company-mode" "revert-buffer" "lsp-completion-mode" "company-clang" "straight-dependents" "company-yasnippet" "revert-buffer" "consult-ripgrep" "find-name-dired" "org-refile-goto-last-stored" "lsp-install-server" "revert-buffer" "lsp-install-server" "revert-buffer" "mkdir" "revert-buffer" "lsp-install-server" "lsp-java-update-server" "revert-buffer" "straight-remove-unused-repos" "consult-ripgrep" "revert-buffer" "consult-ripgrep" "sql-mode" "text-mode" "tex-mode" "sql-mode" "fundamental-mode" "org-mode" "sql-mode" "consult-grep" "consult-ripgrep" "load-theme" "server-start" "consult-ripgrep" "ripgrep-regexp" "consult-ripgrep" "straight-visit-package-website" "consult-ripgrep" "bookmark-bmenu-show-all-annotations" "edit-bookmarks" "consult-ripgrep" "org-agenda" "mkdir" "set-frame-font" "buffer-face-set" "consult-ripgrep" "Policepourcoder" "Policedebase" "consult-ripgrep" "variable-pitch-mode" "set-frame-font" "set-face-font" "variable-pitch-mode" "org-indent-mode" "variable-pitch-mode" "org-indent-mode" "org-icalendar-combine-agenda-files-foreground" "org-version" "org-icalendar-combine-agenda-files-foreground" "org-time-stamp" "time-stamp" "org-icalendar-combine-agenda-files-foreground" "org-icalendar-combine-agenda-files-background" "org-icalendar-combine-agenda-files-foreground" "org-icalendar-combine-agenda-files-background" "org-reload" "org-icalendar-combine-agenda-files-background" "consult-ripgrep" "org-icalendar-combine-agenda-files-background" "org-icalendar-combine-agenda-files-foreground" "org-icalendar-combine-agenda-files-background" "org-icalendar-combine-agenda-files-foreground" "org-icalendar-combine-agenda-files-background" "org-icalendar-combine-agenda-files-foreground" "consult-ripgrep" "org-version" "org-reload" "org-version" "straight-use-package" "org-vcard-export" "straight-remove-unused-repos" "term-dynamic-complete" "term" "shell" "mkdir" "shell" "midnight-mode" "package-install" "straight-use-package" "eww-readable"))
(setq file-name-history '("~/sharedDirectoryPrivate/notes/testcontact.org" "~/Téléchargements/contacts(4).vcf" "~/sharedDirectoryPrivate/notes/testcontact.org" "~/sharedDirectoryPrivate/notes/org/orgzly/Contacts.vcf" "~/sharedDirectoryPrivate/notes/templatesOrgCapture/contacts.org" "~/.dotfiles/.emacs.d/config/org-mode.org" "~/sharedDirectoryPrivate/notes/testimage.org" "~/.dotfiles/.emacs.d/config/org-mode.org" "~/sharedDirectoryPrivate/notes/testimage.org" "~/.dotfiles/.emacs.d/config/org-mode.org" "~/sharedDirectoryPrivate/notes/testimage.org" "~/.dotfiles/.emacs.d/config/org-mode.org" "~/sharedDirectoryPrivate/notes/test.org" "~/sharedDirectoryPrivate/notes/org/artistes.org" "~/sharedDirectoryPrivate/notes/org/images" "~/sharedDirectoryPrivate/notes/zettelkasten/images" "~/sharedDirectoryPrivate/notes/templatesOrgCapture/" "~/sharedDirectoryPrivate/notes/org/orgzly/AgendaTickler.org" "~/sharedDirectoryPrivate/notes/templatesOrgCapture/àFairePetitÀPetit/snippets/" "~/sharedDirectoryPrivate/notes/templatesOrgCapture/àFairePetitÀPetit/snippets" "~/sharedDirectoryPrivate/notes/templatesOrgCapture/àFairePetitÀPetit/" "~/sharedDirectoryPrivate/notes/templatesOrgCapture/àFairePetitÀPetit" "/media/utilisateur/8726733b-80c1-4ed4-9915-ed73e21cab26/home/msi/dossier_partage/Nell/Nox.kdbx" "~/sharedDirectoryPrivate/notes/org/artistesImages" "~/sharedDirectoryPrivate/notes/org/" "~/sharedDirectoryPrivate/notes/org/orgzly/Inbox.org" "~/sharedDirectoryPrivate/notes/zettelkasten/notesPerso(nepasgarderPointDinterogation)/" "~/sharedDirectoryPrivate/notes/zettelkasten/notesPerso(nepasgarderPointDinterogation)/recettes.org" "~/sharedDirectoryPrivate/notes/zettelkasten/notesPerso(nepasgarderPointDinterogation)/artistes.org" "~/.dotfiles/.emacs.d/config/org-mode.org" "~/sharedDirectoryPrivate/notes/zettelkasten/notesPerso(nepasgarderPointDinterogation)" "~/sharedDirectoryPrivate/notes/org/orgzly/Contacts.vcf" "~/sharedDirectoryPrivate/notes/templatesOrgCapture/contacts.org" "~/sharedDirectoryPrivate/notes/org/orgzly/Contacts.vcf" "~/.dotfiles/.emacs.d/config/org-mode.org" "~/sharedDirectoryPrivate/notes/org/orgzly/AgendaTickler.org" "~/sharedDirectoryPrivate/notes/templatesOrgCapture/next.org" "~/sharedDirectoryPrivate/notes/templatesOrgCapture/contactAncienAsupprimer.org" "~/sharedDirectoryPrivate/" "~/sharedDirectoryPrivate/notes/zettelkasten/notesperso?/" "~/sharedDirectoryPrivate/notes/org/orgzly/Bookmarks.org" "~/sharedDirectoryPrivate/notes/zettelkasten/notesperso?" "~/sharedDirectoryPrivate/notes/org/unenotesorg.org" "~/sharedDirectoryPrivate/notes/org/Fonctionnement.org" "~/sharedDirectoryPrivate/notes/org/Note.org" "~/sharedDirectoryPrivate/notes/zettelkasten/reference/EffetIkea2021.org" "~/mesdocuments/professionnel/cours/S4/ProgrammationOBJ/TP/4" "~/sharedDirectoryPrivate/notes/zettelkasten/reference/BiaisAutocomplaisance2021.org" "~/sharedDirectoryPrivate/notes/org/testdecontact.org" "~/Téléchargements/contacts(3).vcf" "~/sharedDirectoryPrivate/notes/org/orgzly/Contacts.vcf" "~/sharedDirectoryPrivate/notes/org/orgzly/test.vcf" "~/sharedDirectoryPrivate/notes/templatesOrgCapture/contactAncienAsupprimer.org" "~/sharedDirectoryPrivate/sauvegardePcEtTel/Lessauvegardes.org" "~/sharedDirectoryPrivate/notes/org/test.vcf" "~/Téléchargements/contacts(2).vcf" "~/sharedDirectoryPrivate/notes/org/testdecontact.org" "~/Téléchargements/contacts(2).vcf" "~/sharedDirectoryPrivate/notes/org/test.vcf" "~/sharedDirectoryPrivate/notes/org/testdecontact.org" "~/Téléchargements/test.vcf" "~/Téléchargements/" "~/sharedDirectoryPrivate/notes/org/contact.vcf" "~/sharedDirectoryPrivate/notes/org/test.org" "~/Téléchargements/contacts(1).vcf" "~/sharedDirectoryPrivate/notes/org/test.org" "~/Téléchargements/contacts.vcf" "~/sharedDirectoryPrivate/notes/org/test.org" "~/sharedDirectoryPrivate/notes/org/orgzly/Contacts.org" "~/sharedDirectoryPrivate/notes/org/orgzly/test.vcf" "~/mesdocuments/professionnel/cours/S4/ProjetPrepIsima/Projet/Readme.md" "~/.dotfiles/.emacs.d/Organisation.jpg" "~/.dotfiles/.emacs.d/config/basicOptimisationsAvecDep.org" "~/.dotfiles/.tnaueit" "~/.dotfiles/.gitnateuniat" "~/.dotfiles/.emacs.d/init.el" "~/.dotfiles/.gitconfig" "~/.dotfiles/.emacs.d/config/basicOptimisationsAvecDep.org" "~/sharedDirectoryPrivate/sauvegardePcEtTel/Lessauvegardes.org" "~/.dotfiles/" "~/sharedDirectoryPrivate/sauvegardePcEtTel/Lessauvegardes.org" "~/.emacs.dAvantGit(àsuppr)" "~/.emacs.dAvantGit" "~/Testdedossier/test.c" "~/.emacs.d/config/programmation.org" "~/.emacs.d/config/programmationmarche.org" "~/.emacs.d/config/programmation.org" "~/Testdedossier/test.c" "~/.emacs.d/config/programmation.org" "~/.emacs.d/config/programmationancien.org" "~/.emacs.d/config/programmation.org" "~/Testdedossier/test.c" "~/.emacs.d/config/programmation.org" "~/Testdedossier/test.c" "~/Testdedossier" "~/sharedDirectoryPrivate/sauvegardePcEtTel/TEST.ORG" "~/sharedDirectoryPrivate/sauvegardePcEtTel/Lessauvegarde.org" "~/mesdocuments/professionnel/cours/S4/BaseDeDonnees/sujet2/Exercices.org" "~/testdossier/test.c" "~/sharedDirectoryPrivate/" "~/sharedDirectoryPrivate/notes/" "~/sharedDirectoryPrivate/notes/org/" "~/sharedDirectoryPrivate/sauvegardePcEtTel/Lessauvegarde.org" "~/testdossier/test.py" "~/testdossier/test/test.c" "~/testdossier/test" "~/sharedDirectoryPrivate/notes/org/" "~/sharedDirectoryPrivate/notes/org/orgzly/Bookmarks.org" "/tmp/emacs-everywhere-20220306-175336-Firefox" "/tmp/emacs-everywhere-20220306-175314-Firefox" "/tmp/emacs-everywhere-20220306-174629-Firefox" "/tmp/emacs-everywhere-20220306-174612-Firefox" "/tmp/emacs-everywhere-20220306-174547-Firefox" "/tmp/emacs-everywhere-20220306-174540-Firefox" "/tmp/emacs-everywhere-20220306-173523-Firefox" "/tmp/emacs-everywhere-20220306-151753-Firefox" "/tmp/emacs-everywhere-20220306-151732-Firefox" "~/sharedDirectoryPrivate/notes/org/" "/tmp/emacs-everywhere-20220306-134321-Firefox" "/tmp/emacs-everywhere-20220306-134258-Firefox" "~/sharedDirectoryPrivate/sauvegardePcEtTel/ordi/set_customShortcutUbuntu.py" "~/sharedDirectoryPrivate/sauvegardePcEtTel/ordi/set_customshortcut.py" "~/sharedDirectoryPrivate/sauvegardePcEtTel/ordi/scriptPourRajouterRaccourcisUbuntu.py" "/tmp/emacs-everywhere-20220306-133438-Firefox" "~/sharedDirectoryPrivate/sauvegardePcEtTel/ordi/script.py" "~/sharedDirectoryPrivate/sauvegardePcEtTel/Lessauvegarde.org" "/tmp/emacs-everywhere-20220306-125506-Firefox" "/tmp/emacs-everywhere-20220306-125454-Firefox" "/tmp/emacs-everywhere-20220306-125441-Firefox" "/tmp/emacs-everywhere-20220306-125434-Firefox" "/tmp/emacs-everywhere-20220306-125411-Firefox" "/tmp/emacs-everywhere-20220306-125359-Firefox" "/tmp/emacs-everywhere-20220306-125353-Firefox" "/tmp/emacs-everywhere-20220306-125331-Firefox" "/tmp/emacs-everywhere-20220306-125324-Firefox" "/tmp/emacs-everywhere-20220306-125252-Firefox" "/tmp/emacs-everywhere-20220306-125245-Firefox" "/tmp/emacs-everywhere-20220306-125239-Firefox" "/tmp/emacs-everywhere-20220306-125232-Firefox" "/tmp/emacs-everywhere-20220306-125228-Firefox" "/tmp/emacs-everywhere-20220306-125110-Firefox" "/tmp/emacs-everywhere-20220306-125015-Firefox" "~/.emacs.d/config/basicOptimisations.org" "/tmp/emacs-everywhere-20220306-124608-Firefox" "/tmp/emacs-everywhere-20220306-123942-Firefox" "/tmp/emacs-everywhere-20220306-123923-Firefox" "/tmp/emacs-everywhere-20220306-123742-Firefox" "~/sharedDirectoryPrivate/sauvegardePcEtTel/Lessauvegarde.org" "~/.emacs.d/config/integration.org" "~/sharedDirectoryPrivate/sauvegardePcEtTel/Lessauvegarde.org" "~/.emacs.d/config/" "~/sharedDirectoryPrivate/sauvegardePcEtTel/Lessauvegarde.org" "~/.emacs.dAutreOrdi" "~/sharedDirectoryPrivate/sauvegardePcEtTel/Lessauvegarde.org" "~/.emacs.d/config/basicOptimisationsAvecDep.org" "~/sharedDirectoryPrivate/sauvegardePcEtTel/Lessauvegarde.org" "~/.dotfiles/" "~/" "~/sharedDirectoryPrivate/notes/org/orgzly/.fonts" "~/" "~/sharedDirectoryPrivate/notes/org/orgzly/.fontconfig" "~/.font" "~/.emacs.d/config/programmation.sh" "~/.emacs.d/config/basicOptimisationsAvecDep.sh" "~/sharedDirectoryPrivate/sauvegardePcEtTel/Lessauvegarde.org" "~/.emacs.d/config/basicOptimisationsAvecDep.org" "~/Téléchargements/" "~/.emacs.dAutreOrdi" "~/sharedDirectoryPrivate/agendapourgoogle.ics" "~/sharedDirectoryPrivate/notes/org/orgzly/AgendaTickler.org" "~/sharedDirectoryPrivate/notes/templatesOrgCapture/evenement.org" "~/.emacs.d/config/org-mode.org" "~/sharedDirectoryPrivate/notes/org/orgzly/AgendaTickler.org_archive" "~/.emacs.d/config/org-mode.org" "~/sharedDirectoryPrivate/notes/org/orgzly/" "~/testdossier/" "~/sharedDirectoryPrivate/notes/org/orgzly/" "~/testdossier/" "~/.emacs.d/config/basicOptimisations.org" "~/.emacs.d/config/org-mode.org" "~/sharedDirectoryPrivate/nratuei" "~/.emacs.d/config/basicOptimisations.org" "~/.emacs.d/config/org-mode.sh" "~/.emacs.d/config/org-mode.org" "~/.emacs.d/config/org.org" "~/.emacs.d/straight/build/test" "~/sharedDirectoryPrivate/notes/org/orgzly/Contact.vcf" "~/.emacs.d/config/org.org" "~/.local/share/applications/org-protocol.desktop" "~/sharedDirectoryPrivate/sauvegardePcEtTel/Lessauvegarde.org" "~/sharedDirectoryPrivate/org-linkz/test" "~/mesdocuments/professionnel/cours/S4/BaseDeDonnees/sujet2/Exercices.org" "~/sharedDirectoryPrivate/sauvegardePcEtTel/Lessauvegarde.org" "~/sharedDirectoryPrivate/sauvegardePcEtTel/zsh" "~/testdossier/salut.org" "~/testdossier" "~/sharedDirectoryPrivate/sauvegardePcEtTel/Lessauvegarde.org" "~/mesdocuments/professionnel/cours/S4/BaseDeDonnees/sujet2/Exercices.org" "~/mesdocuments/professionnel/cours/S4/BaseDeDonnees/sujet2/td2-sujet.pdf" "~/sharedDirectoryPrivate/orgzlyBisTest/"))
(setq consult--line-history '("org-download--parse-link" "org-download-insert-link" "org-download-annotate-function" "org-download-annotate-default" "org-download-image defu" "URI" "org-download-dnd def" "dnd file" "dnd fil" "tmp" "org-download-annotate-default" "ID" "You" "Pi" "Nico" "Math" "Lau" "Fr" "Fil" "Arm" "icon" "clement020302@gmail.com" "affai" "bro" "epu" "tél" "autr" "jou" "rena" "var" ".emacs" "org-download-insert-link" "org-download-annotate-function" "org-download-annotate-default" "org dow" "or dow" "stra" "autr" "#+DOWNLOADED" "org-download-annotate-function" "org-download-annotate-default" "aut" "#+DOWNLOADED" "test" "org downl" "after hook" "image inte" "ima" "peep-dired-display-file-other-window" "peep-dired-enable" "bros" "etc" "var" ".emacs.dr" "sha" "not" "o sont" "journ" "lien" "gala" "artis" "setq org capt" "arti" "setq org capt" ".emacs" "un jour" "doss" "hom" "med" "cleme" "prénom" "inb" "inbo" "we" "arn" "test" "ex par" "test nom" "setq org cap" "inbo" "note" "categ" "org cap" "after" "setq org capt " "diss" "rea" "read" "inbo" "con" "sit" "mes" "sull" "path" "ba" "bros" "<2022-03-07 Mon 19:00>" "bros" "scrip" "org refil targe" "/home/utilisateur/sharedDirectoryPrivate/notes/org/films_vus.org" "film" "try id" "pro pers" "nico ro" "pro" "org-vcard-default-export-file" "layou" "tem" "capt con" "org mod" "tel" "vid" "ex par" "org" "tit" "ORG" "valid-languages" "language \" \"" "title" "télé" "bi" "pré" "org conta" "il est sympas" "il est s" "org conta u" "org vcar" "gest" "org mo" "read" "setq my" "user-emacs-directory" "my-user-emacs-directory setq" "setq my-user-emacs-directory" "my " "my tang" ".dot" "my tang defu" "tangle-config-org defu" "hook" "con" ".dot" "my-tangle-a-file-of-config-org-hook-func" "con" "my-tangle-a-file-of-config-org-hook-func" ".sh " "bas sh" "save" "cust" "var" "et" "bas" "bas o" "huns" "mes" "fuzz" "h1" "colo" "sha" ".dot" "git" "bas" "git" ".dot" "hist" "beg sh" "begin" "ssh" "-t rsa" "script" "mes" "git" "mes" ".dotf" ".emacs" "hom" "org" ".org" "conf" "test" "use pack compa" "lsp prov" "use pack compa" "lsp co" "test" "use pack com" "setq lsp" "compa " "use pa com" "use pack compa" "use pack com" "lsp prov" "use pack compa" "use pack com" "use pa com" "dis" "disab" "disa" "use compa"))
(setq projectile-project-command-history '#s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ()))
(setq dired-quick-sort-time-last '"status")
(setq dired-quick-sort-group-directories-last '110)
(setq dired-quick-sort-reverse-last '110)
(setq dired-quick-sort-sort-by-last '"version")
(setq kill-ring '(#("finir braindump" 0 6 (face org-level-1 fontified t org-category "Inbox") 6 15 (face org-level-1 fontified t org-category "Inbox")) #("* NEXT [#A] finir braindump et org normal :" 0 1 (fontified t org-category "Inbox" keymap (keymap) face org-level-1) 1 2 (fontified t org-category "Inbox" keymap (keymap) face org-level-1) 2 6 (fontified t org-category "Inbox" face ((:foreground "orange red" :weight bold) (:foreground "orange red" :weight bold) org-level-1)) 6 7 (fontified t org-category "Inbox" face org-level-1) 7 11 (fontified t org-category "Inbox" font-lock-fontified t face (org-priority org-level-1)) 11 12 (fontified t face org-level-1) 12 42 (fontified t org-category "Inbox" face org-level-1) 42 43 (fontified t org-category "Inbox" face org-level-1)) #("NEXT [#A]" 0 4 (fontified t org-category "Inbox" face ((:foreground "orange red" :weight bold) (:foreground "orange red" :weight bold) org-level-1)) 4 5 (fontified t org-category "Inbox" face org-level-1) 5 9 (fontified t org-category "Inbox" font-lock-fontified t face (org-priority org-level-1))) "https://github.com/orgzly" #("cloner orgzly chez moi et regarder comme créer l'apk pour être sûr que tout marchera toujours ?" 0 95 (fontified t face org-level-1)) #("A] Pas obligatoire + " 0 2 (face (org-priority org-level-1) font-lock-fontified t org-category "Inbox" fontified t) 2 3 (face org-level-1 org-category "Inbox" fontified t) 3 7 (fontified t org-category "Inbox" face org-level-1) 7 21 (fontified t org-category "Inbox" face org-level-1)) #("une " 0 4 (fontified t org-category "Contacts")) #("(defun org-download--parse-link (link)
    (cond
          (t
           (let ((buffer (url-retrieve-synchronously link t)))
             (org-download--detect-ext link buffer)))))" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 1 6 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 6 7 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 7 31 (face (font-lock-function-name-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 31 39 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 39 41 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 41 44 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 44 48 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 48 49 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 49 57 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 57 59 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 59 60 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 60 61 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 61 62 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 62 63 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 63 72 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 72 73 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 73 74 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 74 77 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 77 120 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 120 121 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 121 125 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 125 127 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 127 179 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 179 180 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t rear-nonsticky t fontified t)) "https://www.deviantart.com/fellfallow/art/Warm-winds-908810607" #("url-retrieve-synchronously" 0 26 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) #("(defun org-download--parse-link (link)
  (cond ((image-type-from-file-name link)
         (list link nil))
        ((string-match \"^file:/+\" link)
         (list link nil))
        (t
         (let ((buffer (url-retrieve-synchronously link t)))
           (org-download--detect-ext link buffer)))))" 0 1 (fontified t) 1 6 (face font-lock-keyword-face fontified t) 6 42 (fontified t) 42 46 (face font-lock-keyword-face fontified t) 46 91 (fontified t) 91 95 (face font-lock-function-name-face fontified t) 95 101 (fontified t) 101 104 (face font-lock-builtin-face fontified t) 104 117 (fontified t) 117 129 (face font-lock-function-name-face fontified t) 129 130 (fontified t) 130 140 (face font-lock-string-face fontified t) 140 157 (fontified t) 157 161 (face font-lock-function-name-face fontified t) 161 167 (fontified t) 167 170 (face font-lock-builtin-face fontified t) 170 182 (fontified t) 182 183 (face font-lock-builtin-face fontified t) 183 194 (fontified t) 194 197 (face font-lock-keyword-face fontified t) 197 240 (fontified t) 240 241 (face font-lock-builtin-face fontified t) 241 298 (fontified t)) #("url-retrieve-synchronously" 0 26 (fontified t)) #("org-download--parse-link" 0 24 (fontified t)) #("org-download-image" 0 18 (fontified t)) #("org-download-insert-link" 0 24 (fontified t)) #("org-download-annotate-function" 0 30 (fontified t)) #("org-download-annotate-default" 0 28 (fontified t) 28 29 (rear-nonsticky t fontified t)) #("org-download-annotate-default" 0 29 (fontified t)) #("link" 0 4 (fontified t)) #("org-download-annotate-default" 0 29 (fontified t)) #("org-download-annotate-default" 0 29 (fontified t)) #("org-download-annotate-default" 0 29 (face (font-lock-function-name-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) #("link" 0 4 (fontified t)) #("org-download-image" 0 18 (fontified t)) #("URI" 0 3 (face font-lock-string-face fontified t)) #("org-download-dnd" 0 16 (fontified t)) #("tmp" 0 3 (face font-lock-string-face fontified t)) #("(defun org-download-annotate-default (link)
  \"Annotate LINK with the time of download.\"
  (format \"#+DOWNLOADED: %s @ %s\\n\"
          (if (equal link org-download-screenshot-file)
              \"screenshot\"
            link)
          (format-time-string \"%Y-%m-%d %H:%M:%S\")))" 0 1 (fontified t) 1 6 (face font-lock-keyword-face fontified t) 6 46 (fontified t) 46 88 (face font-lock-string-face fontified t) 88 92 (fontified t) 92 98 (face font-lock-function-name-face fontified t) 98 99 (fontified t) 99 124 (face font-lock-string-face fontified t) 124 136 (fontified t) 136 138 (face font-lock-keyword-face fontified t) 138 140 (fontified t) 140 145 (face font-lock-function-name-face fontified t) 145 195 (fontified t) 195 207 (face font-lock-string-face fontified t) 207 237 (fontified t) 237 255 (face font-lock-function-name-face fontified t) 255 256 (fontified t) 256 275 (face font-lock-string-face fontified t) 275 278 (fontified t)) #("(defun org-download-annotate-default (link)
  \"Annotate LINK with the time of download.\"
  (format \"#+DOWNLOADED: %s @ %s\\n\"
          (if (equal link org-download-screenshot-file)
              \"screenshot\"
            link)
          (format-time-string \"%Y-%m-%d %H:%M:%S\")))" 0 1 (fontified t) 1 6 (face font-lock-keyword-face fontified t) 6 46 (fontified t) 46 88 (face font-lock-string-face fontified t) 88 92 (fontified t) 92 98 (face font-lock-function-name-face fontified t) 98 99 (fontified t) 99 124 (face font-lock-string-face fontified t) 124 136 (fontified t) 136 138 (face font-lock-keyword-face fontified t) 138 140 (fontified t) 140 145 (face font-lock-function-name-face fontified t) 145 195 (fontified t) 195 207 (face font-lock-string-face fontified t) 207 237 (fontified t) 237 255 (face font-lock-function-name-face fontified t) 255 256 (fontified t) 256 275 (face font-lock-string-face fontified t) 275 278 (fontified t)) #("org-download-annotate-default" 0 29 (fontified t)) "~/sharedDirectoryPrivate/notes/" #("Perso " 0 5 (face org-property-value org-category "Contacts" fontified t) 5 6 (org-category "Contacts" fontified t)) #("Pro " 0 3 (face org-property-value org-category "Contacts" fontified t) 3 4 (org-category "Contacts" fontified t)) #("clement020302@gmail.com" 0 4 (face org-property-value org-category "Contacts" fontified t) 4 23 (face org-property-value org-category "Contacts" fontified t)) "/home/utilisateur/sharedDirectoryPrivate/notes/org/images/Testn/2022-03-08_22-29-42_like_a_boss___by_dragibuz_df17fx0-pre.jpg" "line" #("(use-package nov
    :config
    (add-to-list 'auto-mode-alist '(\"\\\\.epub\\\\'\" . nov-mode)))" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1 12 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 12 13 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 13 16 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face org-block) help-echo nil src-block t) 16 17 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 17 21 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 21 28 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 28 29 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 29 65 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 65 77 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 77 91 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) "shift project" #("mrp" 0 3 (fontified t org-category "Inbox" face org-level-1)) #("mrp                " 0 19 (fontified t org-category "Inbox" face org-level-1)) #(":noexport:" 0 9 (keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face (org-tag org-level-1) org-category "Bookmarks" fontified t) 9 10 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face (org-tag org-level-1) org-category "Bookmarks" fontified t)) #("* ZLes options pour l'export                                         :ignore:
#+HTML_DOCTYPE: html5
#+OPTIONS: toc:1 num:nil html-style:nil H:2
#+HTML_HEAD: <link rel=\"stylesheet\" href=\"css/theme.css\">
#+HTML_HEAD: <script src=\"js/jquery-3.3.1.min.js\"></script>
#+HTML_HEAD: <script src=\"js/jquery.searchable.js\"></script>
#+HTML_HEAD: <script src=\"js/smooth-scroll.js\"></script>
#+HTML_HEAD: <script src=\"js/main.js\"></script>
#+HTML: <input id=\"search\" autofocus>
#+HTML_CONTAINER: wrapper
#+HTML_CONTAINER_CLASS: cntclass

# où sera exporté le fichier html (dans org-linkz évidemment)
#+export_file_name: ../../../org-linkz/Bookmarks.html
# pour que les liens s'ouvre dans une autre fenêtre
#+HTML_HEAD: <base target=\"_blank\">
" 0 1 (face org-level-1 keymap (keymap) fontified t) 1 2 (face org-level-1 keymap (keymap) fontified t) 2 3 (face org-level-1 fontified t) 3 69 (face org-level-1 fontified t) 69 76 (keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face (org-tag org-level-1) fontified t org-category "Bookmarks") 76 77 (keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face (org-tag org-level-1) fontified t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) org-category "Bookmarks") 77 78 (font-lock-fontified t org-category "Bookmarks" fontified t) 78 99 (face org-meta-line font-lock-fontified t org-category "Bookmarks" fontified t) 99 100 (org-category "Bookmarks" fontified t) 100 143 (face org-meta-line font-lock-fontified t org-category "Bookmarks" fontified t) 143 144 (org-category "Bookmarks" fontified t) 144 201 (face org-meta-line font-lock-fontified t org-category "Bookmarks" fontified t) 201 202 (org-category "Bookmarks" fontified t) 202 261 (face org-meta-line font-lock-fontified t org-category "Bookmarks" fontified t) 261 262 (org-category "Bookmarks" fontified t) 262 322 (face org-meta-line font-lock-fontified t org-category "Bookmarks" fontified t) 322 323 (org-category "Bookmarks" fontified t) 323 379 (face org-meta-line font-lock-fontified t org-category "Bookmarks" fontified t) 379 380 (org-category "Bookmarks" fontified t) 380 427 (face org-meta-line font-lock-fontified t org-category "Bookmarks" fontified t) 427 428 (org-category "Bookmarks" fontified t) 428 465 (face org-meta-line font-lock-fontified t org-category "Bookmarks" fontified t) 465 466 (org-category "Bookmarks" fontified t) 466 491 (face org-meta-line font-lock-fontified t org-category "Bookmarks" fontified t) 491 492 (org-category "Bookmarks" fontified t) 492 524 (face org-meta-line font-lock-fontified t org-category "Bookmarks" fontified t) 524 525 (org-category "Bookmarks" fontified t) 525 526 (org-category "Bookmarks" fontified t) 526 559 (face font-lock-comment-face font-lock-fontified t org-category "Bookmarks" fontified t) 559 587 (face font-lock-comment-face font-lock-fontified t org-category "Bookmarks" fontified t) 587 588 (org-category "Bookmarks" fontified t) 588 641 (face org-meta-line font-lock-fontified t org-category "Bookmarks" fontified t) 641 642 (org-category "Bookmarks" fontified t) 642 693 (face font-lock-comment-face font-lock-fontified t org-category "Bookmarks" fontified t) 693 694 (org-category "Bookmarks" fontified t) 694 729 (face org-meta-line font-lock-fontified t org-category "Bookmarks" fontified t) 729 730 (org-category "Bookmarks" fontified t)) #("
Possibilité de revenir sur firexfox en important \"bookmark depuis html\" dans firefox, faudra juste tout ranger dans sa catégorie

Je peux trier avec org-sort puis time, par exemple

=Seul contrainte : = ne pas mettre de liens directement sous les titres :
Faire une boîte, puis une autre, puis les liens (ou autre boîte etc)" 0 1 (org-category "Bookmarks" fontified t) 1 130 (org-category "Bookmarks" fontified t) 130 131 (org-category "Bookmarks" fontified t) 131 182 (org-category "Bookmarks" fontified t) 182 183 (org-category "Bookmarks" fontified t) 183 184 (invisible t org-emphasis t font-lock-multiline t org-category "Bookmarks" fontified t) 184 202 (org-emphasis t font-lock-multiline t face ((:foreground "yellow")) org-category "Bookmarks" fontified t) 202 203 (invisible t org-emphasis t font-lock-multiline t org-category "Bookmarks" fontified t) 203 257 (org-category "Bookmarks" fontified t) 257 325 (org-category "Bookmarks" fontified t)) #("noexport" 0 8 (keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face (org-tag org-level-1) fontified t org-category "Bookmarks")) #(":noexport:" 0 9 (keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face (org-tag org-level-1) org-category "Bookmarks" fontified t) 9 10 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face (org-tag org-level-1) org-category "Bookmarks" fontified t)) "org" #("[#A]" 0 4 (face (org-priority org-level-1) org-todo-head #("RAPPEL" 0 6 (face (:foreground "white" :weight bold))) font-lock-fontified t org-category "Inbox" fontified t)) #("#+DOWNLOADED:" 0 13 (face org-meta-line font-lock-fontified t fontified t)) #("(use-package org-download
    :config

    ;; pour enlever la description de l'image


    (defun dummy-org-download-annotate-function (link)
      \"\")
    ;; setq in doom emacs
    ;; (setq org-download-annotate-function #'dummy-org-download-annotate-function)

    )" 0 1 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 1 12 (src-block t help-echo nil face (font-lock-keyword-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 12 13 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 13 25 (src-block t help-echo nil face (font-lock-constant-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 25 26 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 26 30 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 30 37 (src-block t help-echo nil face (font-lock-builtin-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 37 38 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 38 39 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 39 43 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 43 46 (src-block t help-echo nil face (font-lock-comment-delimiter-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 46 85 (src-block t help-echo nil face (font-lock-comment-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 85 86 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 86 87 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 87 92 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 92 97 (src-block t help-echo nil face (font-lock-keyword-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 97 98 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 98 134 (src-block t help-echo nil face (font-lock-function-name-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 134 142 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 142 148 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 148 150 (src-block t help-echo nil face (font-lock-doc-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 150 152 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 152 156 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 156 159 (src-block t help-echo nil face (font-lock-comment-delimiter-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 159 178 (src-block t help-echo nil face (font-lock-comment-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 178 182 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 182 185 (src-block t help-echo nil face (font-lock-comment-delimiter-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 185 261 (src-block t help-echo nil face (font-lock-comment-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 261 262 (src-block t help-echo nil face (font-lock-comment-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 262 263 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 263 268 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) #("#+DOWNLOADED:" 0 13 (face org-meta-line font-lock-fontified t fontified t)) #("org-download-insert-link" 0 24 (fontified t)) #("org-download-annotate-function" 0 30 (fontified t)) #("org-download-annotate-default" 0 29 (fontified t)) "annotate" "org-download-insert-annotate" "org-download-insert-annotate " "#+DOWNLOADED" #("link" 0 4 (fontified t)) #("org-download-annotate-function" 0 30 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) ";; setq in doom emacs
(setq org-download-annotate-function
      #'dummy-org-download-annotate-function)"))
(setq search-ring 'nil)
(setq recentf-list '("/home/utilisateur/sharedDirectoryPrivate/sauvegardePcEtTel/Lessauvegardes.org" "/home/utilisateur/mesdocuments/personnel/informatique/emacs/emacs.dyoutube/README.org" "/home/utilisateur/sharedDirectoryPrivate/notes/org/orgzly/Inbox.org" "/home/utilisateur/sharedDirectoryPrivate/notes/org/orgzly/Contacts.org" "/home/utilisateur/.dotfiles/.emacs.d/config/org-mode.org" "/home/utilisateur/sharedDirectoryPrivate/notes/testimage.org" "/home/utilisateur/.dotfiles/.emacs.d/config.org" "/home/utilisateur/.emacs.d/config.org" "/home/utilisateur/.dotfiles/.emacs.d/straight/build/org-download/org-download.el" "/home/utilisateur/sharedDirectoryPrivate/notes/org/images/Testn/2022-03-08_22-29-42_like_a_boss___by_dragibuz_df17fx0-pre.jpg" "/home/utilisateur/sharedDirectoryPrivate/notes/templatesOrgCapture/contacts.org" "/home/utilisateur/Téléchargements/EBOOK The Shift Project- Le plan de transformation de leconomie francaise.epub" "/home/utilisateur/.dotfiles/.emacs.d/config/basicOptimisations.org" "/home/utilisateur/.dotfiles/.emacs.d/config/basicOptimisationsAvecDep.org" "/home/utilisateur/.emacs.dAutreOrdi/config.org" "/home/utilisateur/.emacs.dAutreOrdi/#config.org#" "/home/utilisateur/sharedDirectoryPrivate/notes/org/.dir-locals.el" "/home/utilisateur/sharedDirectoryPrivate/notes/zettelkasten/notesPerso(nepasgarderPointDinterogation)/films_vus.org" "/home/utilisateur/sharedDirectoryPrivate/notes/zettelkasten/main/comment_je_vais_faire_mon_braindump.org" "/home/utilisateur/sharedDirectoryPrivate/notes/zettelkasten/notesPerso(nepasgarderPointDinterogation)/livres_lus.org" "/home/utilisateur/sharedDirectoryPrivate/notes/zettelkasten/notesPerso(nepasgarderPointDinterogation)/jeux_video_joues.org" "/home/utilisateur/sharedDirectoryPrivate/notes/zettelkasten/notesPerso(nepasgarderPointDinterogation)/citations.org" "/home/utilisateur/sharedDirectoryPrivate/notes/zettelkasten/reference/EffetIkea2021.org" "/home/utilisateur/sharedDirectoryPrivate/notes/zettelkasten/reference/BiaisAutocomplaisance2021.org" "/home/utilisateur/sharedDirectoryPrivate/notes/templatesOrgCapture/artistes.org" "/home/utilisateur/sharedDirectoryPrivate/notes/templatesOrgCapture/contactAncienAsupprimer.org" "/home/utilisateur/sharedDirectoryPrivate/notes/templatesOrgCapture/evenement.org" "/home/utilisateur/sharedDirectoryPrivate/notes/templatesOrgCapture/evenementplusieursjours.org" "/home/utilisateur/sharedDirectoryPrivate/notes/templatesOrgCapture/image.org" "/home/utilisateur/sharedDirectoryPrivate/notes/templatesOrgCapture/next.org" "/home/utilisateur/sharedDirectoryPrivate/notes/templatesOrgCapture/tickler.org" "/home/utilisateur/sharedDirectoryPrivate/notes/templatesOrgCapture/todo.org" "/home/utilisateur/sharedDirectoryPrivate/notes/templatesOrgCapture/àFairePetitÀPetit/livre_roam.org" "/home/utilisateur/sharedDirectoryPrivate/notes/templatesOrgCapture/àFairePetitÀPetit/film_roam.org" "/home/utilisateur/sharedDirectoryPrivate/notes/org/artistes.org" "/home/utilisateur/sharedDirectoryPrivate/notes/org/journal_de_dissatisfaction.org" "/home/utilisateur/sharedDirectoryPrivate/notes/org/recettes.org" "/home/utilisateur/sharedDirectoryPrivate/notes/org/unenotesorg.org" "/home/utilisateur/sharedDirectoryPrivate/org-linkz/Readme.org" "/home/utilisateur/sharedDirectoryPrivate/org-linkz/Monreadme.org" "/home/utilisateur/sharedDirectoryPrivate/orgzlyBisTest/xenophon.org" "/home/utilisateur/sharedDirectoryPrivate/orgzlyBisTest/wolfgang_amadeus_mozart.org" "/home/utilisateur/sharedDirectoryPrivate/orgzlyBisTest/wittgenstein.org" "/home/utilisateur/sharedDirectoryPrivate/orgzlyBisTest/winston_churchill.org" "/home/utilisateur/sharedDirectoryPrivate/orgzlyBisTest/willem_de_kooning.org" "/home/utilisateur/sharedDirectoryPrivate/orgzlyBisTest/warren_buffett.org" "/home/utilisateur/sharedDirectoryPrivate/orgzlyBisTest/walter_lippmann.org" "/home/utilisateur/sharedDirectoryPrivate/orgzlyBisTest/vol_us_airways_1549.org" "/home/utilisateur/sharedDirectoryPrivate/orgzlyBisTest/vincent_lindon.org" "/home/utilisateur/sharedDirectoryPrivate/orgzlyBisTest/victor_hugo.org" "/home/utilisateur/sharedDirectoryPrivate/orgzlyBisTest/victor_emmanuel_iii.org" "/home/utilisateur/sharedDirectoryPrivate/orgzlyBisTest/victor_emmanuel_ii.org" "/home/utilisateur/sharedDirectoryPrivate/orgzlyBisTest/verdi.org" "/home/utilisateur/sharedDirectoryPrivate/orgzlyBisTest/umberto_eco.org" "/home/utilisateur/sharedDirectoryPrivate/orgzlyBisTest/troisième_revolution.org" "/home/utilisateur/sharedDirectoryPrivate/orgzlyBisTest/trois_glorieuses.org" "/home/utilisateur/sharedDirectoryPrivate/orgzlyBisTest/transcendantalisme.org" "/home/utilisateur/sharedDirectoryPrivate/orgzlyBisTest/tom_hanks.org" "/home/utilisateur/sharedDirectoryPrivate/orgzlyBisTest/todd_komarnicki.org" "/home/utilisateur/sharedDirectoryPrivate/orgzlyBisTest/the_doors.org" "/home/utilisateur/sharedDirectoryPrivate/orgzlyBisTest/test_de_chose_bibtex.org" "/home/utilisateur/sharedDirectoryPrivate/orgzlyBisTest/test.org" "/home/utilisateur/sharedDirectoryPrivate/orgzlyBisTest/systeme_nerveux.org" "/home/utilisateur/sharedDirectoryPrivate/orgzlyBisTest/systeme_immunitaire.org" "/home/utilisateur/sharedDirectoryPrivate/orgzlyBisTest/surrealisme.org" "/home/utilisateur/sharedDirectoryPrivate/orgzlyBisTest/strategies_militaires.org" "/home/utilisateur/sharedDirectoryPrivate/orgzlyBisTest/stakhanovisme.org" "/home/utilisateur/sharedDirectoryPrivate/orgzlyBisTest/spinoza.org" "/home/utilisateur/sharedDirectoryPrivate/orgzlyBisTest/sparte.org" "/home/utilisateur/sharedDirectoryPrivate/orgzlyBisTest/socrate.org" "/home/utilisateur/sharedDirectoryPrivate/orgzlyBisTest/societe_des_gens_de_lettres.org" "/home/utilisateur/sharedDirectoryPrivate/orgzlyBisTest/simone_de_beauvoir.org" "/home/utilisateur/sharedDirectoryPrivate/orgzlyBisTest/sigmund_freud.org" "/home/utilisateur/sharedDirectoryPrivate/orgzlyBisTest/seconde_restauration.org" "/home/utilisateur/sharedDirectoryPrivate/orgzlyBisTest/seconde_guerre_mondiale.org" "/home/utilisateur/sharedDirectoryPrivate/orgzlyBisTest/second_empire.org" "/home/utilisateur/sharedDirectoryPrivate/orgzlyBisTest/sciences_cognitives.org" "/home/utilisateur/sharedDirectoryPrivate/orgzlyBisTest/scarlatti.org" "/home/utilisateur/sharedDirectoryPrivate/orgzlyBisTest/sartres.org" "/home/utilisateur/sharedDirectoryPrivate/orgzlyBisTest/sarah_bernhardt.org" "/home/utilisateur/sharedDirectoryPrivate/orgzlyBisTest/salvador_dali.org" "/home/utilisateur/sharedDirectoryPrivate/orgzlyBisTest/saint_domingue_colonie_francaise.org" "/home/utilisateur/sharedDirectoryPrivate/orgzlyBisTest/rome.org" "/home/utilisateur/sharedDirectoryPrivate/orgzlyBisTest/romantisme.org" "/home/utilisateur/sharedDirectoryPrivate/orgzlyBisTest/romanov.org" "/home/utilisateur/sharedDirectoryPrivate/orgzlyBisTest/romain_rolland.org" "/home/utilisateur/sharedDirectoryPrivate/orgzlyBisTest/robespierre.org" "/home/utilisateur/sharedDirectoryPrivate/orgzlyBisTest/robert_paxton.org" "/home/utilisateur/sharedDirectoryPrivate/orgzlyBisTest/robert_badinter.org" "/home/utilisateur/sharedDirectoryPrivate/orgzlyBisTest/risorgimento.org" "/home/utilisateur/sharedDirectoryPrivate/orgzlyBisTest/richard_strauss.org" "/home/utilisateur/sharedDirectoryPrivate/orgzlyBisTest/rhetorique.org" "/home/utilisateur/sharedDirectoryPrivate/orgzlyBisTest/revolution_russe.org" "/home/utilisateur/sharedDirectoryPrivate/orgzlyBisTest/rene_guenon.org" "/home/utilisateur/sharedDirectoryPrivate/orgzlyBisTest/rembrandt.org" "/home/utilisateur/sharedDirectoryPrivate/orgzlyBisTest/relations_publiques.org" "/home/utilisateur/sharedDirectoryPrivate/orgzlyBisTest/reflexions_sur_la_revolution_de_france.org" "/home/utilisateur/sharedDirectoryPrivate/orgzlyBisTest/realisme.org"))
