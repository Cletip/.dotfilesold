(((elisp org-element--headline-cache) . #s(avl-tree- [[[[[[nil nil #4=(headline (:raw-value #1="Basic optimizations" :begin 2 :end 27641 :pre-blank 1 :contents-begin 27 :contents-end 27639 :robust-begin 29 :robust-end 27637 :level 3 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 2 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 2 :title #1# :mode first-section :granularity element :cached t :parent #77=(org-data (:begin 1 :contents-begin 2 :contents-end 27639 :end 27641 :robust-begin 4 :robust-end 27637 :post-blank 2 :post-affiliated 1 :path "/home/utilisateur/.emacs.d/config/basicOptimisations.org" :mode org-data :CATEGORY "basicOptimisations" :cached t :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [[nil nil #78=(headline (:raw-value #2="Gestion des sauvegardes, et fichiers à ne pas mettre dans les backups" :begin 270 :end 1504 :pre-blank 1 :contents-begin 347 :contents-end 1504 :robust-begin 349 :robust-end 1502 :level 5 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 270 :title #2# :mode nil :granularity element :cached t :parent #6=(headline (:raw-value #3="Variable and mode built-in" :begin 72 :end 3650 :pre-blank 1 :contents-begin 106 :contents-end 3650 :robust-begin 108 :robust-end 3648 :level 4 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 72 :title #3# :mode nil :granularity element :cached t :parent #4# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [nil nil #81=(headline (:raw-value #5="Rafraichit automatiquement les buffers, sauf si ya eu des moddif évidemment" :begin 1621 :end 1767 :pre-blank 0 :contents-begin 1703 :contents-end 1767 :robust-begin 1705 :robust-end 1765 :level 5 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 1621 :title #5# :mode nil :granularity element :org-element--cache-sync-key nil :cached t :parent #6#)) 0] #79=(headline (:raw-value #7="Permet de r y ou n au lieu de yes ou no" :begin 1504 :end 1621 :pre-blank 1 :contents-begin 1552 :contents-end 1621 :robust-begin 1554 :robust-end 1619 :level 5 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 1504 :title #7# :mode nil :granularity element :org-element--cache-sync-key nil :cached t :parent #6#)) 0] #6# 1] [[nil nil #85=(headline (:raw-value #8="Réécriture/remplacement lors de texte sélectionné" :begin 1976 :end 2097 :pre-blank 0 :contents-begin 2032 :contents-end 2097 :robust-begin 2034 :robust-end 2095 :level 5 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 1976 :title #8# :mode nil :granularity element :org-element--cache-sync-key nil :cached t :parent #6#)) 0] [nil [nil nil #90=(headline (:raw-value #9="Réavoir les dernière commandes" :begin 2922 :end 3650 :pre-blank 1 :contents-begin 2960 :contents-end 3650 :robust-begin 2962 :robust-end 3648 :level 5 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 2922 :title #9# :mode nil :granularity element :org-element--cache-sync-key nil :cached t :parent #6#)) 0] #89=(headline (:raw-value #10="Fichiers récents" :begin 2282 :end 2922 :pre-blank 1 :contents-begin 2307 :contents-end 2921 :robust-begin 2309 :robust-end 2919 :level 5 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 2282 :title #10# :mode nil :granularity element :org-element--cache-sync-key nil :cached t :parent #6#)) 1] #86=(headline (:raw-value #11="Sauvegarde la place du curseur(marche sans no-litteralling)" :begin 2097 :end 2282 :pre-blank 1 :contents-begin 2164 :contents-end 2281 :robust-begin 2166 :robust-end 2279 :level 5 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 2097 :title #11# :mode nil :granularity element :org-element--cache-sync-key nil :cached t :parent #6#)) 1] #82=(headline (:raw-value #12="Échap en une fois" :begin 1767 :end 1976 :pre-blank 0 :contents-begin 1791 :contents-end 1976 :robust-begin 1793 :robust-end 1974 :level 5 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 1767 :title #12# :mode nil :granularity element :cached t :parent #6# :org-element--cache-sync-key nil)) 0] [[[[nil nil #95=(headline (:raw-value #13="Launch emacs server" :begin 4198 :end 4467 :pre-blank 1 :contents-begin 4224 :contents-end 4466 :robust-begin 4226 :robust-end 4464 :level 4 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 4198 :title #13# :mode nil :granularity element :cached t :parent #4# :org-element--cache-sync-key nil)) 0] [nil nil #97=(headline (:raw-value #14="Démarrer avec les fichiers récents, titre etc" :begin 4494 :end 5719 :pre-blank 1 :contents-begin 4552 :contents-end 5718 :robust-begin 4554 :robust-end 5716 :level 5 :priority nil :tags nil :todo-keyword #("TODO" 0 4 (face (org-todo org-todo org-level-5) wrap-prefix #("********* " 0 4 (face org-indent) 4 10 (face org-indent)) line-prefix #("****" 0 4 (face org-indent)) fontified t)) :todo-type todo :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 4494 :title #14# :mode section :granularity element :org-element--cache-sync-key nil :cached t :parent #16=(headline (:raw-value #15="Interface Enhancement" :begin 4467 :end 15042 :pre-blank 0 :contents-begin 4494 :contents-end 15041 :robust-begin 4496 :robust-end 15039 :level 4 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 4467 :title #15# :mode nil :granularity element :org-element--cache-sync-key nil :cached t :parent #4#)))) 0] #16# 0] [[nil nil #22=(headline (:raw-value #17="Other" :begin 5891 :end 6034 :pre-blank 0 :contents-begin 5904 :contents-end 6034 :robust-begin 5906 :robust-end 6032 :level 6 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 5891 :title #17# :mode nil :granularity element :org-element--cache-sync-key nil :cached t :parent #20=(headline (:raw-value #18="Minibuffer" :begin 5719 :end 10343 :pre-blank 0 :contents-begin 5736 :contents-end 10342 :robust-begin 5738 :robust-end 10340 :level 5 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 5719 :title #18# :mode nil :granularity element :org-element--cache-sync-key nil :cached t :parent #16#)))) 0] [nil nil #102=(headline (:raw-value #19="Embark, pour faire des actions vraiment puissantes partout et sur tout" :begin 6034 :end 8197 :pre-blank 1 :contents-begin 6118 :contents-end 8196 :robust-begin 6120 :robust-end 8194 :level 6 :priority nil :tags nil :todo-keyword #("TODO" 0 4 (face (org-todo org-todo org-level-6) wrap-prefix #("*********** " 0 5 (face org-indent) 5 12 (face org-indent)) line-prefix #48=#("*****" 0 5 (face org-indent)) fontified t)) :todo-type todo :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 6034 :title #19# :mode nil :granularity element :org-element--cache-sync-key nil :cached t :parent #20#)) 0] #100=(headline (:raw-value #21="Pour faire des commandes dans le mini-buffer" :begin 5904 :end 6034 :pre-blank 1 :contents-begin 5958 :contents-end 6034 :robust-begin 5960 :robust-end 6032 :level 7 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 5904 :title #21# :mode section :granularity element :org-element--cache-sync-key nil :cached t :parent #22#)) 0] #20# 0] [[nil nil #106=(headline (:raw-value #23="Consult" :begin 9018 :end 9284 :pre-blank 1 :contents-begin 9034 :contents-end 9283 :robust-begin 9036 :robust-end 9281 :level 6 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 9018 :title #23# :mode nil :granularity element :org-element--cache-sync-key nil :cached t :parent #20#)) 0] [nil nil #110=(headline (:raw-value #24="Orderless" :begin 9628 :end 10343 :pre-blank 1 :contents-begin 9646 :contents-end 10342 :robust-begin 9648 :robust-end 10340 :level 6 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 9628 :title #24# :mode nil :granularity element :org-element--cache-sync-key nil :cached t :parent #20#)) 0] #108=(headline (:raw-value #25="Marginalia" :begin 9284 :end 9628 :pre-blank 1 :contents-begin 9303 :contents-end 9627 :robust-begin 9305 :robust-end 9625 :level 6 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 9284 :title #25# :mode nil :granularity element :org-element--cache-sync-key nil :cached t :parent #20#)) 0] #104=(headline (:raw-value #26="Vertico" :begin 8197 :end 9018 :pre-blank 1 :contents-begin 8213 :contents-end 9017 :robust-begin 8215 :robust-end 9015 :level 6 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 8197 :title #26# :mode nil :granularity element :org-element--cache-sync-key nil :cached t :parent #20#)) -1] #93=(headline (:raw-value #27="Keep .emacs.d clean" :begin 3650 :end 4198 :pre-blank 1 :contents-begin 3676 :contents-end 4197 :robust-begin 3678 :robust-end 4195 :level 4 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 3650 :title #27# :mode nil :granularity element :cached t :parent #4# :org-element--cache-sync-key nil)) 0] [[[[[[nil nil #112=(headline (:raw-value #28="Pour faire retour à la configuration de fenêtre précédente" :begin 10375 :end 10634 :pre-blank 1 :contents-begin 10442 :contents-end 10634 :robust-begin 10444 :robust-end 10632 :level 6 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 10375 :title #28# :mode section :granularity element :org-element--cache-sync-key nil :cached t :parent #32=(headline (:raw-value #29="Window & Frame Management" :begin 10343 :end 11008 :pre-blank 0 :contents-begin 10375 :contents-end 11007 :robust-begin 10377 :robust-end 11005 :level 5 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 10343 :title #29# :mode nil :granularity element :org-element--cache-sync-key nil :cached t :parent #16#)))) 0] [nil nil #34=(headline (:raw-value #30="Navigation" :begin 11008 :end 11853 :pre-blank 1 :contents-begin 11026 :contents-end 11852 :robust-begin 11028 :robust-end 11850 :level 5 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 11008 :title #30# :mode nil :granularity element :org-element--cache-sync-key nil :cached t :parent #16#)) 0] #114=(headline (:raw-value #31="Bookmark mais pour les fenêtre + frame" :begin 10634 :end 11008 :pre-blank 1 :contents-begin 10681 :contents-end 11007 :robust-begin 10683 :robust-end 11005 :level 6 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 10634 :title #31# :mode nil :granularity element :org-element--cache-sync-key nil :cached t :parent #32#)) 0] [[nil nil #117=(headline (:raw-value #33="Le bon vieux ctrlf, mais optimisé par emacs" :begin 11586 :end 11853 :pre-blank 1 :contents-begin 11638 :contents-end 11852 :robust-begin 11640 :robust-end 11850 :level 6 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 11586 :title #33# :mode nil :granularity element :org-element--cache-sync-key nil :cached t :parent #34#)) 0] [nil nil #119=(headline (:raw-value #35="Affichage des touches, which-key" :begin 11924 :end 12315 :pre-blank 1 :contents-begin 11965 :contents-end 12314 :robust-begin 11967 :robust-end 12312 :level 6 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 11924 :title #35# :mode nil :granularity element :org-element--cache-sync-key nil :cached t :parent #37=(headline (:raw-value #36="Visualize" :begin 11853 :end 15042 :pre-blank 1 :contents-begin 11874 :contents-end 15041 :robust-begin 11876 :robust-end 15039 :level 5 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 11853 :title #36# :mode nil :granularity element :org-element--cache-sync-key nil :cached t :parent #16#)))) 0] #37# 0] #116=(headline (:raw-value #38="Pour jump sur un endroit sur la fenêtre d'emacs" :begin 11026 :end 11586 :pre-blank 1 :contents-begin 11082 :contents-end 11585 :robust-begin 11084 :robust-end 11583 :level 6 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 11026 :title #38# :mode section :granularity element :org-element--cache-sync-key nil :cached t :parent #34#)) 0] [[nil nil #122=(headline (:raw-value #39="Les lignes reviennent à la ligne (lol)" :begin 12328 :end 12519 :pre-blank 1 :contents-begin 12376 :contents-end 12518 :robust-begin 12378 :robust-end 12516 :level 7 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 12328 :title #39# :mode section :granularity element :org-element--cache-sync-key nil :cached t :parent #42=(headline (:raw-value #40="Texte" :begin 12315 :end 13269 :pre-blank 0 :contents-begin 12328 :contents-end 13268 :robust-begin 12330 :robust-end 13266 :level 6 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 12315 :title #40# :mode nil :granularity element :org-element--cache-sync-key nil :cached t :parent #37#)))) 0] [nil nil #126=(headline (:raw-value #41="Longueur de ligne avant retour à la ligne, différent en fonction du mode" :begin 13019 :end 13269 :pre-blank 1 :contents-begin 13101 :contents-end 13268 :robust-begin 13103 :robust-end 13266 :level 7 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 13019 :title #41# :mode nil :granularity element :org-element--cache-sync-key nil :cached t :parent #42#)) 0] #123=(headline (:raw-value #43="Tailles des interlignes" :begin 12519 :end 13019 :pre-blank 1 :contents-begin 12552 :contents-end 13018 :robust-begin 12554 :robust-end 13016 :level 7 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 12519 :title #43# :mode nil :granularity element :org-element--cache-sync-key nil :cached t :parent #42#)) 0] #42# -1] [[[nil nil #128=(headline (:raw-value #44="Trainée de lumière pour pas perdre le curseur" :begin 13284 :end 13602 :pre-blank 1 :contents-begin 13339 :contents-end 13600 :robust-begin 13341 :robust-end 13598 :level 7 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 13284 :title #44# :mode section :granularity element :org-element--cache-sync-key nil :cached t :parent #51=(headline (:raw-value #45="Curseur" :begin 13269 :end 13739 :pre-blank 0 :contents-begin 13284 :contents-end 13739 :robust-begin 13286 :robust-end 13737 :level 6 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 13269 :title #45# :mode nil :granularity element :org-element--cache-sync-key nil :cached t :parent #37#)))) 0] [[nil nil #132=(headline (:raw-value #46="La barre en bas" :begin 13739 :end 14600 :pre-blank 2 :contents-begin 13764 :contents-end 14600 :robust-begin 13766 :robust-end 14598 :level 6 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 13739 :title #46# :mode nil :granularity element :org-element--cache-sync-key nil :cached t :parent #37#)) 0] [nil nil #53=(headline (:raw-value #47="Aesthetics of Emacs" :begin 15042 :end 21045 :pre-blank 0 :contents-begin 15067 :contents-end 21045 :robust-begin 15069 :robust-end 21043 :level 4 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 15042 :title #47# :mode nil :granularity element :cached t :parent #4# :org-element--cache-sync-key nil)) 0] #134=(headline (:raw-value #49="Buffer cursor indicator" :begin 14600 :end 15042 :pre-blank 1 :contents-begin 14637 :contents-end 15041 :robust-begin 14639 :robust-end 15039 :level 6 :priority nil :tags nil :todo-keyword #("TODO" 0 4 (face (org-todo org-todo org-level-6) wrap-prefix #("*********** " 0 5 (face org-indent) 5 12 (face org-indent)) line-prefix #48# fontified t)) :todo-type todo :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 14600 :title #49# :mode nil :granularity element :org-element--cache-sync-key nil :cached t :parent #37#)) 0] #130=(headline (:raw-value #50="Surlignage ligne du curseur" :begin 13602 :end 13739 :pre-blank 0 :contents-begin 13638 :contents-end 13739 :robust-begin 13640 :robust-end 13737 :level 7 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 13602 :title #50# :mode nil :granularity element :org-element--cache-sync-key nil :cached t :parent #51#)) 1] [[nil [nil nil #139=(headline (:raw-value #52="Les jolies icônes" :begin 15883 :end 16224 :pre-blank 1 :contents-begin 15908 :contents-end 16223 :robust-begin 15910 :robust-end 16221 :level 5 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 15883 :title #52# :mode nil :granularity element :org-element--cache-sync-key nil :cached t :parent #53#)) 0] #138=(headline (:raw-value #54="Police" :begin 15181 :end 15883 :pre-blank 1 :contents-begin 15195 :contents-end 15882 :robust-begin 15197 :robust-end 15880 :level 5 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 15181 :title #54# :mode nil :granularity element :org-element--cache-sync-key nil :cached t :parent #53#)) 1] [[nil nil #143=(headline (:raw-value #55="Mise en valeur du buffer actif (diminue la luminosité)" :begin 17583 :end 17874 :pre-blank 0 :contents-begin 17644 :contents-end 17873 :robust-begin 17646 :robust-end 17871 :level 5 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 17583 :title #55# :mode nil :granularity element :org-element--cache-sync-key nil :cached t :parent #53#)) 0] [nil nil #148=(headline (:raw-value #56="Très joli icône ! voir ce qui le désactive" :begin 18010 :end 21045 :pre-blank 0 :contents-begin 18059 :contents-end 21045 :robust-begin 18061 :robust-end 21043 :level 5 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 18010 :title #56# :mode nil :granularity element :org-element--cache-sync-key nil :cached t :parent #53#)) 0] #146=(headline (:raw-value #57="Smiley !" :begin 17874 :end 18010 :pre-blank 1 :contents-begin 17890 :contents-end 18009 :robust-begin 17892 :robust-end 18007 :level 5 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 17874 :title #57# :mode nil :granularity element :org-element--cache-sync-key nil :cached t :parent #53#)) 0] #142=(headline #58=(:raw-value "Thèmes (faire M-x customize-themes pour choisir)" :begin 16224 :end 17583 :pre-blank 4 :contents-begin 16283 :contents-end 17582 :robust-begin 16285 :robust-end 17580 :level 5 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 16224 :title (#("Thèmes (faire M-x customize-themes pour choisir)" 0 48 (:parent (headline #58#)))) :mode nil :granularity nil :parent #53# :cached t :org-element--cache-sync-key nil)) 0] #136=(headline (:raw-value #59="Modes qui n'apparaissent plus dans la modeline" :begin 15067 :end 15181 :pre-blank 1 :contents-begin 15121 :contents-end 15180 :robust-begin 15123 :robust-end 15178 :level 5 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 15067 :title #59# :mode section :granularity element :cached t :parent #53# :org-element--cache-sync-key nil)) 0] #51# 0] [[[[nil nil #150=(headline (:raw-value #60="Optimisation de base" :begin 21070 :end 22391 :pre-blank 1 :contents-begin 21098 :contents-end 22391 :robust-begin 21100 :robust-end 22389 :level 5 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 21070 :title #60# :mode section :granularity element :org-element--cache-sync-key nil :cached t :parent #63=(headline (:raw-value #61="File Manager, Dired" :begin 21045 :end 24584 :pre-blank 0 :contents-begin 21070 :contents-end 24582 :robust-begin 21072 :robust-end 24580 :level 4 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 2 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 21045 :title #61# :mode nil :granularity element :org-element--cache-sync-key nil :cached t :parent #4#)))) 0] nil #151=(headline (:raw-value #62="Trier avec S dans dired" :begin 22391 :end 22536 :pre-blank 1 :contents-begin 22422 :contents-end 22536 :robust-begin 22424 :robust-end 22534 :level 5 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 22391 :title #62# :mode nil :granularity element :cached t :parent #63# :org-element--cache-sync-key nil)) -1] [[nil nil #155=(headline (:raw-value #64="Les icônes + cacher certains fichiers" :begin 22765 :end 23329 :pre-blank 1 :contents-begin 22810 :contents-end 23329 :robust-begin 22812 :robust-end 23327 :level 5 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 22765 :title #64# :mode nil :granularity element :cached t :parent #63# :org-element--cache-sync-key nil)) 0] nil #157=(headline (:raw-value #65="Compresser et décompresser du zip (mapper sur Z)" :begin 23329 :end 24584 :pre-blank 1 :contents-begin 23385 :contents-end 24582 :robust-begin 23387 :robust-end 24580 :level 5 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 2 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 23329 :title #65# :mode nil :granularity element :cached t :parent #63# :org-element--cache-sync-key nil)) -1] #153=(headline (:raw-value #66="Quand un fichier dans un dossier, le montre direct" :begin 22536 :end 22765 :pre-blank 1 :contents-begin 22594 :contents-end 22765 :robust-begin 22596 :robust-end 22763 :level 5 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 22536 :title #66# :mode nil :granularity element :cached t :parent #63# :org-element--cache-sync-key nil)) 0] [[[nil nil #159=(headline (:raw-value #67="Pour bouger les lignes/paragraphe comme dans org (avec CTRL)" :begin 24597 :end 24789 :pre-blank 1 :contents-begin 24665 :contents-end 24788 :robust-begin 24667 :robust-end 24786 :level 5 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 24597 :title #67# :mode section :granularity element :cached t :parent #70=(headline (:raw-value #68="Editing" :begin 24584 :end 26945 :pre-blank 0 :contents-begin 24597 :contents-end 26943 :robust-begin 24599 :robust-end 26941 :level 4 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 2 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 24584 :title #68# :mode nil :granularity element :cached t :parent #4# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] nil #160=(headline (:raw-value #69="Better kill ring" :begin 24789 :end 25465 :pre-blank 1 :contents-begin 24813 :contents-end 25464 :robust-begin 24815 :robust-end 25462 :level 5 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 24789 :title #69# :mode nil :granularity element :cached t :parent #70# :org-element--cache-sync-key nil)) -1] [[[nil nil #165=(headline (:raw-value #71="Parenthèse et <> autres auto, pour modifier pair de parenthèse" :begin 25979 :end 26810 :pre-blank 2 :contents-begin 26050 :contents-end 26809 :robust-begin 26052 :robust-end 26807 :level 5 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 25979 :title #71# :mode nil :granularity element :cached t :parent #70# :org-element--cache-sync-key nil)) 0] [nil nil #168=(headline (:raw-value #72="Compter le nombre de chaque commande faite (bien pour optimiser les raccourcis)" :begin 26945 :end 27394 :pre-blank 1 :contents-begin 27031 :contents-end 27393 :robust-begin 27033 :robust-end 27391 :level 4 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 26945 :title #72# :mode nil :granularity element :cached t :parent #4# :org-element--cache-sync-key nil)) 0] #167=(headline (:raw-value #73="Pour faire la commande sudo-edit, qui permet d'éditer en mode root" :begin 26810 :end 26945 :pre-blank 1 :contents-begin 26884 :contents-end 26943 :robust-begin 26886 :robust-end 26941 :level 5 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 2 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 26810 :title #73# :mode nil :granularity element :cached t :parent #70# :org-element--cache-sync-key nil)) 0] [nil nil #172=(headline (:raw-value #74="Emacs restart" :begin 27493 :end 27641 :pre-blank 1 :contents-begin 27513 :contents-end 27639 :robust-begin 27515 :robust-end 27637 :level 4 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 2 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 27493 :title #74# :mode nil :granularity element :cached t :parent #4# :org-element--cache-sync-key nil)) 0] #170=(headline (:raw-value #75="Dossier de base dans .emacs.d" :begin 27394 :end 27493 :pre-blank 1 :contents-begin 27430 :contents-end 27492 :robust-begin 27432 :robust-end 27490 :level 4 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 27394 :title #75# :mode nil :granularity element :org-element--cache-sync-key nil :cached t :parent #4#)) -1] #163=(headline (:raw-value #76="Pour faire des delete intelligent" :begin 25465 :end 25979 :pre-blank 1 :contents-begin 25506 :contents-end 25978 :robust-begin 25508 :robust-end 25976 :level 5 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 25465 :title #76# :mode nil :granularity element :cached t :parent #70# :org-element--cache-sync-key nil)) 1] #70# 1] #63# 0] #32# 1] nil nil 0] org-element--cache-compare)) ((elisp org-element--cache) . #s(avl-tree- [[[[[[[[[nil nil #77# 0] [nil nil (section (:begin 27 :end 72 :contents-begin 27 :contents-end 71 :robust-begin 27 :robust-end 69 :post-blank 1 :post-affiliated 27 :mode section :granularity element :cached t :parent #4# :org-element--cache-sync-key nil)) 0] #4# 0] [[nil nil (section (:begin 106 :end 270 :contents-begin 106 :contents-end 269 :robust-begin 106 :robust-end 267 :post-blank 1 :post-affiliated 106 :mode section :granularity element :cached t :parent #6# :org-element--cache-sync-key nil)) 0] [nil nil #84=(section (:begin 347 :end 1504 :contents-begin 347 :contents-end 1504 :robust-begin 347 :robust-end 1502 :post-blank 0 :post-affiliated 347 :mode section :granularity element :org-element--cache-sync-key nil :cached t :parent #78#)) 0] #78# 0] #6# 0] [[[nil nil #79# 0] [nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 1552 :end 1621 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (fset 'yes-or-no-p 'y-or-n-p)\12  \12" :post-blank 0 :post-affiliated 1552 :mode planning :granularity element :org-element--cache-sync-key nil :cached t :parent #80=(section (:begin 1552 :end 1621 :contents-begin 1552 :contents-end 1621 :robust-begin 1552 :robust-end 1619 :post-blank 0 :post-affiliated 1552 :mode section :granularity element :org-element--cache-sync-key nil :cached t :parent #79#)))) 0] #80# 0] [[nil nil #83=(section (:begin 1703 :end 1767 :contents-begin 1703 :contents-end 1767 :robust-begin 1703 :robust-end 1765 :post-blank 0 :post-affiliated 1703 :mode section :granularity element :org-element--cache-sync-key nil :cached t :parent #81#)) 0] [nil nil #82# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 1703 :end 1767 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12(global-auto-revert-mode t)\12\12" :post-blank 0 :post-affiliated 1703 :mode planning :granularity element :org-element--cache-sync-key nil :cached t :parent #83#)) 0] #81# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 347 :end 1504 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (setq make-backup-files t               ; backup of a file the first time it is saved.\12        backup-by-copying t               ; don't clobber symlinks\12        version-control t                 ; version numbers for backup files\12        delete-old-versions t             ; delete excess backup files silently\12        delete-by-moving-to-trash t       ; Put the deleted files in the trash\12        kept-old-versions 6               ; oldest versions to keep when a new numbered backup is made (default: 2)\12        kept-new-versions 9               ; newest versions to keep when a new numbered backup is made (default: 2)\12        auto-save-default t               ; auto-save every buffer that visits a file\12        auto-save-timeout 20              ; number of seconds idle time before auto-save (default: 30)\12        auto-save-interval 200            ; number of keystrokes between auto-saves (default: 300)\12        )\12\12\12  ;;fichier à ne pas copier dans les backups\12  (setq auto-mode-alist\12        (append\12         (list\12          '(\"\\\\.\\\\(vcf\\\\|gpg\\\\)$\" . sensitive-minor-mode)\12          )\12         auto-mode-alist))\12\12" :post-blank 0 :post-affiliated 347 :mode planning :granularity element :org-element--cache-sync-key nil :cached t :parent #84#)) 0] [[[nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 1791 :end 1976 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (global-set-key (kbd \"<escape>\") 'keyboard-escape-quit)\12  ;; (global-unset-key (kbd \"C-g\"))\12  ;; (global-set-key (kbd \"C-g\") 'keyboard-escape-quit)\12\12" :post-blank 0 :post-affiliated 1791 :mode planning :granularity element :cached t :parent #88=(section (:begin 1791 :end 1976 :contents-begin 1791 :contents-end 1976 :robust-begin 1791 :robust-end 1974 :post-blank 0 :post-affiliated 1791 :mode section :granularity element :cached t :parent #82# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [nil nil #87=(section (:begin 2032 :end 2097 :contents-begin 2032 :contents-end 2097 :robust-begin 2032 :robust-end 2095 :post-blank 0 :post-affiliated 2032 :mode section :granularity element :org-element--cache-sync-key nil :cached t :parent #85#)) 0] #85# 0] [nil nil #86# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 2032 :end 2097 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (delete-selection-mode t)\12  \12" :post-blank 0 :post-affiliated 2032 :mode planning :granularity element :org-element--cache-sync-key nil :cached t :parent #87#)) -1] #88# -1] [[[[[nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 2164 :end 2282 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12\12  (with-eval-after-load 'no-littering ;;important\12    (save-place-mode 1)\12    )\12\12\12" :post-blank 1 :post-affiliated 2164 :mode planning :granularity element :org-element--cache-sync-key nil :cached t :parent #98=(section (:begin 2164 :end 2282 :contents-begin 2164 :contents-end 2281 :robust-begin 2164 :robust-end 2279 :post-blank 1 :post-affiliated 2164 :mode section :granularity element :org-element--cache-sync-key nil :cached t :parent #86#)))) 0] [nil nil #91=(section (:begin 2307 :end 2922 :contents-begin 2307 :contents-end 2921 :robust-begin 2307 :robust-end 2919 :post-blank 1 :post-affiliated 2307 :mode section :granularity element :org-element--cache-sync-key nil :cached t :parent #89#)) 0] #89# 0] [nil nil #90# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 2307 :end 2922 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (with-eval-after-load 'no-littering ;;important\12    (require 'recentf)\12    (recentf-mode 1)\12    (setq recentf-max-menu-items 100)\12    (setq recentf-max-saved-items 100)\12\12    ;; fichier à exclure de recentf\12    ;; If you use recentf then you might find it convenient to exclude all of the files in the no-littering directories using something like the following.\12    (add-to-list 'recentf-exclude no-littering-var-directory)\12    (add-to-list 'recentf-exclude no-littering-etc-directory)\12    \12    (add-to-list 'recentf-exclude \"/tmp/\") ;;pour emacs-everywhere notamment\12    )\12\12\12\12" :post-blank 1 :post-affiliated 2307 :mode planning :granularity element :org-element--cache-sync-key nil :cached t :parent #91#)) -1] [[nil [nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 3043 :end 3650 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  ;; Persist history over Emacs restarts. Vertico sorts by history position.\12  (use-package savehist\12    :init\12    (setq savehist-file (concat my-user-emacs-directory \"var/savehist.el\"))\12    :config\12    (setq history-length 200)\12    ;;List of additional variables to save.\12    (setq savehist-additional-variables '(kill-ring search-ring recentf-list))\12    (savehist-mode t)\12    \12    ;; pour améliorer les perf ? voir avec Mathieu\12    (put 'minibuffer-history 'history-length 50)\12    (put 'evil-ex-history 'history-length 50)\12    (put 'kill-ring 'history-length 25)\12    )\12\12" :post-blank 0 :post-affiliated 3043 :mode nil :granularity element :org-element--cache-sync-key nil :cached t :parent #92=(section (:begin 2960 :end 3650 :contents-begin 2960 :contents-end 3650 :robust-begin 2960 :robust-end 3648 :post-blank 0 :post-affiliated 2960 :mode section :granularity element :org-element--cache-sync-key nil :cached t :parent #90#)))) 0] (paragraph (:begin 2960 :end 3043 :contents-begin 2960 :contents-end 3042 :post-blank 1 :post-affiliated 2960 :mode planning :granularity element :org-element--cache-sync-key nil :cached t :parent #92#)) 1] [[nil nil #94=(section (:begin 3676 :end 4198 :contents-begin 3676 :contents-end 4197 :robust-begin 3676 :robust-end 4195 :post-blank 1 :post-affiliated 3676 :mode section :granularity element :org-element--cache-sync-key nil :cached t :parent #93#)) 0] nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 3676 :end 4198 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (use-package no-littering\12    ;;custom remplace tous les setq\12    :custom\12    ;; définition de l'emplacement de certains fichiers\12    (custom-file (expand-file-name \"var/custom.el\" my-user-emacs-directory)) ;;pour les variable\12    (grammalecte-settings-file (no-littering-expand-var-file-name \"grammalecte-cache.el\")) ;;pour grammalecte\12    ;; (org-id-locations-file (no-littering-expand-var-file-name \"org/id-locations.el\"));;pour id-locations, de base c'est bon donc enlever\12    )\12\12" :post-blank 1 :post-affiliated 3676 :mode planning :granularity element :org-element--cache-sync-key nil :cached t :parent #94#)) -1] #93# 0] #92# 0] [[[nil nil #96=(section (:begin 4224 :end 4467 :contents-begin 4224 :contents-end 4466 :robust-begin 4224 :robust-end 4464 :post-blank 1 :post-affiliated 4224 :mode section :granularity element :org-element--cache-sync-key nil :cached t :parent #95#)) 0] nil (paragraph (:begin 4224 :end 4362 :contents-begin 4224 :contents-end 4361 :post-blank 1 :post-affiliated 4224 :mode planning :granularity element :org-element--cache-sync-key nil :cached t :parent #96#)) -1] [[nil nil #16# 0] nil #97# -1] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 4362 :end 4467 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (server-start)  ;; starts emacs as server (if you didn't already)\12\12" :post-blank 1 :post-affiliated 4362 :mode nil :granularity element :org-element--cache-sync-key nil :cached t :parent #96#)) 0] #95# -1] #98# 0] [[[[[[nil nil (paragraph (:begin 4552 :end 4595 :contents-begin 4552 :contents-end 4594 :post-blank 1 :post-affiliated 4552 :mode planning :granularity element :org-element--cache-sync-key nil :cached t :parent #99=(section (:begin 4552 :end 5719 :contents-begin 4552 :contents-end 5718 :robust-begin 4552 :robust-end 5716 :post-blank 1 :post-affiliated 4552 :mode section :granularity element :org-element--cache-sync-key nil :cached t :parent #97#)))) 0] nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 4595 :end 5719 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (use-package dashboard\12    :after all-the-icons\12    :config\12    ;;centrer le dashboard\12    (setq dashboard-center-content t)\12    ;;item\12    (setq dashboard-items '(\12                            (recents  . 10)\11\11\11    \12                            (agenda . 5)\12                            (bookmarks . 5)\12                            ;; (projects . 5) \12                            (registers . 5)\12                            )\12          )\12    ;;si il y a projectile\12    (with-eval-after-load 'projectile ;;important\12      (setq dashboard-items '(\12                              (recents  . 10)\11\11\11    \12                              (agenda . 5)\12                              (bookmarks . 5)\12                              (projects . 5) \12                              (registers . 5)\12                              )\12            )\12      )\12\12    ;;agenda de la semaine \12    (setq dashboard-week-agenda t)\12    ;;emacsclient avec dashboard, enlever plus besoin mais gardé au cas où\12    ;; (setq initial-buffer-choice (lambda () (get-buffer \"*dashboard*\")))\12    (dashboard-setup-startup-hook)\12    )\12\12" :post-blank 1 :post-affiliated 4595 :mode nil :granularity element :org-element--cache-sync-key nil :cached t :parent #99#)) -1] [[nil nil (section (:begin 5736 :end 5891 :contents-begin 5736 :contents-end 5891 :robust-begin 5736 :robust-end 5889 :post-blank 0 :post-affiliated 5736 :mode section :granularity element :org-element--cache-sync-key nil :cached t :parent #20#)) 0] nil #22# -1] #20# 0] [[[nil nil #101=(section (:begin 5958 :end 6034 :contents-begin 5958 :contents-end 6034 :robust-begin 5958 :robust-end 6032 :post-blank 0 :post-affiliated 5958 :mode section :granularity element :org-element--cache-sync-key nil :cached t :parent #100#)) 0] nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 5958 :end 6034 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (setq enable-recursive-minibuffers t)\12\12" :post-blank 0 :post-affiliated 5958 :mode planning :granularity element :org-element--cache-sync-key nil :cached t :parent #101#)) -1] [[nil nil #103=(section (:begin 6118 :end 8197 :contents-begin 6118 :contents-end 8196 :robust-begin 6118 :robust-end 8194 :post-blank 1 :post-affiliated 6118 :mode section :granularity element :org-element--cache-sync-key nil :cached t :parent #102#)) 0] nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 6118 :end 8197 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "      (use-package embark\12        :bind ((\"C-t\" . embark-act))\12        )\12\12      (use-package embark-consult\12        :after (embark consult)\12        :demand t ; only necessary if you have the hook below\12        ;; if you want to have consult previews as you move around an\12        ;; auto-updating embark collect buffer\12        :hook\12        (embark-collect-mode . consult-preview-at-point-mode)\12        )\12\12\12   ;; pour afficher avec which-key\12      (defun embark-which-key-indicator ()\12     \"An embark indicator that displays keymaps using which-key.\12   The which-key help message will show the type and value of the\12   current target followed by an ellipsis if there are further\12   targets.\"\12     (lambda (&optional keymap targets prefix)\12       (if (null keymap)\12           (which-key--hide-popup-ignore-command)\12         (which-key--show-keymap\12          (if (eq (plist-get (car targets) :type) 'embark-become)\12              \"Become\"\12            (format \"Act on %s '%s'%s\"\12                    (plist-get (car targets) :type)\12                    (embark--truncate-target (plist-get (car targets) :target))\12                    (if (cdr targets) \"…\" \"\")))\12          (if prefix\12              (pcase (lookup-key keymap prefix 'accept-default)\12                ((and (pred keymapp) km) km)\12                (_ (key-binding prefix 'accept-default)))\12            keymap)\12          nil nil t (lambda (binding)\12                      (not (string-suffix-p \"-argument\" (cdr binding))))))))\12\12   (setq embark-indicators\12     '(embark-which-key-indicator\12       embark-highlight-indicator\12       embark-isearch-highlight-indicator))\12\12   (defun embark-hide-which-key-indicator (fn &rest args)\12     \"Hide the which-key indicator immediately when using the completing-read prompter.\"\12     (which-key--hide-popup-ignore-command)\12     (let ((embark-indicators\12            (remq #'embark-which-key-indicator embark-indicators)))\12         (apply fn args)))\12\12   (advice-add #'embark-completing-read-prompter\12               :around #'embark-hide-which-key-indicator)\12\12" :post-blank 1 :post-affiliated 6118 :mode planning :granularity element :org-element--cache-sync-key nil :cached t :parent #103#)) -1] #102# 0] #100# 0] [[[nil nil #105=(section (:begin 8213 :end 9018 :contents-begin 8213 :contents-end 9017 :robust-begin 8213 :robust-end 9015 :post-blank 1 :post-affiliated 8213 :mode section :granularity element :org-element--cache-sync-key nil :cached t :parent #104#)) 0] nil (paragraph (:begin 8213 :end 8318 :contents-begin 8213 :contents-end 8317 :post-blank 1 :post-affiliated 8213 :mode planning :granularity element :org-element--cache-sync-key nil :cached t :parent #105#)) -1] [[nil nil #106# 0] nil #107=(section (:begin 9034 :end 9284 :contents-begin 9034 :contents-end 9283 :robust-begin 9034 :robust-end 9281 :post-blank 1 :post-affiliated 9034 :mode section :granularity element :org-element--cache-sync-key nil :cached t :parent #106#)) -1] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 8318 :end 9018 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (use-package vertico\12\12    ;;charger les extensions de vertico\12    ;; :load-path \"straight/build/vertico/extensions\"\12    :custom\12    (vertico-cycle t)\12    :custom-face\12    (vertico-current ((t (:background \"#3a3f5a\"))))\12    :config\12    (vertico-mode)\12\12    ;;pour activer vertico directory (remonte d'un dossier à chaque fois, pratique ! sur backword-kill)\12    ;; (define-key vertico-map [remap xah-delete-backward-char-or-bracket-text] #'vertico-directory-up)\12    ;; (define-key vertico-map [remap backward-kill-word] #'vertico-directory-up)\12\12    ;; pour pouvoir jump à une entrée\12    ;; (define-key vertico-map [remap avy-goto-char] #'vertico-quick-jump)\12\12\12    )\12" :post-blank 1 :post-affiliated 8318 :mode nil :granularity element :org-element--cache-sync-key nil :cached t :parent #105#)) 0] #104# -1] [[[[[nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 9135 :end 9284 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12(use-package consult\12      :custom\12      (completion-in-region-function #'consult-completion-in-region)\12      )\12\12" :post-blank 1 :post-affiliated 9135 :mode nil :granularity element :org-element--cache-sync-key nil :cached t :parent #107#)) 0] nil #108# -1] [[nil nil (paragraph (:begin 9303 :end 9402 :contents-begin 9303 :contents-end 9401 :post-blank 1 :post-affiliated 9303 :mode planning :granularity element :org-element--cache-sync-key nil :cached t :parent #109=(section (:begin 9303 :end 9628 :contents-begin 9303 :contents-end 9627 :robust-begin 9303 :robust-end 9625 :post-blank 1 :post-affiliated 9303 :mode section :granularity element :org-element--cache-sync-key nil :cached t :parent #108#)))) 0] nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 9402 :end 9628 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  \12  (use-package marginalia\12    :after vertico\12    :custom\12    (marginalia-annotators '(marginalia-annotators-heavy marginalia-annotators-light nil))\12    :init\12    (marginalia-mode)\12    )\12  \12" :post-blank 1 :post-affiliated 9402 :mode nil :granularity element :org-element--cache-sync-key nil :cached t :parent #109#)) -1] #109# 0] [[[nil nil #111=(section (:begin 9646 :end 10343 :contents-begin 9646 :contents-end 10342 :robust-begin 9646 :robust-end 10340 :post-blank 1 :post-affiliated 9646 :mode section :granularity element :org-element--cache-sync-key nil :cached t :parent #110#)) 0] nil (paragraph (:begin 9646 :end 9883 :contents-begin 9646 :contents-end 9882 :post-blank 1 :post-affiliated 9646 :mode planning :granularity element :org-element--cache-sync-key nil :cached t :parent #111#)) -1] [[nil nil #32# 0] nil #112# -1] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 9883 :end 10343 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12    ;; Complétation par candidats      \12    ;; Use the `orderless' completion style.\12    ;; Enable `partial-completion' for files to allow path expansion.\12    ;; You may prefer to use `initials' instead of `partial-completion'.\12    (use-package orderless\12      :init\12      (setq completion-styles '(orderless)\12\11    completion-category-defaults nil\12\11    completion-category-overrides '((file (styles partial-completion)))))\12\12" :post-blank 1 :post-affiliated 9883 :mode nil :granularity element :org-element--cache-sync-key nil :cached t :parent #111#)) 0] #110# 0] [[[nil nil (paragraph (:begin 10442 :end 10549 :contents-begin 10442 :contents-end 10548 :post-blank 1 :post-affiliated 10442 :mode planning :granularity element :org-element--cache-sync-key nil :cached t :parent #113=(section (:begin 10442 :end 10634 :contents-begin 10442 :contents-end 10634 :robust-begin 10442 :robust-end 10632 :post-blank 0 :post-affiliated 10442 :mode section :granularity element :org-element--cache-sync-key nil :cached t :parent #112#)))) 0] nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 10549 :end 10634 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (winner-mode 1) ;;naviguer avec les fenêtres\12\12\12\12" :post-blank 0 :post-affiliated 10549 :mode nil :granularity element :org-element--cache-sync-key nil :cached t :parent #113#)) -1] [[nil nil #115=(section (:begin 10681 :end 11008 :contents-begin 10681 :contents-end 11007 :robust-begin 10681 :robust-end 11005 :post-blank 1 :post-affiliated 10681 :mode section :granularity element :org-element--cache-sync-key nil :cached t :parent #114#)) 0] nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 10681 :end 11008 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  (use-package burly\12    :config\12    ;; 'nouveaunom #'anciennom, anciennomexisteencore\12    ;; (defalias 'bookmark-windows-burly #'burly-bookmark-windows)\12    ;; (defalias 'bookmark-windows-and-frames-burly #'burly-bookmark-frames)\12    ;; j'ai gardé et mis directement sur LayerXahFlyKey\12    )\12" :post-blank 1 :post-affiliated 10681 :mode planning :granularity element :org-element--cache-sync-key nil :cached t :parent #115#)) -1] #114# 0] #113# -1] (paragraph (:begin 9034 :end 9135 :contents-begin 9034 :contents-end 9134 :post-blank 1 :post-affiliated 9034 :mode planning :granularity element :org-element--cache-sync-key nil :cached t :parent #107#)) 0] #99# 0] [[[[[[[nil nil #116# 0] nil #118=(section (:begin 11082 :end 11586 :contents-begin 11082 :contents-end 11585 :robust-begin 11082 :robust-end 11583 :post-blank 1 :post-affiliated 11082 :mode section :granularity element :org-element--cache-sync-key nil :cached t :parent #116#)) -1] [[nil nil #117# 0] nil #121=(section (:begin 11638 :end 11853 :contents-begin 11638 :contents-end 11852 :robust-begin 11638 :robust-end 11850 :post-blank 1 :post-affiliated 11638 :mode section :granularity element :org-element--cache-sync-key nil :cached t :parent #117#)) -1] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 11082 :end 11586 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (use-package avy\12    ;;\\ pour l'espace\12    :custom\12    ;;personnalition des touches, important\12    (avy-keys '(?a ?u ?e ?i ?t ?s ?r ?n ?\\ ))\12    (avy-background t)\12    ;;nouvelle touches pour escape avy go timer\12    (avy-escape-chars '(?\\e ?\\M-g))\12    :config\12    (setq avy-timeout-seconds 0.15)\12\12    ;;personnaliser chaque commande :\12    ;; (setq avy-keys-alist\12    ;; `((avy-goto-char . ,(number-sequence ?a ?f))\12    ;; (avy-goto-word-1 . (?f ?g ?h ?j))))\12\12    )\12\12" :post-blank 1 :post-affiliated 11082 :mode planning :granularity element :org-element--cache-sync-key nil :cached t :parent #118#)) 0] [[[nil nil #37# 0] nil (section (:begin 11874 :end 11924 :contents-begin 11874 :contents-end 11923 :robust-begin 11874 :robust-end 11921 :post-blank 1 :post-affiliated 11874 :mode section :granularity element :org-element--cache-sync-key nil :cached t :parent #37#)) -1] [[nil nil #120=(section (:begin 11965 :end 12315 :contents-begin 11965 :contents-end 12314 :robust-begin 11965 :robust-end 12312 :post-blank 1 :post-affiliated 11965 :mode section :granularity element :org-element--cache-sync-key nil :cached t :parent #119#)) 0] nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 11965 :end 12315 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (use-package which-key\12    ;; :diminish which-key-mode\12    :config\12    ;;activer which-key\12    (which-key-mode)\12    ;;temps avant déclenchement de wich-key minimum\12    (setq which-key-idle-delay 0.01)\12    ;; affichage sur le côté, mais si marche pas en bas\12    (which-key-setup-side-window-right-bottom)\12    ) \12\12\12" :post-blank 1 :post-affiliated 11965 :mode planning :granularity element :org-element--cache-sync-key nil :cached t :parent #120#)) -1] #119# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 11638 :end 11853 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  (use-package ctrlf\12    :config\12    (define-key ctrlf-mode-map [remap next-line] #'ctrlf-next-match)\12    (define-key ctrlf-mode-map [remap previous-line] #'ctrlf-previous-match))\12\12" :post-blank 1 :post-affiliated 11638 :mode planning :granularity element :org-element--cache-sync-key nil :cached t :parent #121#)) 0] [[[nil nil #122# 0] nil #124=(section (:begin 12376 :end 12519 :contents-begin 12376 :contents-end 12518 :robust-begin 12376 :robust-end 12516 :post-blank 1 :post-affiliated 12376 :mode section :granularity element :org-element--cache-sync-key nil :cached t :parent #122#)) -1] [[nil nil #123# 0] nil #125=(section (:begin 12552 :end 13019 :contents-begin 12552 :contents-end 13018 :robust-begin 12552 :robust-end 13016 :post-blank 1 :post-affiliated 12552 :mode section :granularity element :org-element--cache-sync-key nil :cached t :parent #123#)) -1] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 12376 :end 12519 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  ;;retour à la ligne concrètrement\12  (auto-fill-mode 1)\12  ;; visuellement\12  (global-visual-line-mode 1) \12\12" :post-blank 1 :post-affiliated 12376 :mode planning :granularity element :org-element--cache-sync-key nil :cached t :parent #124#)) 0] #42# -1] [[[[[nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 12658 :end 13019 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (defun taille-interligne ()\12    \"Toggle line spacing between no extra space to extra half line height.\12  URL `http://ergoemacs.org/emacs/emacs_toggle_line_spacing.html'\12  Version 2017-06-02\"\12    (interactive)\12    (if line-spacing\12\11(setq line-spacing nil)\12      (setq line-spacing 0.5))\12    (redraw-frame (selected-frame)))\12\12" :post-blank 1 :post-affiliated 12658 :mode nil :granularity element :org-element--cache-sync-key nil :cached t :parent #125#)) 0] nil #126# -1] [[nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 13101 :end 13269 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (setq-default fill-column 70)\12\12  ;; taille de 70 pour coder\12  (add-hook 'prog-mode-hook\12\11  (lambda ()\12\11    (set-fill-column 70)))\12\12" :post-blank 1 :post-affiliated 13101 :mode planning :granularity element :org-element--cache-sync-key nil :cached t :parent #127=(section (:begin 13101 :end 13269 :contents-begin 13101 :contents-end 13268 :robust-begin 13101 :robust-end 13266 :post-blank 1 :post-affiliated 13101 :mode section :granularity element :org-element--cache-sync-key nil :cached t :parent #126#)))) 0] nil #51# -1] #127# 0] [[[nil nil #129=(section (:begin 13339 :end 13602 :contents-begin 13339 :contents-end 13600 :robust-begin 13339 :robust-end 13598 :post-blank 1 :post-affiliated 13339 :mode section :granularity element :org-element--cache-sync-key nil :cached t :parent #128#)) 0] nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 13339 :end 13602 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (use-package beacon\12    :config\12    (setq beacon-blink-delay 0.0)\12    (setq beacon-blink-duration 0.5)\12    (setq beacon-size 60)\12    ;; (setq beacon-color \"#ffa38f\")\12    (setq beacon-color \"red\")\12    (beacon-mode 1)\12    )\12\12\12" :post-blank 1 :post-affiliated 13339 :mode planning :granularity element :org-element--cache-sync-key nil :cached t :parent #129#)) -1] [[nil nil #131=(section (:begin 13638 :end 13739 :contents-begin 13638 :contents-end 13739 :robust-begin 13638 :robust-end 13737 :post-blank 0 :post-affiliated 13638 :mode section :granularity element :org-element--cache-sync-key nil :cached t :parent #130#)) 0] nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 13638 :end 13739 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value " (global-hl-line-mode t)\12 (set-face-background hl-line-face \"#311\")\12" :post-blank 0 :post-affiliated 13638 :mode planning :granularity element :org-element--cache-sync-key nil :cached t :parent #131#)) -1] #130# 0] #128# 0] [[[nil nil #133=(section (:begin 13764 :end 14600 :contents-begin 13764 :contents-end 14600 :robust-begin 13764 :robust-end 14598 :post-blank 0 :post-affiliated 13764 :mode section :granularity element :org-element--cache-sync-key nil :cached t :parent #132#)) 0] nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 13764 :end 14600 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (use-package doom-modeline\12    :hook (after-init . doom-modeline-mode)\12    :custom    \12    (doom-modeline-height 25)\12    (doom-modeline-bar-width 1)\12    (doom-modeline-icon t)\12    (doom-modeline-major-mode-icon t)\12    (doom-modeline-major-mode-color-icon t)\12    (doom-modeline-buffer-file-name-style 'truncate-upto-project)\12    (doom-modeline-buffer-state-icon t)\12    (doom-modeline-buffer-modification-icon t)\12    (doom-modeline-minor-modes nil)\12    (doom-modeline-enable-word-count t)\12    (doom-modeline-buffer-encoding nil)\12    (doom-modeline-indent-info nil)\12    (doom-modeline-checker-simple-format t)\12    (doom-modeline-vcs-max-length 20)\12    (doom-modeline-env-version t)\12    (doom-modeline-irc-stylize 'identity)\12    (doom-modeline-github-timer nil)\12    (doom-modeline-gnus-timer nil)\12    )\12\12" :post-blank 0 :post-affiliated 13764 :mode planning :granularity element :org-element--cache-sync-key nil :cached t :parent #133#)) -1] [nil [nil nil (src-block (:language "emacs-lisp" :switches nil :parameters ":tangle no" :begin 14637 :end 15042 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  (use-package nyan-mode\12    ;; :config (nyan-mode)\12    )\12\12  (use-package poke-line\12    :config\12    (poke-line-global-mode 1)\12    (poke-line-set-random-pokemon)\12    ;; (setq-default poke-line-pokemon \"gengar\")\12    )\12\12  (use-package yascroll\12    :custom (yascroll:delay-to-hide 100000)\12    (yascroll:priority 20)\12    :config\12    (global-yascroll-bar-mode 1))\12\12\12" :post-blank 1 :post-affiliated 14637 :mode planning :granularity element :org-element--cache-sync-key nil :cached t :parent #135=(section (:begin 14637 :end 15042 :contents-begin 14637 :contents-end 15041 :robust-begin 14637 :robust-end 15039 :post-blank 1 :post-affiliated 14637 :mode section :granularity element :org-element--cache-sync-key nil :cached t :parent #134#)))) 0] #135# 1] #134# 0] #132# -1] (paragraph (:begin 12552 :end 12658 :contents-begin 12552 :contents-end 12655 :post-blank 1 :post-affiliated 12552 :mode planning :granularity element :org-element--cache-sync-key nil :cached t :parent #125#)) 0] [[[[[nil nil #136# 0] [nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 15121 :end 15181 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12(use-package diminish)\12\12" :post-blank 1 :post-affiliated 15121 :mode planning :granularity element :org-element--cache-sync-key nil :cached t :parent #137=(section (:begin 15121 :end 15181 :contents-begin 15121 :contents-end 15180 :robust-begin 15121 :robust-end 15178 :post-blank 1 :post-affiliated 15121 :mode section :granularity element :org-element--cache-sync-key nil :cached t :parent #136#)))) 0] #137# 0] [[nil nil #141=(section (:begin 15195 :end 15883 :contents-begin 15195 :contents-end 15882 :robust-begin 15195 :robust-end 15880 :post-blank 1 :post-affiliated 15195 :mode section :granularity element :org-element--cache-sync-key nil :cached t :parent #138#)) 0] [[nil nil #139# 0] [nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 15908 :end 16224 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  \12  (use-package all-the-icons\12    :init\12    (unless (member \"all-the-icons\" (font-family-list))\12      (all-the-icons-install-fonts t))\12    :if (display-graphic-p)\12    :config\12    (unless (member \"all-the-icons\" (font-family-list))\12      (all-the-icons-install-fonts t))\12    )\12\12\12\12\12" :post-blank 1 :post-affiliated 15908 :mode planning :granularity element :org-element--cache-sync-key nil :cached t :parent #140=(section (:begin 15908 :end 16224 :contents-begin 15908 :contents-end 16223 :robust-begin 15908 :robust-end 16221 :post-blank 1 :post-affiliated 15908 :mode section :granularity element :org-element--cache-sync-key nil :cached t :parent #139#)))) 0] #140# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 15195 :end 15883 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12    ;;police de base, mise dans le early-init.el pour démarrage plus rapide\12  \12  (defun Policedebase ()\12      (interactive)\12      (set-face-attribute 'default nil\12                          :font \"Fira Mono\"\12                          :weight 'light\12                          :height 110\12                          )\12      )\12    (defun Policepourcoder ()\12      (interactive)\12      (set-face-attribute 'default nil\12                          :font \"JetBrains Mono\"\12                          :weight 'light\12                          ;; :height 150\12                          )\12      )\12    ;;police pour coder\12    ;; (add-hook 'lsp-mode-hook 'Policepourcoder)\12\12" :post-blank 1 :post-affiliated 15195 :mode planning :granularity element :org-element--cache-sync-key nil :cached t :parent #141#)) 1] #138# 1] [[[[nil nil #144=(section (:begin 16283 :end 17583 :contents-begin 16283 :contents-end 17582 :robust-begin 16283 :robust-end 17580 :post-blank 1 :post-affiliated 16283 :mode section :granularity element :org-element--cache-sync-key nil :cached t :parent #142#)) 0] [nil nil #143# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 16283 :end 17583 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (use-package doom-themes\12    :config\12    ;; Enable flashing mode-line on errors\12    (doom-themes-visual-bell-config)\12    ;; Enable custom neotree theme (all-the-icons must be installed!)\12    ;; for treemacs\12    (setq doom-themes-treemacs-theme \"doom-atom\") ; use \"doom-colors\" for less minimal icon theme\12    (doom-themes-treemacs-config)\12    ;; Corrects (and improves) org-mode's native fontification.\12    (doom-themes-org-config)\12    ;;load the theme\12    (load-theme 'doom-moonlight t)\12    )\12\12\12\12  ;;charger le thème lors d'un client emacs :\12  (defvar display-theme-loadedp nil)\12  (defun load-display-theme ()\12    (load-theme 'doom-moonlight t))\12  (add-hook 'after-make-frame-functions (lambda (frame)\12                                          (unless display-theme-loadedp\12                                            (with-selected-frame frame\12                                              (load-display-theme))\12                                            (setq display-theme-loadedp t))))\12\12  (defun mb/pick-color-theme (frame)\12    (select-frame frame)\12    (enable-theme 'doom-moonlight))\12  (add-hook 'after-make-frame-functions 'mb/pick-color-theme)\12\12\12  ;; (use-package spacemacs-theme\12  ;; :no-require t\12  ;; :init\12  ;; (load-theme 'spacemacs-dark t)\12  ;; )\12\12" :post-blank 1 :post-affiliated 16283 :mode planning :granularity element :org-element--cache-sync-key nil :cached t :parent #144#)) 0] [nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 17644 :end 17874 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (use-package dimmer\12    :custom\12    (dimmer-fraction 0.3)\12    (dimmer-exclusion-regexp-list\12     '(\".*Minibuf.*\"\12       \".*which-key.*\"\12       \".*LV.*\"))\12    :config\12    (dimmer-mode 1)\12    )\12\12" :post-blank 1 :post-affiliated 17644 :mode planning :granularity element :org-element--cache-sync-key nil :cached t :parent #145=(section (:begin 17644 :end 17874 :contents-begin 17644 :contents-end 17873 :robust-begin 17644 :robust-end 17871 :post-blank 1 :post-affiliated 17644 :mode section :granularity element :org-element--cache-sync-key nil :cached t :parent #143#)))) 0] #145# -1] [nil [nil nil (src-block (:language "emacs-lisp" :switches nil :parameters ":tangle no" :begin 17890 :end 18010 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  (use-package emojify\12    :hook (after-init . global-emojify-mode)\12    )\12" :post-blank 1 :post-affiliated 17890 :mode planning :granularity element :org-element--cache-sync-key nil :cached t :parent #147=(section (:begin 17890 :end 18010 :contents-begin 17890 :contents-end 18009 :robust-begin 17890 :robust-end 18007 :post-blank 1 :post-affiliated 17890 :mode section :granularity element :org-element--cache-sync-key nil :cached t :parent #146#)))) 0] #147# 1] #146# -1] #142# 0] [[[[[[nil nil #149=(section (:begin 18059 :end 21045 :contents-begin 18059 :contents-end 21045 :robust-begin 18059 :robust-end 21043 :post-blank 0 :post-affiliated 18059 :mode section :granularity element :org-element--cache-sync-key nil :cached t :parent #148#)) 0] [nil nil #63# 0] (src-block (:language "emacs-lisp" :switches nil :parameters ":tangle no" :begin 18059 :end 21045 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  (use-package svg-lib\12    :config\12\12    (defvar svg-font-lock-keywords\12      `((\"TODO\"\12         (0 (list 'face nil 'display (svg-font-lock-todo))))\12        (\"NEXT\"\12         (0 (list 'face nil 'display (svg-font-lock-next))))\12        (\"TODO\"\12         (0 (list 'face nil 'display (svg-font-lock-todo))))\12        (\"\\\\:\\\\([0-9a-zA-Z]+\\\\)\\\\:\"\12         (0 (list 'face nil 'display (svg-font-lock-tag (match-string 1)))))\12        (\"DONE\"\12         (0 (list 'face nil 'display (svg-font-lock-done))))\12        (\"\\\\[\\\\([0-9]\\\\{1,3\\\\}\\\\)%\\\\]\"\12         (0 (list 'face nil 'display (svg-font-lock-progress_percent (match-string 1)))))\12        (\"\\\\[\\\\([0-9]+/[0-9]+\\\\)\\\\]\"\12         (0 (list 'face nil 'display (svg-font-lock-progress_count (match-string 1)))))))\12\12    (defun svg-font-lock-tag (label)\12      (svg-lib-tag label nil :margin 0))\12\12    (defun svg-font-lock-todo ()\12      (svg-lib-tag \"TODO\" nil :margin 0\12                   :font-family \"Fira Mono\" :font-weight 500\12                   :foreground \"#FFFFFF\" :background \"#673AB7\"))\12\12\12    (defun svg-font-lock-next ()\12      (svg-lib-tag \"NEXT\" nil :margin 0\12                   :font-family \"Fira Mono\" :font-weight 500\12                   :foreground \"red\" :background \"#673AB7\"))\12\12    (defun svg-font-lock-done ()\12      (svg-lib-tag \"DONE\" nil :margin 0\12                   :font-family \"Fira Mono\" :font-weight 400\12                   :foreground \"#B0BEC5\" :background \"white\"))\12\12    (defun svg-font-lock-progress_percent (value)\12      (svg-image (svg-lib-concat\12                  (svg-lib-progress-bar (/ (string-to-number value) 100.0)\12                                        nil :margin 0 :stroke 2 :radius 3 :padding 2 :width 12)\12                  (svg-lib-tag (concat value \"%\")\12                               nil :stroke 0 :margin 0)) :ascent 'center))\12\12    (defun svg-font-lock-progress_count (value)\12      (let* ((seq (mapcar #'string-to-number (split-string value \"/\")))\12             (count (float (car seq)))\12             (total (float (cadr seq))))\12        (svg-image (svg-lib-concat\12                    (svg-lib-progress-bar (/ count total) nil\12                                          :margin 0 :stroke 2 :radius 3 :padding 2 :width 12)\12                    (svg-lib-tag value nil\12                                 :stroke 0 :margin 0)) :ascent 'center)))\12\12    ;; Activate\12    (push 'display font-lock-extra-managed-props)\12    (font-lock-add-keywords nil svg-font-lock-keywords)\12    (font-lock-flush (point-min) (point-max))\12\12    ;; Deactivate \12    ;; (font-lock-remove-keywords nil svg-font-lock-keywords)\12    ;; (font-lock-flush (point-min) (point-max))\12\12    ;;qqch dans org désactive svg, je dois donc le hook comme ceci pour que ça marche\12    (defun svg-icones ()\12      (push 'display font-lock-extra-managed-props)\12      (font-lock-add-keywords nil svg-font-lock-keywords)\12      (font-lock-flush (point-min) (point-max))\12      )\12\12    (add-hook #'org-mode-hook #'svg-icones)\12\12    )\12\12" :post-blank 0 :post-affiliated 18059 :mode planning :granularity element :org-element--cache-sync-key nil :cached t :parent #149#)) 0] [[nil nil #152=(section (:begin 21098 :end 22391 :contents-begin 21098 :contents-end 22391 :robust-begin 21098 :robust-end 22389 :post-blank 0 :post-affiliated 21098 :mode section :granularity element :org-element--cache-sync-key nil :cached t :parent #150#)) 0] [nil nil #151# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 21098 :end 22391 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  ;;pour supprimer directement le buffer si un fichier est supprimé (ou directory)\12  (defun my--dired-kill-before-delete (file &rest rest)\12    (if-let ((buf (get-file-buffer file)))\12        (kill-buffer buf)\12      (dolist (dired-buf (dired-buffers-for-dir file))\12        (kill-buffer dired-buf))))\12  (advice-add 'dired-delete-file :before 'my--dired-kill-before-delete)\12\12\12\12  ;; auto refresh dired when file changes\12  (add-hook 'dired-mode-hook 'auto-revert-mode)\12\12  (setq dired-auto-revert-buffer t) ;; Refreshes the dired buffer upon revisiting\12  (setq dired-dwim-target t) ;; If two dired buffers are open, save in the other when trying to copy\12  (setq dired-hide-details-hide-symlink-targets nil) ;; Don't hide symlink targets\12  (setq dired-listing-switches \"-alh\") ;; Have dired view all folders, in lengty format, with data amounts in human readable format\12  (setq dired-ls-F-marks-symlinks nil) ;; Informs dired about how 'ls -lF' marks symbolic links, see help page for more details\12  (setq dired-recursive-copies 'always) ;; Always copy recursively without asking\12  (setq dired-recursive-deletes 'always) ; demande plus pour supprimer récursivement\12  (setq dired-dwim-target t) ; qd t-on copie, si un autre dired ouvert, copie dans lui \"directement\"\12\12" :post-blank 0 :post-affiliated 21098 :mode planning :granularity element :org-element--cache-sync-key nil :cached t :parent #152#)) 0] #150# 0] [[nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 22422 :end 22536 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (use-package dired-quick-sort\12    :config\12    (dired-quick-sort-setup)\12    )\12\12" :post-blank 0 :post-affiliated 22422 :mode planning :granularity element :cached t :parent #154=(section (:begin 22422 :end 22536 :contents-begin 22422 :contents-end 22536 :robust-begin 22422 :robust-end 22534 :post-blank 0 :post-affiliated 22422 :mode section :granularity element :cached t :parent #151# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [nil nil #162=(section (:begin 22594 :end 22765 :contents-begin 22594 :contents-end 22765 :robust-begin 22594 :robust-end 22763 :post-blank 0 :post-affiliated 22594 :mode section :granularity element :cached t :parent #153# :org-element--cache-sync-key nil)) 0] #153# 0] #154# -1] [[[[nil nil #155# 0] [nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 22810 :end 23329 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (use-package all-the-icons-dired)\12\12  (setq dired-omit-files\12        (rx (or\12             (seq bol (? \".\") \"#\")\12             (seq bol \".\" eol)\12             (seq bol \"..\" eol)\12             )))\12\12  (add-hook 'dired-mode-hook\12            (lambda ()\12              (interactive)\12              ;; (dired-omit-mode 1)\12              (all-the-icons-dired-mode 1)\12              (dired-sort-toggle-or-edit)\12              (dired-hide-details-mode)\12              (hl-line-mode 1)\12              ))\12\12" :post-blank 0 :post-affiliated 22810 :mode planning :granularity element :cached t :parent #156=(section (:begin 22810 :end 23329 :contents-begin 22810 :contents-end 23329 :robust-begin 22810 :robust-end 23327 :post-blank 0 :post-affiliated 22810 :mode section :granularity element :cached t :parent #155# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] #156# 0] [[nil nil #158=(section (:begin 23385 :end 24584 :contents-begin 23385 :contents-end 24582 :robust-begin 23385 :robust-end 24580 :post-blank 2 :post-affiliated 23385 :mode section :granularity element :cached t :parent #157# :org-element--cache-sync-key nil)) 0] [nil nil #70# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 23385 :end 24584 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (eval-after-load \"dired-aux\"\12     '(add-to-list 'dired-compress-file-suffixes \12                   '(\"\\\\.zip\\\\'\" \".zip\" \"unzip\")))\12\12  (eval-after-load \"dired\"\12    '(define-key dired-mode-map \"z\" 'dired-zip-files))\12  (defun dired-zip-files (zip-file)\12    \"Create an archive containing the marked files.\"\12    (interactive \"sEnter name of zip file: \")\12\12    ;; create the zip file\12    (let ((zip-file (if (string-match \".zip$\" zip-file) zip-file (concat zip-file \".zip\"))))\12      (shell-command \12       (concat \"zip \" \12               zip-file\12               \" \"\12               (concat-string-list \12                (mapcar\12                 #'(lambda (filename)\12                    (file-name-nondirectory filename))\12                 (dired-get-marked-files))))))\12    (revert-buffer)\12\12    ;; remove the mark on all the files  \"*\" to \" \"\12    ;; (dired-change-marks 42 ?\\040)\12    ;; mark zip file\12    ;; (dired-mark-files-regexp (filename-to-regexp zip-file))\12    )\12\12\12\12  (defun concat-string-list (list) \12     \"Return a string which is a concatenation of all elements of the list separated by spaces\" \12      (mapconcat #'(lambda (obj) (format \"%s\" obj)) list \" \")) \12\12  \12" :post-blank 2 :post-affiliated 23385 :mode planning :granularity element :cached t :parent #158# :org-element--cache-sync-key nil)) 0] #157# 0] [[nil nil #161=(section (:begin 24665 :end 24789 :contents-begin 24665 :contents-end 24788 :robust-begin 24665 :robust-end 24786 :post-blank 1 :post-affiliated 24665 :mode section :granularity element :cached t :parent #159# :org-element--cache-sync-key nil)) 0] [nil nil #160# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 24665 :end 24789 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12(use-package move-text\12     :defer 0.5\12     :config\12     (move-text-default-bindings))\12\12" :post-blank 1 :post-affiliated 24665 :mode planning :granularity element :cached t :parent #161# :org-element--cache-sync-key nil)) 0] #159# -1] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 22594 :end 22765 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (use-package dired-collapse\12    :defer t)\12  (add-hook 'dired-load-hook\12\11    (lambda ()\12\11      (interactive)\12\11      (dired-collapse)))\12\12" :post-blank 0 :post-affiliated 22594 :mode planning :granularity element :cached t :parent #162# :org-element--cache-sync-key nil)) 0] [[[[[nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 24813 :end 25465 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (use-package popup-kill-ring\12    :config\12    (with-eval-after-load 'company\12    \12      ;; touches perso, \12      (define-key popup-kill-ring-keymap (kbd \"C-n\") nil)\12      (define-key popup-kill-ring-keymap (kbd \"C-p\") nil)\12      (define-key popup-kill-ring-keymap (kbd \"s\") #'popup-kill-ring-next)\12      (define-key popup-kill-ring-keymap (kbd \"d\") #'popup-kill-ring-previous)\12      (define-key popup-kill-ring-keymap (kbd \"u\") 'popup-kill-ring-select)\12      (define-key popup-kill-ring-keymap (kbd \"SPC\") #'company-abort)\12      )\12    (define-key popup-menu-keymap (kbd \"s\") #'popup-kill-ring-next)\12  \12  \12  \12    )\12\12" :post-blank 1 :post-affiliated 24813 :mode planning :granularity element :cached t :parent #175=(section (:begin 24813 :end 25465 :contents-begin 24813 :contents-end 25464 :robust-begin 24813 :robust-end 25462 :post-blank 1 :post-affiliated 24813 :mode section :granularity element :cached t :parent #160# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [nil nil #164=(section (:begin 25506 :end 25979 :contents-begin 25506 :contents-end 25978 :robust-begin 25506 :robust-end 25976 :post-blank 1 :post-affiliated 25506 :mode section :granularity element :cached t :parent #163# :org-element--cache-sync-key nil)) 0] #163# 0] [[nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 25658 :end 25979 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (use-package smart-hungry-delete\12    :bind (\12\11   (\"<backspace>\" . smart-hungry-delete-backward-char)\12\11   ;; (\"C-d\" . smart-hungry-delete-forward-char)\12\11   )\12    :defer nil ;; dont defer so we can add our functions to hooks \12    :config (smart-hungry-delete-add-default-hooks)\12    )\12\12" :post-blank 1 :post-affiliated 25658 :mode nil :granularity element :cached t :parent #164# :org-element--cache-sync-key nil)) 0] [nil nil #166=(section (:begin 26050 :end 26810 :contents-begin 26050 :contents-end 26809 :robust-begin 26050 :robust-end 26807 :post-blank 1 :post-affiliated 26050 :mode section :granularity element :cached t :parent #165# :org-element--cache-sync-key nil)) 0] #165# 0] (paragraph (:begin 25506 :end 25658 :contents-begin 25506 :contents-end 25657 :post-blank 1 :post-affiliated 25506 :mode planning :granularity element :cached t :parent #164# :org-element--cache-sync-key nil)) 0] [[nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 26153 :end 26810 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (use-package smartparens\12    ;; :after lsp \12    :hook ((lsp-mode org-mode) . smartparens-mode)\12    :config\12    (sp-pair \"\\«\" \"\\»\")  \12    ;;pour enlever un truc\12    ;; the second argument is the closing delimiter, so you need to skip it with nil\12    (sp-pair \"'\" nil :actions :rem)  \12    ;; pour rajouter à un mode :\12    ;; pas supprimer avec xah car ne fait pas partie de xah-right-brackets\12    ;; changer org emphasis ?\12    (sp-local-pair 'org-mode \"*\" \"*\") ;; adds * as a local pair in org mode\12    (sp-local-pair 'org-mode \"=\" \"=\") ;; adds = as a local pair in org mode\12    (sp-local-pair 'org-mode \"\\/\" \"\\/\")\12    )\12\12" :post-blank 1 :post-affiliated 26153 :mode nil :granularity element :cached t :parent #166# :org-element--cache-sync-key nil)) 0] [nil nil #174=(section (:begin 26884 :end 26945 :contents-begin 26884 :contents-end 26943 :robust-begin 26884 :robust-end 26941 :post-blank 2 :post-affiliated 26884 :mode section :granularity element :cached t :parent #167# :org-element--cache-sync-key nil)) 0] #167# 0] (paragraph (:begin 26050 :end 26153 :contents-begin 26050 :contents-end 26152 :post-blank 1 :post-affiliated 26050 :mode planning :granularity element :cached t :parent #166# :org-element--cache-sync-key nil)) -1] [[[nil nil #168# 0] [nil [nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 27078 :end 27394 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (use-package keyfreq\12    :config\12    ;;   Pour exclure des commandes \12    ;; (setq keyfreq-excluded-commands\12    ;;       '(\12    ;;         backward-char\12    ;;         previous-line\12    ;;         next-line)\12    ;; )\12    (keyfreq-mode 1)\12    (keyfreq-autosave-mode 1)\12    )\12\12\12\12\12" :post-blank 1 :post-affiliated 27078 :mode nil :granularity element :cached t :parent #169=(section (:begin 27031 :end 27394 :contents-begin 27031 :contents-end 27393 :robust-begin 27031 :robust-end 27391 :post-blank 1 :post-affiliated 27031 :mode section :granularity element :cached t :parent #168# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] (paragraph (:begin 27031 :end 27078 :contents-begin 27031 :contents-end 27077 :post-blank 1 :post-affiliated 27031 :mode planning :granularity element :cached t :parent #169# :org-element--cache-sync-key nil)) 1] #169# 1] [[nil [nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 27430 :end 27493 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "(cd my-user-emacs-directory)\12" :post-blank 1 :post-affiliated 27430 :mode planning :granularity element :org-element--cache-sync-key nil :cached t :parent #171=(section (:begin 27430 :end 27493 :contents-begin 27430 :contents-end 27492 :robust-begin 27430 :robust-end 27490 :post-blank 1 :post-affiliated 27430 :mode section :granularity element :org-element--cache-sync-key nil :cached t :parent #170#)))) 0] #171# 1] [nil [nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 27513 :end 27641 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  (use-package restart-emacs\12      :config (defalias 'emacs-restart #'restart-emacs)\12      )\12" :post-blank 2 :post-affiliated 27513 :mode planning :granularity element :cached t :parent #173=(section (:begin 27513 :end 27641 :contents-begin 27513 :contents-end 27639 :robust-begin 27513 :robust-end 27637 :post-blank 2 :post-affiliated 27513 :mode section :granularity element :cached t :parent #172# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] #173# 1] #172# 0] #170# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 26884 :end 26945 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  (use-package sudo-edit)\12" :post-blank 2 :post-affiliated 26884 :mode planning :granularity element :cached t :parent #174# :org-element--cache-sync-key nil)) 0] #175# 0] #148# 1] #53# 1] #34# 1] nil nil 0] org-element--cache-compare)))