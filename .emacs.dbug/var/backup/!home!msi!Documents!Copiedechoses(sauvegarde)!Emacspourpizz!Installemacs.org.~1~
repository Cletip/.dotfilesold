Base install :
mettre le .emacs.d dans votre dossier personnel (dans le dossier ~, ou /home/nomutilisateur/)


Base Emacs:

C = control
C-x C-s = save file
M = alt
M-x = appeler une commande
C-x = Control x
C-s C-u = Control s Control u
etc
Pour executer du code emacs, se mettre à la fin d'une parenthèse et C-x C-e : essayer ici

(next-line)


Base org mode : 

    TAB – plier déplier headline
    M-up/down – move a headline up or down
    M-left/right – promote or demote a headline
    M-RET – nouveau headline

    C-h t – Emacs tutorial


* Dernière version d'emacs

Pour les pizz :

Prérequis : Ubuntu + emacs + détermination

Pour installer une version récente d'emacs sur ubuntu :

ouvrir un terminal (ctrl meta t )
Coller ligne par ligne (ctrl shift v) dans le terminal :
  sudo add-apt-repository ppa:kelleyk/emacs #taper son mdp
  sudo apt-get update
  sudo apt install emacs #puis la touche tab pour compléter. prendre la dernière version (27 / 27.2 normalement)
  # tester avec cette commande la version:
  emacs --version
  # devenir aveugl... lancer emacs !
  emacs

ou ce lien  https://ubuntuhandbook.org/index.php/2020/09/install-emacs-27-1-ppa-ubuntu-20-04/


ctrl meta t (ouvre un terminal)

#+begin_src sh
  
  sudo add-apt-repository ppa:kelleyk/emacs
  sudo apt-get update
  sudo apt install emacs #puis la touche tab pour compléter. prendre la dernière version (27 / 27.2 normalement)
  # tester avec cette commande la version:
  emacs --version
  # lancer emacs !
  emacs
  
#+end_src


Marche :

[[https://ubuntuhandbook.org/index.php/2020/09/install-emacs-27-1-ppa-ubuntu-20-04/][ici]]


https://linuxways.net/ubuntu/how-to-install-emacs-editor-in-ubuntu-20-04/

Ne marche pas :



#+begin_quote

sauvegarder son .emacs.d avant la manip
Faire ceci : [[https://ubuntuhandbook.org/index.php/2021/03/gnu-emacs-27-2-released/][ici]]
puis faire la commande : flatpak run org.gnu.emacs pour 27.2 !

#+end_quote



* Présentation emacs finale



** Apprendre les mouvements/ mapper ses raccourcis et faire le tuto (plus tard)

1. =xah fly keys= (pour activer, enlever ":tangle no" au block source )
2. [[https://github.com/emacsorphanage/god-mode][god-mode]]
3. evil mode (vim)
4. De base

   http://xahlee.info/emacs/misc/xah-fly-keys_tutorial.html

   une fois tuto normal puis une fois tuto xah fly key

** Idée de commandes n'importe où, état d'esprit du fichier de configuration et parler des modes/hook/buffer/window
*** Buffer, windows
*** Comment faire le fichier de config

Faire <el tab pour faire un nouveau code block dans config.org
Puis respecter cette syntaxe:
(plein d'exemple dans votre fichier de configuration)
**** démo use-package


#+begin_src emacs-lisp 
  
  
  ;; les parties sont séparé par :nomdelapartie
  
    (use-package nomdupackage
      :init ;;toute cette partie est chargé AVANT le package
      (setq unevariableamoddifavantlepackage nil)
      
      ;; (:ensure t le télécharge mais pas à mettre pour vous car automatique)
  
      ;;commentaires
  
  
      :hook (org . tool-bar-mode) ;;quand org, alors active la tool-bar
      :hook ((modeahook unautre encoreun) . lemodeaactiver
	     ) ;; autre syntax
  
      ;;commentaires
  
      :init
      chargeravantlepackage
      :config ;;toute cette partie est chargé APRÈS le package
  (setq mavariable nil) ;;setq = moddif de la valeur de la variable
  
      ;;commentaires
      (add-hook 'org-mode-hook 'electric-pair-mode) ;; autre syntax du hook
  
      ) ;;parenthèse de fin du package
  
  
  
  
      (add-hook 'org-mode-hook 'electric-pair-mode) ;; hook que l'on peut aussi mettre hors du package, mais moin propre  
  
  
  
  
#+end_src

*** Astuces pour déboguer

Pas tout à la fois
Si bug, faire par dichotomie

**** Config reload

#+begin_src emacs-lisp 

(defun config-reload ()
  "Reloads ~/.emacs.d/config.org at runtime"
  (interactive)
  (org-babel-load-file (expand-file-name "~/.emacs.d/config.org")))
(global-set-key (kbd "C-c r") 'config-reload)

#+end_src

**** Vérification

#+begin_src emacs-lisp 

(tool-bar-mode -1)

#+end_src

**** emacs restart

#+begin_src emacs-lisp 
  
  (use-package restart-emacs
  :straight t
    ;; If I ever close Emacs, it's likely because I want to restart it.
    ;; :bind ("C-x C-c" . restart-emacs)
    ;; Let's define an alias so there's no need to remember the order.
    :config (defalias 'emacs-restart #'restart-emacs))
  
  
#+end_src

** Les + / bonus
*** Macro !

F3 macro puis F4 pour enregistrer
Possibilité de les enregistrer et de les bind

*** Petite liste des packages utiles + présentation de use-package

- use-package / straight : installation des package




- wich-key : voir les touches
- evil-mode/ =xah fly keys= : raccourcis
- ivy vertico etc : pour complétion mini buffer
- winner mode : pour winner-undo
- config-visit : visiter sa config rapidement 
- no-littering : .emacs.d propre

- smartparens : parens auto
- treemacs : vu sur le côté des dossiors
- grammalect/flyspell : correcteur orthographique et grammatical
- magit : pour git

*** Petites démo d'org mode ([[https://www.youtube.com/watch?v=hnMntOQjs7Q][ici si pas le time]]), latex dans org vite fait ($$ et \[ ici  \])
*** Les premières fonctions

#+begin_src emacs-lisp 
  
  (defun nombdemafonciton()
    (interactive) ;;permet de l'appeler avec M-x
  
    ;; puis suit le code qui doit être exécuter
    (tool-bar-mode 0)
    (menu-bar-mode 0)
    (setq which-key-idle-delay 0.01) ;; setq = modification de variable. Ici, modifie le temps où which key va s'afficher
    )
  
  
  (defun go-to-unfichieroudossier()
    (interactive) ;;permet de l'appeler avec M-x
(find-file "/chemin/jusquau/fichieroudossier/voulu")
    )
  
  
  ;;ici, une plus complexe, comprend pas tout mais osef
  (defun taille-interligne ()
    "Toggle line spacing between no extra space to extra half line height.
  URL `http://ergoemacs.org/emacs/emacs_toggle_line_spacing.html'
  Version 2017-06-02"
    (interactive)
    (if line-spacing ;;un if en elisp
	(setq line-spacing nil) 
      (setq line-spacing 0.5))
    (redraw-frame (selected-frame)))
  
#+end_src

*** Un jour meilleure programmation avec lsp mode
** Aides / liens
*** fonctions :

1. describe-function
2. describe-key

*** Liens yt utiles :

1. [[https://cestlaz.github.io/stories/emacs/][C'est la Z]]
2. [[https://www.youtube.com/c/systemcrafters][System crafters]]

** Devoir

- personnalisation : config.org et pourquoi pas de la barre en bas (s'amuser à faire disparaître certains truc) =doom-modeline=



