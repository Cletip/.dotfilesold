<!DOCTYPE html>
<html lang="en">
<head>
<!-- 2022-02-16 Wed 10:43 -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>Org mode</title>
<meta name="author" content="msi" />
<meta name="description" content="c'estunedescription" />
<meta name="keywords" content="?" />
<meta name="generator" content="Org Mode" />
<style>
  #content { max-width: 60em; margin: auto; }
  .title  { text-align: center;
             margin-bottom: .2em; }
  .subtitle { text-align: center;
              font-size: medium;
              font-weight: bold;
              margin-top:0; }
  .todo   { font-family: monospace; color: red; }
  .done   { font-family: monospace; color: green; }
  .priority { font-family: monospace; color: orange; }
  .tag    { background-color: #eee; font-family: monospace;
            padding: 2px; font-size: 80%; font-weight: normal; }
  .timestamp { color: #bebebe; }
  .timestamp-kwd { color: #5f9ea0; }
  .org-right  { margin-left: auto; margin-right: 0px;  text-align: right; }
  .org-left   { margin-left: 0px;  margin-right: auto; text-align: left; }
  .org-center { margin-left: auto; margin-right: auto; text-align: center; }
  .underline { text-decoration: underline; }
  #postamble p, #preamble p { font-size: 90%; margin: .2em; }
  p.verse { margin-left: 3%; }
  pre {
    border: 1px solid #e6e6e6;
    border-radius: 3px;
    background-color: #f2f2f2;
    padding: 8pt;
    font-family: monospace;
    overflow: auto;
    margin: 1.2em;
  }
  pre.src {
    position: relative;
    overflow: auto;
  }
  pre.src:before {
    display: none;
    position: absolute;
    top: -8px;
    right: 12px;
    padding: 3px;
    color: #555;
    background-color: #f2f2f299;
  }
  pre.src:hover:before { display: inline; margin-top: 14px;}
  /* Languages per Org manual */
  pre.src-asymptote:before { content: 'Asymptote'; }
  pre.src-awk:before { content: 'Awk'; }
  pre.src-authinfo::before { content: 'Authinfo'; }
  pre.src-C:before { content: 'C'; }
  /* pre.src-C++ doesn't work in CSS */
  pre.src-clojure:before { content: 'Clojure'; }
  pre.src-css:before { content: 'CSS'; }
  pre.src-D:before { content: 'D'; }
  pre.src-ditaa:before { content: 'ditaa'; }
  pre.src-dot:before { content: 'Graphviz'; }
  pre.src-calc:before { content: 'Emacs Calc'; }
  pre.src-emacs-lisp:before { content: 'Emacs Lisp'; }
  pre.src-fortran:before { content: 'Fortran'; }
  pre.src-gnuplot:before { content: 'gnuplot'; }
  pre.src-haskell:before { content: 'Haskell'; }
  pre.src-hledger:before { content: 'hledger'; }
  pre.src-java:before { content: 'Java'; }
  pre.src-js:before { content: 'Javascript'; }
  pre.src-latex:before { content: 'LaTeX'; }
  pre.src-ledger:before { content: 'Ledger'; }
  pre.src-lisp:before { content: 'Lisp'; }
  pre.src-lilypond:before { content: 'Lilypond'; }
  pre.src-lua:before { content: 'Lua'; }
  pre.src-matlab:before { content: 'MATLAB'; }
  pre.src-mscgen:before { content: 'Mscgen'; }
  pre.src-ocaml:before { content: 'Objective Caml'; }
  pre.src-octave:before { content: 'Octave'; }
  pre.src-org:before { content: 'Org mode'; }
  pre.src-oz:before { content: 'OZ'; }
  pre.src-plantuml:before { content: 'Plantuml'; }
  pre.src-processing:before { content: 'Processing.js'; }
  pre.src-python:before { content: 'Python'; }
  pre.src-R:before { content: 'R'; }
  pre.src-ruby:before { content: 'Ruby'; }
  pre.src-sass:before { content: 'Sass'; }
  pre.src-scheme:before { content: 'Scheme'; }
  pre.src-screen:before { content: 'Gnu Screen'; }
  pre.src-sed:before { content: 'Sed'; }
  pre.src-sh:before { content: 'shell'; }
  pre.src-sql:before { content: 'SQL'; }
  pre.src-sqlite:before { content: 'SQLite'; }
  /* additional languages in org.el's org-babel-load-languages alist */
  pre.src-forth:before { content: 'Forth'; }
  pre.src-io:before { content: 'IO'; }
  pre.src-J:before { content: 'J'; }
  pre.src-makefile:before { content: 'Makefile'; }
  pre.src-maxima:before { content: 'Maxima'; }
  pre.src-perl:before { content: 'Perl'; }
  pre.src-picolisp:before { content: 'Pico Lisp'; }
  pre.src-scala:before { content: 'Scala'; }
  pre.src-shell:before { content: 'Shell Script'; }
  pre.src-ebnf2ps:before { content: 'ebfn2ps'; }
  /* additional language identifiers per "defun org-babel-execute"
       in ob-*.el */
  pre.src-cpp:before  { content: 'C++'; }
  pre.src-abc:before  { content: 'ABC'; }
  pre.src-coq:before  { content: 'Coq'; }
  pre.src-groovy:before  { content: 'Groovy'; }
  /* additional language identifiers from org-babel-shell-names in
     ob-shell.el: ob-shell is the only babel language using a lambda to put
     the execution function name together. */
  pre.src-bash:before  { content: 'bash'; }
  pre.src-csh:before  { content: 'csh'; }
  pre.src-ash:before  { content: 'ash'; }
  pre.src-dash:before  { content: 'dash'; }
  pre.src-ksh:before  { content: 'ksh'; }
  pre.src-mksh:before  { content: 'mksh'; }
  pre.src-posh:before  { content: 'posh'; }
  /* Additional Emacs modes also supported by the LaTeX listings package */
  pre.src-ada:before { content: 'Ada'; }
  pre.src-asm:before { content: 'Assembler'; }
  pre.src-caml:before { content: 'Caml'; }
  pre.src-delphi:before { content: 'Delphi'; }
  pre.src-html:before { content: 'HTML'; }
  pre.src-idl:before { content: 'IDL'; }
  pre.src-mercury:before { content: 'Mercury'; }
  pre.src-metapost:before { content: 'MetaPost'; }
  pre.src-modula-2:before { content: 'Modula-2'; }
  pre.src-pascal:before { content: 'Pascal'; }
  pre.src-ps:before { content: 'PostScript'; }
  pre.src-prolog:before { content: 'Prolog'; }
  pre.src-simula:before { content: 'Simula'; }
  pre.src-tcl:before { content: 'tcl'; }
  pre.src-tex:before { content: 'TeX'; }
  pre.src-plain-tex:before { content: 'Plain TeX'; }
  pre.src-verilog:before { content: 'Verilog'; }
  pre.src-vhdl:before { content: 'VHDL'; }
  pre.src-xml:before { content: 'XML'; }
  pre.src-nxml:before { content: 'XML'; }
  /* add a generic configuration mode; LaTeX export needs an additional
     (add-to-list 'org-latex-listings-langs '(conf " ")) in .emacs */
  pre.src-conf:before { content: 'Configuration File'; }

  table { border-collapse:collapse; }
  caption.t-above { caption-side: top; }
  caption.t-bottom { caption-side: bottom; }
  td, th { vertical-align:top;  }
  th.org-right  { text-align: center;  }
  th.org-left   { text-align: center;   }
  th.org-center { text-align: center; }
  td.org-right  { text-align: right;  }
  td.org-left   { text-align: left;   }
  td.org-center { text-align: center; }
  dt { font-weight: bold; }
  .footpara { display: inline; }
  .footdef  { margin-bottom: 1em; }
  .figure { padding: 1em; }
  .figure p { text-align: center; }
  .equation-container {
    display: table;
    text-align: center;
    width: 100%;
  }
  .equation {
    vertical-align: middle;
  }
  .equation-label {
    display: table-cell;
    text-align: right;
    vertical-align: middle;
  }
  .inlinetask {
    padding: 10px;
    border: 2px solid gray;
    margin: 10px;
    background: #ffffcc;
  }
  #org-div-home-and-up
   { text-align: right; font-size: 70%; white-space: nowrap; }
  textarea { overflow-x: auto; }
  .linenr { font-size: smaller }
  .code-highlighted { background-color: #ffff00; }
  .org-info-js_info-navigation { border-style: none; }
  #org-info-js_console-label
    { font-size: 10px; font-weight: bold; white-space: nowrap; }
  .org-info-js_search-highlight
    { background-color: #ffff00; color: #000000; font-weight: bold; }
  .org-svg { width: 90%; }
</style>

<link rel="stylesheet" type="text/css" href="style.css" />
?
</head>
<body>
<div id="content" class="content">
<header>
<h1 class="title">Org mode</h1>
</header>
<div id="outline-container-org0e63314" class="outline-2">
<h2 id="org0e63314"><span class="section-number-2">1.</span> Rapide présentation d'<a href="https://www.orgmode.org/">org mode</a></h2>
<div class="outline-text-2" id="text-1">
</div>
<div id="outline-container-orgd4ed465" class="outline-3">
<h3 id="orgd4ed465"><span class="section-number-3">1.1.</span> <span class="todo TODO">TODO</span> Fonctionnalité de base</h3>
<div class="outline-text-3" id="text-1-1">
<p>
Dire :
Les titres, <b>emphasis</b>, les TODO, les block de code
</p>

<p>
Pour le c par exemple :
</p>
<pre class="example" id="org96d2275">
#+begin_src c

int x = 3;

#+end_src
</pre>
</div>
</div>



<div id="outline-container-orgfa0bca3" class="outline-3">
<h3 id="orgfa0bca3"><span class="section-number-3">1.2.</span> Pour l'export en html</h3>
<div class="outline-text-3" id="text-1-2">
<p>
Org-mode, en appelant la commande org-export-dispatch (avec M-x), permet d'exporter en différents format (voir image suivante) :
</p>


<figure id="orga910028">
<img src="images/org-export.png" alt="org-export.png">

</figure>

<p>
De plus, d'autres formats peuvent être ajouté, comme par exemple en .epub (pour les liseuses) etc (voir sur internet pour plus de choix).
</p>

<p>
Celui qui va évidemment nous intéresser, c'est le HTML !
</p>
</div>

<div id="outline-container-orgfe517b1" class="outline-4">
<h4 id="orgfe517b1"><span class="section-number-4">1.2.1.</span> Les différentes options possibles pour export un fichier</h4>
<div class="outline-text-4" id="text-1-2-1">
<p>
Pour ajouter une option, il suffit d'ajouter à un endroit dans le fichier (souvent au début) quelque chose comme ceci :
</p>

<pre class="example" id="orgaf67344">
#+OPTIONS: nomdelavarible:valeur uneautrevarible:valeur etc...
</pre>

<p>
Par exemple, pour ne pas exporter la table des matière (qui est exporté de base), on peut mettre au début du document l'option suivante :
</p>

<pre class="example" id="org37af46b">
#+OPTIONS: toc:nil
</pre>


<p>
Tous les options sont disponible <a href="https://orgmode.org/manual/Export-Settings.html">ici</a>, et il y en a un paquet !
</p>
</div>
</div>


<div id="outline-container-org3bd4245" class="outline-4">
<h4 id="org3bd4245"><span class="section-number-4">1.2.2.</span> Gérer le titre, l'auteur etc</h4>
<div class="outline-text-4" id="text-1-2-2">
<p>
Comme l'on a vu, on peut ajouter des options. Mais on peut aussi ajouter d'autres choses, comme par exemple :
</p>

<pre class="example" id="orga80247b">
#+Title: untitre vraiment génial

</pre>

<p>
Toutes ses configuration seront automatiquement "traduit" par l'exporteur d'org-mode
</p>
</div>
</div>

<div id="outline-container-org80bd042" class="outline-4">
<h4 id="org80bd042"><span class="section-number-4">1.2.3.</span> Gérer des balises particulières et mettre des id et des formulaire</h4>
<div class="outline-text-4" id="text-1-2-3">
<p>
C'est bien beau tout ça, mais comment org-mode sait quelle balise mettre ?
</p>

<p>
De base, tout est exporté en div, mais l'on peut très bien mettre une nav, avec ceci :
</p>

<pre class="example" id="org6527eb5">
#+begin_nav
Tout ce qui est ici sera dans une balise nav !
#+end_nav
</pre>

<p>
Ceci est valable pour toutes les balises suivante :
"article" "aside" "audio" "canvas" "details" "figcaption" "figure" "footer" "header" "menu" "meter" "nav" "output" "progress" "section" "summary" "video".
</p>

<p>
On peut aussi exporter du code html pur, avec la balise suivante (par exemple pour faire un formulaire):
</p>

<pre class="example" id="orgb5f9139">
#+begin_export html

&lt;form action="/ma-page-de-traitement" method="post"&gt;
    &lt;div&gt;
        &lt;label for="name"&gt;Nom :&lt;/label&gt;
        &lt;input type="text" id="name" name="user_name"&gt;
    &lt;/div&gt;
    &lt;div&gt;
        &lt;label for="mail"&gt;e-mail :&lt;/label&gt;
        &lt;input type="email" id="mail" name="user_mail"&gt;
    &lt;/div&gt;
    &lt;div&gt;
        &lt;label for="msg"&gt;Message :&lt;/label&gt;
        &lt;textarea id="msg" name="user_message"&gt;&lt;/textarea&gt;
    &lt;/div&gt;
&lt;/form&gt;

#+end_export
</pre>
</div>
</div>



<div id="outline-container-org18d08d7" class="outline-4">
<h4 id="org18d08d7"><span class="section-number-4">1.2.4.</span> <span class="todo TODO">TODO</span> Insérer un css</h4>
<div class="outline-text-4" id="text-1-2-4">
<pre class="example" id="org863dfc9">
#+HTML_HEAD: &lt;link rel="stylesheet" type="text/css" href="style.css" /&gt;
</pre>
</div>
</div>
</div>
</div>
</div>
</body>
</html>
